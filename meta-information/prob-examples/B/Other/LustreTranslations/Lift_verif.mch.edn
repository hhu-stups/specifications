{:properties 0,
 :definitions 0,
 :deferred_sets 0,
 :file "./prob-examples/B/Other/LustreTranslations/Lift_verif.mch",
 :enumerated_sets 4,
 :variables 19,
 :sha512
 "372cae0f1965f06c9eed30a0b6f1bca48617a87ca3c3f598d922081fbc6bc4f958d2f5a69f0a918171f38872351dc3de6a71ad3b67c19d98428c4737c9304480",
 :static_assertions 0,
 :operations 2,
 :sha256
 "8caf48666776e2cc77bf8e5f94373e8d3eee9e8b76a5308b084bc06a3f5e6c5b",
 :invariants 24,
 :runs
 [{:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 5,
   :memory-usage 163311104,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,Lift_verif_var_up /= {} & Lift_verif_var_down /= {} => not(Lift_verif_var_up(Lift_verif_ref) = TRUE & Lift_verif_var_down(Lift_verif_ref) = TRUE),span_context(span_predicate(b(implication(b(conjunct(b(not_equal(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(426,1,81,29,81,46)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(427,1,81,50,81,52))])),pred,[nodeid(pos(425,1,81,29,81,52))]),b(not_equal(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(429,1,81,57,81,76)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(430,1,81,80,81,82))])),pred,[nodeid(pos(428,1,81,57,81,82))])),pred,[nodeid(pos(424,1,81,29,81,82))]),b(negation(b(conjunct(b(equal(b(function(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(435,1,81,94,81,111)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(436,1,81,112,81,126)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(434,1,81,94,81,127))]),b(boolean_true,boolean,[nodeid(pos(437,1,81,130,81,134))])),pred,[contains_wd_condition,nodeid(pos(433,1,81,94,81,134))]),b(equal(b(function(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(440,1,81,139,81,158)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(441,1,81,159,81,173)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(439,1,81,139,81,174))]),b(boolean_true,boolean,[nodeid(pos(442,1,81,177,81,181))])),pred,[contains_wd_condition,nodeid(pos(438,1,81,139,81,181))])),pred,[contains_wd_condition,nodeid(pos(432,1,81,94,81,181))])),pred,[contains_wd_condition,nodeid(pos(431,1,81,88,81,184))])),pred,[contains_wd_condition,nodeid(pos(423,1,81,29,81,184))]),[bind(Lift_verif_param_up,pred_true),bind(Lift_verif_param_down,pred_true)],[bind(Lift_verif_ok_history,[]),bind(Lift_verif_exec_up_history,[]),bind(Lift_verif_exec_down_history,[]),bind(Lift_verif_down_history,[]),bind(Lift_verif_not_higher_than_highest_floor_history,[]),bind(Lift_verif_floor_history,[]),bind(Lift_verif_not_lower_than_lowest_floor_history,[]),bind(Lift_verif_up_history,[]),bind(Lift_verif_only_exec_up_or_down_history,[]),bind(Lift_verif_is_initialisation,avl_set(node((fd(1,Lift_verif_clocks),pred_false),true,0,empty,empty))),bind(Lift_verif_var_ok,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_down,avl_set(node((fd(1,Lift_verif_refs),pred_false),true,0,empty,empty))),bind(Lift_verif_var_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_not_higher_than_highest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_floor,avl_set(node((fd(1,Lift_verif_refs),int(1)),true,0,empty,empty))),bind(Lift_verif_var_not_lower_than_lowest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_only_exec_up_or_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_is_initialisation,avl_set(node((fd(1,Lift_clocks),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_exec_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_down,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_exec_down,avl_set(node((fd(1,Lift_refs),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_old_floor,avl_set(node((fd(1,Lift_refs),int(0)),true,0,empty,empty))),bind(Node_1.Lift_var_floor,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_tmp_1,[]),bind(Node_1.Lift_var_tmp_0,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty)))]),???)))",
   :model-checking-time-unit :msec,
   :machine-hash "b39e742ee0112d2f4cfd29ac075391c37b939b4b",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:inspect_existing_nodes :find_state_errors
     :find_invariant_violations :partial_order_reduction},
   :model-checking-time 148,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 0,
   :memory-usage 163171056,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,Lift_verif_var_up /= {} & Lift_verif_var_down /= {} => not(Lift_verif_var_up(Lift_verif_ref) = TRUE & Lift_verif_var_down(Lift_verif_ref) = TRUE),span_context(span_predicate(b(implication(b(conjunct(b(not_equal(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(426,1,81,29,81,46)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(427,1,81,50,81,52))])),pred,[nodeid(pos(425,1,81,29,81,52))]),b(not_equal(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(429,1,81,57,81,76)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(430,1,81,80,81,82))])),pred,[nodeid(pos(428,1,81,57,81,82))])),pred,[nodeid(pos(424,1,81,29,81,82))]),b(negation(b(conjunct(b(equal(b(function(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(435,1,81,94,81,111)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(436,1,81,112,81,126)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(434,1,81,94,81,127))]),b(boolean_true,boolean,[nodeid(pos(437,1,81,130,81,134))])),pred,[contains_wd_condition,nodeid(pos(433,1,81,94,81,134))]),b(equal(b(function(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(440,1,81,139,81,158)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(441,1,81,159,81,173)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(439,1,81,139,81,174))]),b(boolean_true,boolean,[nodeid(pos(442,1,81,177,81,181))])),pred,[contains_wd_condition,nodeid(pos(438,1,81,139,81,181))])),pred,[contains_wd_condition,nodeid(pos(432,1,81,94,81,181))])),pred,[contains_wd_condition,nodeid(pos(431,1,81,88,81,184))])),pred,[contains_wd_condition,nodeid(pos(423,1,81,29,81,184))]),[bind(Lift_verif_param_up,pred_true),bind(Lift_verif_param_down,pred_true)],[bind(Lift_verif_ok_history,[]),bind(Lift_verif_exec_up_history,[]),bind(Lift_verif_exec_down_history,[]),bind(Lift_verif_down_history,[]),bind(Lift_verif_not_higher_than_highest_floor_history,[]),bind(Lift_verif_floor_history,[]),bind(Lift_verif_not_lower_than_lowest_floor_history,[]),bind(Lift_verif_up_history,[]),bind(Lift_verif_only_exec_up_or_down_history,[]),bind(Lift_verif_is_initialisation,avl_set(node((fd(1,Lift_verif_clocks),pred_false),true,0,empty,empty))),bind(Lift_verif_var_ok,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_down,avl_set(node((fd(1,Lift_verif_refs),pred_false),true,0,empty,empty))),bind(Lift_verif_var_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_not_higher_than_highest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_floor,avl_set(node((fd(1,Lift_verif_refs),int(1)),true,0,empty,empty))),bind(Lift_verif_var_not_lower_than_lowest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_only_exec_up_or_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_is_initialisation,avl_set(node((fd(1,Lift_clocks),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_exec_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_down,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_exec_down,avl_set(node((fd(1,Lift_refs),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_old_floor,avl_set(node((fd(1,Lift_refs),int(0)),true,0,empty,empty))),bind(Node_1.Lift_var_floor,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_tmp_1,[]),bind(Node_1.Lift_var_tmp_0,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty)))]),operation(Lift_verif_clock_step,0))))",
   :model-checking-time-unit :msec,
   :machine-hash "b39e742ee0112d2f4cfd29ac075391c37b939b4b",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:find_deadlocks :inspect_existing_nodes :find_state_errors},
   :model-checking-time 131,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 0,
   :memory-usage 163160208,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,Lift_verif_var_up /= {} & Lift_verif_var_down /= {} => not(Lift_verif_var_up(Lift_verif_ref) = TRUE & Lift_verif_var_down(Lift_verif_ref) = TRUE),span_context(span_predicate(b(implication(b(conjunct(b(not_equal(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(426,1,81,29,81,46)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(427,1,81,50,81,52))])),pred,[nodeid(pos(425,1,81,29,81,52))]),b(not_equal(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(429,1,81,57,81,76)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(430,1,81,80,81,82))])),pred,[nodeid(pos(428,1,81,57,81,82))])),pred,[nodeid(pos(424,1,81,29,81,82))]),b(negation(b(conjunct(b(equal(b(function(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(435,1,81,94,81,111)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(436,1,81,112,81,126)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(434,1,81,94,81,127))]),b(boolean_true,boolean,[nodeid(pos(437,1,81,130,81,134))])),pred,[contains_wd_condition,nodeid(pos(433,1,81,94,81,134))]),b(equal(b(function(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(440,1,81,139,81,158)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(441,1,81,159,81,173)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(439,1,81,139,81,174))]),b(boolean_true,boolean,[nodeid(pos(442,1,81,177,81,181))])),pred,[contains_wd_condition,nodeid(pos(438,1,81,139,81,181))])),pred,[contains_wd_condition,nodeid(pos(432,1,81,94,81,181))])),pred,[contains_wd_condition,nodeid(pos(431,1,81,88,81,184))])),pred,[contains_wd_condition,nodeid(pos(423,1,81,29,81,184))]),[bind(Lift_verif_param_up,pred_true),bind(Lift_verif_param_down,pred_true)],[bind(Lift_verif_ok_history,[]),bind(Lift_verif_exec_up_history,[]),bind(Lift_verif_exec_down_history,[]),bind(Lift_verif_down_history,[]),bind(Lift_verif_not_higher_than_highest_floor_history,[]),bind(Lift_verif_floor_history,[]),bind(Lift_verif_not_lower_than_lowest_floor_history,[]),bind(Lift_verif_up_history,[]),bind(Lift_verif_only_exec_up_or_down_history,[]),bind(Lift_verif_is_initialisation,avl_set(node((fd(1,Lift_verif_clocks),pred_false),true,0,empty,empty))),bind(Lift_verif_var_ok,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_down,avl_set(node((fd(1,Lift_verif_refs),pred_false),true,0,empty,empty))),bind(Lift_verif_var_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_not_higher_than_highest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_floor,avl_set(node((fd(1,Lift_verif_refs),int(1)),true,0,empty,empty))),bind(Lift_verif_var_not_lower_than_lowest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_only_exec_up_or_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_is_initialisation,avl_set(node((fd(1,Lift_clocks),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_exec_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_down,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_exec_down,avl_set(node((fd(1,Lift_refs),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_old_floor,avl_set(node((fd(1,Lift_refs),int(0)),true,0,empty,empty))),bind(Node_1.Lift_var_floor,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_tmp_1,[]),bind(Node_1.Lift_var_tmp_0,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty)))]),operation(Lift_verif_clock_step,0))))",
   :model-checking-time-unit :msec,
   :machine-hash "b39e742ee0112d2f4cfd29ac075391c37b939b4b",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options #{:inspect_existing_nodes :find_state_errors},
   :model-checking-time 131,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 0,
   :memory-usage 163221200,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,Lift_verif_var_up /= {} & Lift_verif_var_down /= {} => not(Lift_verif_var_up(Lift_verif_ref) = TRUE & Lift_verif_var_down(Lift_verif_ref) = TRUE),span_context(span_predicate(b(implication(b(conjunct(b(not_equal(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(426,1,81,29,81,46)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(427,1,81,50,81,52))])),pred,[nodeid(pos(425,1,81,29,81,52))]),b(not_equal(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(429,1,81,57,81,76)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(430,1,81,80,81,82))])),pred,[nodeid(pos(428,1,81,57,81,82))])),pred,[nodeid(pos(424,1,81,29,81,82))]),b(negation(b(conjunct(b(equal(b(function(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(435,1,81,94,81,111)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(436,1,81,112,81,126)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(434,1,81,94,81,127))]),b(boolean_true,boolean,[nodeid(pos(437,1,81,130,81,134))])),pred,[contains_wd_condition,nodeid(pos(433,1,81,94,81,134))]),b(equal(b(function(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(440,1,81,139,81,158)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(441,1,81,159,81,173)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(439,1,81,139,81,174))]),b(boolean_true,boolean,[nodeid(pos(442,1,81,177,81,181))])),pred,[contains_wd_condition,nodeid(pos(438,1,81,139,81,181))])),pred,[contains_wd_condition,nodeid(pos(432,1,81,94,81,181))])),pred,[contains_wd_condition,nodeid(pos(431,1,81,88,81,184))])),pred,[contains_wd_condition,nodeid(pos(423,1,81,29,81,184))]),[bind(Lift_verif_param_up,pred_true),bind(Lift_verif_param_down,pred_true)],[bind(Lift_verif_ok_history,[]),bind(Lift_verif_exec_up_history,[]),bind(Lift_verif_exec_down_history,[]),bind(Lift_verif_down_history,[]),bind(Lift_verif_not_higher_than_highest_floor_history,[]),bind(Lift_verif_floor_history,[]),bind(Lift_verif_not_lower_than_lowest_floor_history,[]),bind(Lift_verif_up_history,[]),bind(Lift_verif_only_exec_up_or_down_history,[]),bind(Lift_verif_is_initialisation,avl_set(node((fd(1,Lift_verif_clocks),pred_false),true,0,empty,empty))),bind(Lift_verif_var_ok,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_down,avl_set(node((fd(1,Lift_verif_refs),pred_false),true,0,empty,empty))),bind(Lift_verif_var_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_not_higher_than_highest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_floor,avl_set(node((fd(1,Lift_verif_refs),int(1)),true,0,empty,empty))),bind(Lift_verif_var_not_lower_than_lowest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_only_exec_up_or_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_is_initialisation,avl_set(node((fd(1,Lift_clocks),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_exec_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_down,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_exec_down,avl_set(node((fd(1,Lift_refs),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_old_floor,avl_set(node((fd(1,Lift_refs),int(0)),true,0,empty,empty))),bind(Node_1.Lift_var_floor,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_tmp_1,[]),bind(Node_1.Lift_var_tmp_0,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty)))]),operation(Lift_verif_clock_step,0))))",
   :model-checking-time-unit :msec,
   :machine-hash "b39e742ee0112d2f4cfd29ac075391c37b939b4b",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:inspect_existing_nodes :find_state_errors
     :find_invariant_violations},
   :model-checking-time 142,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 4,
   :memory-usage 163256032,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,Lift_verif_var_up /= {} & Lift_verif_var_down /= {} => not(Lift_verif_var_up(Lift_verif_ref) = TRUE & Lift_verif_var_down(Lift_verif_ref) = TRUE),span_context(span_predicate(b(implication(b(conjunct(b(not_equal(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(426,1,81,29,81,46)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(427,1,81,50,81,52))])),pred,[nodeid(pos(425,1,81,29,81,52))]),b(not_equal(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(429,1,81,57,81,76)),loc(local,Lift_verif,abstract_variables)]),b(empty_set,set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(430,1,81,80,81,82))])),pred,[nodeid(pos(428,1,81,57,81,82))])),pred,[nodeid(pos(424,1,81,29,81,82))]),b(negation(b(conjunct(b(equal(b(function(b(identifier(Lift_verif_var_up),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(435,1,81,94,81,111)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(436,1,81,112,81,126)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(434,1,81,94,81,127))]),b(boolean_true,boolean,[nodeid(pos(437,1,81,130,81,134))])),pred,[contains_wd_condition,nodeid(pos(433,1,81,94,81,134))]),b(equal(b(function(b(identifier(Lift_verif_var_down),set(couple(global(Lift_verif_refs),boolean)),[nodeid(pos(440,1,81,139,81,158)),loc(local,Lift_verif,abstract_variables)]),b(identifier(Lift_verif_ref),global(Lift_verif_refs),[nodeid(pos(441,1,81,159,81,173)),loc(local,Lift_verif,enumerated_elements),readonly,enumerated_set_element,def(enumerated_element,Lift_verif)])),boolean,[contains_wd_condition,nodeid(pos(439,1,81,139,81,174))]),b(boolean_true,boolean,[nodeid(pos(442,1,81,177,81,181))])),pred,[contains_wd_condition,nodeid(pos(438,1,81,139,81,181))])),pred,[contains_wd_condition,nodeid(pos(432,1,81,94,81,181))])),pred,[contains_wd_condition,nodeid(pos(431,1,81,88,81,184))])),pred,[contains_wd_condition,nodeid(pos(423,1,81,29,81,184))]),[bind(Lift_verif_param_up,pred_true),bind(Lift_verif_param_down,pred_true)],[bind(Lift_verif_ok_history,[]),bind(Lift_verif_exec_up_history,[]),bind(Lift_verif_exec_down_history,[]),bind(Lift_verif_down_history,[]),bind(Lift_verif_not_higher_than_highest_floor_history,[]),bind(Lift_verif_floor_history,[]),bind(Lift_verif_not_lower_than_lowest_floor_history,[]),bind(Lift_verif_up_history,[]),bind(Lift_verif_only_exec_up_or_down_history,[]),bind(Lift_verif_is_initialisation,avl_set(node((fd(1,Lift_verif_clocks),pred_false),true,0,empty,empty))),bind(Lift_verif_var_ok,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_exec_down,avl_set(node((fd(1,Lift_verif_refs),pred_false),true,0,empty,empty))),bind(Lift_verif_var_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_not_higher_than_highest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_floor,avl_set(node((fd(1,Lift_verif_refs),int(1)),true,0,empty,empty))),bind(Lift_verif_var_not_lower_than_lowest_floor,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_up,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Lift_verif_var_only_exec_up_or_down,avl_set(node((fd(1,Lift_verif_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_is_initialisation,avl_set(node((fd(1,Lift_clocks),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_exec_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_down,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty))),bind(Node_1.Lift_var_exec_down,avl_set(node((fd(1,Lift_refs),pred_false),true,0,empty,empty))),bind(Node_1.Lift_var_old_floor,avl_set(node((fd(1,Lift_refs),int(0)),true,0,empty,empty))),bind(Node_1.Lift_var_floor,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_tmp_1,[]),bind(Node_1.Lift_var_tmp_0,avl_set(node((fd(1,Lift_refs),int(1)),true,0,empty,empty))),bind(Node_1.Lift_var_up,avl_set(node((fd(1,Lift_refs),pred_true),true,0,empty,empty)))]),???)))",
   :model-checking-time-unit :msec,
   :machine-hash "b39e742ee0112d2f4cfd29ac075391c37b939b4b",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:find_deadlocks :inspect_existing_nodes :find_state_errors
     :partial_order_reduction},
   :model-checking-time 134,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}],
 :dynamic_assertions 0,
 :constants 0}
