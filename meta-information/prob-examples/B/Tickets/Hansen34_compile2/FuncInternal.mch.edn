{:properties 0,
 :definitions 0,
 :deferred_sets 0,
 :number-of-transitions 4,
 :deadlock false,
 :file "./prob-examples/B/Tickets/Hansen34_compile2/FuncInternal.mch",
 :enumerated_sets 0,
 :variables 1,
 :number-of-states 0,
 :included-machines
 ["./prob-examples/B/Tickets/Hansen34_compile2/FuncInternal.mch"],
 :sha512
 "f951f5271d430b646e2ca3fb08200f8e57d32772e3943849b75054cc02f3ec3dfb8d66cf0e55e03aeaf77373dc6c5c7f8dc333aebd97b8102a42c2c3506486d5",
 :comment "",
 :files 1,
 :static_assertions 0,
 :operations 1,
 :sha256
 "3e90c97863d4cab1b7152ffde6cc9f6c270584b5368d1d3bd2281bb4cf7e38d4",
 :invariants 1,
 :runs
 [{:tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :memory-usage 157286400,
   :model-checking-time-unit :msec,
   :commit "a2072ff1b7e810931787fc1d214ee8cc5cfbf373",
   :timeout 1800000,
   :model-checking-time 270,
   :revision-date "  Mon Jan 14 21:18:10 2019 +0100",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 0,
   :memory-usage 162637312,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,out : POW(struct(a:1 .. 100)),span_context(span_predicate(b(member(b(identifier(out),set(record([field(a,integer)])),[nodeid(pos(69,1,36,16,36,19)),introduced_by(operation)]),b(pow_subset(b(struct(b(rec([field(a,b(interval(b(integer(1),integer,[nodeid(pos(75,1,36,35,36,36))]),b(integer(100),integer,[nodeid(pos(76,1,36,40,36,43))])),set(integer),[nodeid(pos(74,1,36,35,36,43))]))]),record([field(a,set(integer))]),[nodeid(pos(71,1,36,26,36,44))])),set(record([field(a,integer)])),[nodeid(pos(71,1,36,26,36,44))])),set(set(record([field(a,integer)]))),[nodeid(pos(70,1,36,22,36,45))])),pred,[nodeid(pos(68,1,36,16,36,45))]),[bind(p,int(0))],[bind(out,avl_set(node(rec([field(a,int(63))]),true,0,node(rec([field(a,int(31))]),true,0,node(rec([field(a,int(15))]),true,0,node(rec([field(a,int(7))]),true,0,node(rec([field(a,int(3))]),true,0,node(rec([field(a,int(1))]),true,0,node(rec([field(a,int(0))]),true,0,empty,empty),node(rec([field(a,int(2))]),true,0,empty,empty)),node(rec([field(a,int(5))]),true,0,node(rec([field(a,int(4))]),true,0,empty,empty),node(rec([field(a,int(6))]),true,0,empty,empty))),node(rec([field(a,int(11))]),true,0,node(rec([field(a,int(9))]),true,0,node(rec([field(a,int(8))]),true,0,empty,empty),node(rec([field(a,int(10))]),true,0,empty,empty)),node(rec([field(a,int(13))]),true,0,node(rec([field(a,int(12))]),true,0,empty,empty),node(rec([field(a,int(14))]),true,0,empty,empty)))),node(rec([field(a,int(23))]),true,0,node(rec([field(a,int(19))]),true,0,node(rec([field(a,int(17))]),true,0,node(rec([field(a,int(16))]),true,0,empty,empty),node(rec([field(a,int(18))]),true,0,empty,empty)),node(rec([field(a,int(21))]),true,0,node(rec([field(a,int(20))]),true,0,empty,empty),node(rec([field(a,int(22))]),true,0,empty,empty))),node(rec([field(a,int(27))]),true,0,node(rec([field(a,int(25))]),true,0,node(rec([field(a,int(24))]),true,0,empty,empty),node(rec([field(a,int(26))]),true,0,empty,empty)),node(rec([field(a,int(29))]),true,0,node(rec([field(a,int(28))]),true,0,empty,empty),node(rec([field(a,int(30))]),true,0,empty,empty))))),node(rec([field(a,int(47))]),true,0,node(rec([field(a,int(39))]),true,0,node(rec([field(a,int(35))]),true,0,node(rec([field(a,int(33))]),true,0,node(rec([field(a,int(32))]),true,0,empty,empty),node(rec([field(a,int(34))]),true,0,empty,empty)),node(rec([field(a,int(37))]),true,0,node(rec([field(a,int(36))]),true,0,empty,empty),node(rec([field(a,int(38))]),true,0,empty,empty))),node(rec([field(a,int(43))]),true,0,node(rec([field(a,int(41))]),true,0,node(rec([field(a,int(40))]),true,0,empty,empty),node(rec([field(a,int(42))]),true,0,empty,empty)),node(rec([field(a,int(45))]),true,0,node(rec([field(a,int(44))]),true,0,empty,empty),node(rec([field(a,int(46))]),true,0,empty,empty)))),node(rec([field(a,int(55))]),true,0,node(rec([field(a,int(51))]),true,0,node(rec([field(a,int(49))]),true,0,node(rec([field(a,int(48))]),true,0,empty,empty),node(rec([field(a,int(50))]),true,0,empty,empty)),node(rec([field(a,int(53))]),true,0,node(rec([field(a,int(52))]),true,0,empty,empty),node(rec([field(a,int(54))]),true,0,empty,empty))),node(rec([field(a,int(59))]),true,0,node(rec([field(a,int(57))]),true,0,node(rec([field(a,int(56))]),true,0,empty,empty),node(rec([field(a,int(58))]),true,0,empty,empty)),node(rec([field(a,int(61))]),true,0,node(rec([field(a,int(60))]),true,0,empty,empty),node(rec([field(a,int(62))]),true,0,empty,empty)))))),node(rec([field(a,int(79))]),true,1,node(rec([field(a,int(71))]),true,0,node(rec([field(a,int(67))]),true,0,node(rec([field(a,int(65))]),true,0,node(rec([field(a,int(64))]),true,0,empty,empty),node(rec([field(a,int(66))]),true,0,empty,empty)),node(rec([field(a,int(69))]),true,0,node(rec([field(a,int(68))]),true,0,empty,empty),node(rec([field(a,int(70))]),true,0,empty,empty))),node(rec([field(a,int(75))]),true,0,node(rec([field(a,int(73))]),true,0,node(rec([field(a,int(72))]),true,0,empty,empty),node(rec([field(a,int(74))]),true,0,empty,empty)),node(rec([field(a,int(77))]),true,0,node(rec([field(a,int(76))]),true,0,empty,empty),node(rec([field(a,int(78))]),true,0,empty,empty)))),node(rec([field(a,int(87))]),true,1,node(rec([field(a,int(83))]),true,0,node(rec([field(a,int(81))]),true,0,node(rec([field(a,int(80))]),true,0,empty,empty),node(rec([field(a,int(82))]),true,0,empty,empty)),node(rec([field(a,int(85))]),true,0,node(rec([field(a,int(84))]),true,0,empty,empty),node(rec([field(a,int(86))]),true,0,empty,empty))),node(rec([field(a,int(95))]),true,0,node(rec([field(a,int(91))]),true,0,node(rec([field(a,int(89))]),true,0,node(rec([field(a,int(88))]),true,0,empty,empty),node(rec([field(a,int(90))]),true,0,empty,empty)),node(rec([field(a,int(93))]),true,0,node(rec([field(a,int(92))]),true,0,empty,empty),node(rec([field(a,int(94))]),true,0,empty,empty))),node(rec([field(a,int(97))]),true,1,node(rec([field(a,int(96))]),true,0,empty,empty),node(rec([field(a,int(98))]),true,1,empty,node(rec([field(a,int(99))]),true,0,empty,empty))))))))),bind(COMP_comp1,string(NOT_EXECUTED))]),operation(FUNC_foo,0))))",
   :model-checking-time-unit :msec,
   :machine-hash "8f7fb7c6bef76d9ed7a7728e39e8d0d495544c86",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options #{:inspect_existing_nodes :find_state_errors},
   :model-checking-time 268,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 1,
   :memory-usage 162658864,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,out : POW(struct(a:1 .. 100)),span_context(span_predicate(b(member(b(identifier(out),set(record([field(a,integer)])),[nodeid(pos(69,1,36,16,36,19)),introduced_by(operation)]),b(pow_subset(b(struct(b(rec([field(a,b(interval(b(integer(1),integer,[nodeid(pos(75,1,36,35,36,36))]),b(integer(100),integer,[nodeid(pos(76,1,36,40,36,43))])),set(integer),[nodeid(pos(74,1,36,35,36,43))]))]),record([field(a,set(integer))]),[nodeid(pos(71,1,36,26,36,44))])),set(record([field(a,integer)])),[nodeid(pos(71,1,36,26,36,44))])),set(set(record([field(a,integer)]))),[nodeid(pos(70,1,36,22,36,45))])),pred,[nodeid(pos(68,1,36,16,36,45))]),[bind(p,int(0))],[bind(out,avl_set(node(rec([field(a,int(63))]),true,0,node(rec([field(a,int(31))]),true,0,node(rec([field(a,int(15))]),true,0,node(rec([field(a,int(7))]),true,0,node(rec([field(a,int(3))]),true,0,node(rec([field(a,int(1))]),true,0,node(rec([field(a,int(0))]),true,0,empty,empty),node(rec([field(a,int(2))]),true,0,empty,empty)),node(rec([field(a,int(5))]),true,0,node(rec([field(a,int(4))]),true,0,empty,empty),node(rec([field(a,int(6))]),true,0,empty,empty))),node(rec([field(a,int(11))]),true,0,node(rec([field(a,int(9))]),true,0,node(rec([field(a,int(8))]),true,0,empty,empty),node(rec([field(a,int(10))]),true,0,empty,empty)),node(rec([field(a,int(13))]),true,0,node(rec([field(a,int(12))]),true,0,empty,empty),node(rec([field(a,int(14))]),true,0,empty,empty)))),node(rec([field(a,int(23))]),true,0,node(rec([field(a,int(19))]),true,0,node(rec([field(a,int(17))]),true,0,node(rec([field(a,int(16))]),true,0,empty,empty),node(rec([field(a,int(18))]),true,0,empty,empty)),node(rec([field(a,int(21))]),true,0,node(rec([field(a,int(20))]),true,0,empty,empty),node(rec([field(a,int(22))]),true,0,empty,empty))),node(rec([field(a,int(27))]),true,0,node(rec([field(a,int(25))]),true,0,node(rec([field(a,int(24))]),true,0,empty,empty),node(rec([field(a,int(26))]),true,0,empty,empty)),node(rec([field(a,int(29))]),true,0,node(rec([field(a,int(28))]),true,0,empty,empty),node(rec([field(a,int(30))]),true,0,empty,empty))))),node(rec([field(a,int(47))]),true,0,node(rec([field(a,int(39))]),true,0,node(rec([field(a,int(35))]),true,0,node(rec([field(a,int(33))]),true,0,node(rec([field(a,int(32))]),true,0,empty,empty),node(rec([field(a,int(34))]),true,0,empty,empty)),node(rec([field(a,int(37))]),true,0,node(rec([field(a,int(36))]),true,0,empty,empty),node(rec([field(a,int(38))]),true,0,empty,empty))),node(rec([field(a,int(43))]),true,0,node(rec([field(a,int(41))]),true,0,node(rec([field(a,int(40))]),true,0,empty,empty),node(rec([field(a,int(42))]),true,0,empty,empty)),node(rec([field(a,int(45))]),true,0,node(rec([field(a,int(44))]),true,0,empty,empty),node(rec([field(a,int(46))]),true,0,empty,empty)))),node(rec([field(a,int(55))]),true,0,node(rec([field(a,int(51))]),true,0,node(rec([field(a,int(49))]),true,0,node(rec([field(a,int(48))]),true,0,empty,empty),node(rec([field(a,int(50))]),true,0,empty,empty)),node(rec([field(a,int(53))]),true,0,node(rec([field(a,int(52))]),true,0,empty,empty),node(rec([field(a,int(54))]),true,0,empty,empty))),node(rec([field(a,int(59))]),true,0,node(rec([field(a,int(57))]),true,0,node(rec([field(a,int(56))]),true,0,empty,empty),node(rec([field(a,int(58))]),true,0,empty,empty)),node(rec([field(a,int(61))]),true,0,node(rec([field(a,int(60))]),true,0,empty,empty),node(rec([field(a,int(62))]),true,0,empty,empty)))))),node(rec([field(a,int(79))]),true,1,node(rec([field(a,int(71))]),true,0,node(rec([field(a,int(67))]),true,0,node(rec([field(a,int(65))]),true,0,node(rec([field(a,int(64))]),true,0,empty,empty),node(rec([field(a,int(66))]),true,0,empty,empty)),node(rec([field(a,int(69))]),true,0,node(rec([field(a,int(68))]),true,0,empty,empty),node(rec([field(a,int(70))]),true,0,empty,empty))),node(rec([field(a,int(75))]),true,0,node(rec([field(a,int(73))]),true,0,node(rec([field(a,int(72))]),true,0,empty,empty),node(rec([field(a,int(74))]),true,0,empty,empty)),node(rec([field(a,int(77))]),true,0,node(rec([field(a,int(76))]),true,0,empty,empty),node(rec([field(a,int(78))]),true,0,empty,empty)))),node(rec([field(a,int(87))]),true,1,node(rec([field(a,int(83))]),true,0,node(rec([field(a,int(81))]),true,0,node(rec([field(a,int(80))]),true,0,empty,empty),node(rec([field(a,int(82))]),true,0,empty,empty)),node(rec([field(a,int(85))]),true,0,node(rec([field(a,int(84))]),true,0,empty,empty),node(rec([field(a,int(86))]),true,0,empty,empty))),node(rec([field(a,int(95))]),true,0,node(rec([field(a,int(91))]),true,0,node(rec([field(a,int(89))]),true,0,node(rec([field(a,int(88))]),true,0,empty,empty),node(rec([field(a,int(90))]),true,0,empty,empty)),node(rec([field(a,int(93))]),true,0,node(rec([field(a,int(92))]),true,0,empty,empty),node(rec([field(a,int(94))]),true,0,empty,empty))),node(rec([field(a,int(97))]),true,1,node(rec([field(a,int(96))]),true,0,empty,empty),node(rec([field(a,int(98))]),true,1,empty,node(rec([field(a,int(99))]),true,0,empty,empty))))))))),bind(COMP_comp1,string(NOT_EXECUTED))]),operation(FUNC_foo,0))))",
   :model-checking-time-unit :msec,
   :machine-hash "8f7fb7c6bef76d9ed7a7728e39e8d0d495544c86",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:inspect_existing_nodes :find_state_errors
     :find_invariant_violations},
   :model-checking-time 261,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 4,
   :memory-usage 162732688,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,out : POW(struct(a:1 .. 100)),span_context(span_predicate(b(member(b(identifier(out),set(record([field(a,integer)])),[nodeid(pos(69,1,36,16,36,19)),introduced_by(operation)]),b(pow_subset(b(struct(b(rec([field(a,b(interval(b(integer(1),integer,[nodeid(pos(75,1,36,35,36,36))]),b(integer(100),integer,[nodeid(pos(76,1,36,40,36,43))])),set(integer),[nodeid(pos(74,1,36,35,36,43))]))]),record([field(a,set(integer))]),[nodeid(pos(71,1,36,26,36,44))])),set(record([field(a,integer)])),[nodeid(pos(71,1,36,26,36,44))])),set(set(record([field(a,integer)]))),[nodeid(pos(70,1,36,22,36,45))])),pred,[nodeid(pos(68,1,36,16,36,45))]),[bind(p,int(0))],[bind(out,avl_set(node(rec([field(a,int(63))]),true,0,node(rec([field(a,int(31))]),true,0,node(rec([field(a,int(15))]),true,0,node(rec([field(a,int(7))]),true,0,node(rec([field(a,int(3))]),true,0,node(rec([field(a,int(1))]),true,0,node(rec([field(a,int(0))]),true,0,empty,empty),node(rec([field(a,int(2))]),true,0,empty,empty)),node(rec([field(a,int(5))]),true,0,node(rec([field(a,int(4))]),true,0,empty,empty),node(rec([field(a,int(6))]),true,0,empty,empty))),node(rec([field(a,int(11))]),true,0,node(rec([field(a,int(9))]),true,0,node(rec([field(a,int(8))]),true,0,empty,empty),node(rec([field(a,int(10))]),true,0,empty,empty)),node(rec([field(a,int(13))]),true,0,node(rec([field(a,int(12))]),true,0,empty,empty),node(rec([field(a,int(14))]),true,0,empty,empty)))),node(rec([field(a,int(23))]),true,0,node(rec([field(a,int(19))]),true,0,node(rec([field(a,int(17))]),true,0,node(rec([field(a,int(16))]),true,0,empty,empty),node(rec([field(a,int(18))]),true,0,empty,empty)),node(rec([field(a,int(21))]),true,0,node(rec([field(a,int(20))]),true,0,empty,empty),node(rec([field(a,int(22))]),true,0,empty,empty))),node(rec([field(a,int(27))]),true,0,node(rec([field(a,int(25))]),true,0,node(rec([field(a,int(24))]),true,0,empty,empty),node(rec([field(a,int(26))]),true,0,empty,empty)),node(rec([field(a,int(29))]),true,0,node(rec([field(a,int(28))]),true,0,empty,empty),node(rec([field(a,int(30))]),true,0,empty,empty))))),node(rec([field(a,int(47))]),true,0,node(rec([field(a,int(39))]),true,0,node(rec([field(a,int(35))]),true,0,node(rec([field(a,int(33))]),true,0,node(rec([field(a,int(32))]),true,0,empty,empty),node(rec([field(a,int(34))]),true,0,empty,empty)),node(rec([field(a,int(37))]),true,0,node(rec([field(a,int(36))]),true,0,empty,empty),node(rec([field(a,int(38))]),true,0,empty,empty))),node(rec([field(a,int(43))]),true,0,node(rec([field(a,int(41))]),true,0,node(rec([field(a,int(40))]),true,0,empty,empty),node(rec([field(a,int(42))]),true,0,empty,empty)),node(rec([field(a,int(45))]),true,0,node(rec([field(a,int(44))]),true,0,empty,empty),node(rec([field(a,int(46))]),true,0,empty,empty)))),node(rec([field(a,int(55))]),true,0,node(rec([field(a,int(51))]),true,0,node(rec([field(a,int(49))]),true,0,node(rec([field(a,int(48))]),true,0,empty,empty),node(rec([field(a,int(50))]),true,0,empty,empty)),node(rec([field(a,int(53))]),true,0,node(rec([field(a,int(52))]),true,0,empty,empty),node(rec([field(a,int(54))]),true,0,empty,empty))),node(rec([field(a,int(59))]),true,0,node(rec([field(a,int(57))]),true,0,node(rec([field(a,int(56))]),true,0,empty,empty),node(rec([field(a,int(58))]),true,0,empty,empty)),node(rec([field(a,int(61))]),true,0,node(rec([field(a,int(60))]),true,0,empty,empty),node(rec([field(a,int(62))]),true,0,empty,empty)))))),node(rec([field(a,int(79))]),true,1,node(rec([field(a,int(71))]),true,0,node(rec([field(a,int(67))]),true,0,node(rec([field(a,int(65))]),true,0,node(rec([field(a,int(64))]),true,0,empty,empty),node(rec([field(a,int(66))]),true,0,empty,empty)),node(rec([field(a,int(69))]),true,0,node(rec([field(a,int(68))]),true,0,empty,empty),node(rec([field(a,int(70))]),true,0,empty,empty))),node(rec([field(a,int(75))]),true,0,node(rec([field(a,int(73))]),true,0,node(rec([field(a,int(72))]),true,0,empty,empty),node(rec([field(a,int(74))]),true,0,empty,empty)),node(rec([field(a,int(77))]),true,0,node(rec([field(a,int(76))]),true,0,empty,empty),node(rec([field(a,int(78))]),true,0,empty,empty)))),node(rec([field(a,int(87))]),true,1,node(rec([field(a,int(83))]),true,0,node(rec([field(a,int(81))]),true,0,node(rec([field(a,int(80))]),true,0,empty,empty),node(rec([field(a,int(82))]),true,0,empty,empty)),node(rec([field(a,int(85))]),true,0,node(rec([field(a,int(84))]),true,0,empty,empty),node(rec([field(a,int(86))]),true,0,empty,empty))),node(rec([field(a,int(95))]),true,0,node(rec([field(a,int(91))]),true,0,node(rec([field(a,int(89))]),true,0,node(rec([field(a,int(88))]),true,0,empty,empty),node(rec([field(a,int(90))]),true,0,empty,empty)),node(rec([field(a,int(93))]),true,0,node(rec([field(a,int(92))]),true,0,empty,empty),node(rec([field(a,int(94))]),true,0,empty,empty))),node(rec([field(a,int(97))]),true,1,node(rec([field(a,int(96))]),true,0,empty,empty),node(rec([field(a,int(98))]),true,1,empty,node(rec([field(a,int(99))]),true,0,empty,empty))))))))),bind(COMP_comp1,string(NOT_EXECUTED))]),???)))",
   :model-checking-time-unit :msec,
   :machine-hash "8f7fb7c6bef76d9ed7a7728e39e8d0d495544c86",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:find_deadlocks :inspect_existing_nodes :find_state_errors
     :partial_order_reduction},
   :model-checking-time 262,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 4,
   :memory-usage 162748768,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,out : POW(struct(a:1 .. 100)),span_context(span_predicate(b(member(b(identifier(out),set(record([field(a,integer)])),[nodeid(pos(69,1,36,16,36,19)),introduced_by(operation)]),b(pow_subset(b(struct(b(rec([field(a,b(interval(b(integer(1),integer,[nodeid(pos(75,1,36,35,36,36))]),b(integer(100),integer,[nodeid(pos(76,1,36,40,36,43))])),set(integer),[nodeid(pos(74,1,36,35,36,43))]))]),record([field(a,set(integer))]),[nodeid(pos(71,1,36,26,36,44))])),set(record([field(a,integer)])),[nodeid(pos(71,1,36,26,36,44))])),set(set(record([field(a,integer)]))),[nodeid(pos(70,1,36,22,36,45))])),pred,[nodeid(pos(68,1,36,16,36,45))]),[bind(p,int(0))],[bind(out,avl_set(node(rec([field(a,int(63))]),true,0,node(rec([field(a,int(31))]),true,0,node(rec([field(a,int(15))]),true,0,node(rec([field(a,int(7))]),true,0,node(rec([field(a,int(3))]),true,0,node(rec([field(a,int(1))]),true,0,node(rec([field(a,int(0))]),true,0,empty,empty),node(rec([field(a,int(2))]),true,0,empty,empty)),node(rec([field(a,int(5))]),true,0,node(rec([field(a,int(4))]),true,0,empty,empty),node(rec([field(a,int(6))]),true,0,empty,empty))),node(rec([field(a,int(11))]),true,0,node(rec([field(a,int(9))]),true,0,node(rec([field(a,int(8))]),true,0,empty,empty),node(rec([field(a,int(10))]),true,0,empty,empty)),node(rec([field(a,int(13))]),true,0,node(rec([field(a,int(12))]),true,0,empty,empty),node(rec([field(a,int(14))]),true,0,empty,empty)))),node(rec([field(a,int(23))]),true,0,node(rec([field(a,int(19))]),true,0,node(rec([field(a,int(17))]),true,0,node(rec([field(a,int(16))]),true,0,empty,empty),node(rec([field(a,int(18))]),true,0,empty,empty)),node(rec([field(a,int(21))]),true,0,node(rec([field(a,int(20))]),true,0,empty,empty),node(rec([field(a,int(22))]),true,0,empty,empty))),node(rec([field(a,int(27))]),true,0,node(rec([field(a,int(25))]),true,0,node(rec([field(a,int(24))]),true,0,empty,empty),node(rec([field(a,int(26))]),true,0,empty,empty)),node(rec([field(a,int(29))]),true,0,node(rec([field(a,int(28))]),true,0,empty,empty),node(rec([field(a,int(30))]),true,0,empty,empty))))),node(rec([field(a,int(47))]),true,0,node(rec([field(a,int(39))]),true,0,node(rec([field(a,int(35))]),true,0,node(rec([field(a,int(33))]),true,0,node(rec([field(a,int(32))]),true,0,empty,empty),node(rec([field(a,int(34))]),true,0,empty,empty)),node(rec([field(a,int(37))]),true,0,node(rec([field(a,int(36))]),true,0,empty,empty),node(rec([field(a,int(38))]),true,0,empty,empty))),node(rec([field(a,int(43))]),true,0,node(rec([field(a,int(41))]),true,0,node(rec([field(a,int(40))]),true,0,empty,empty),node(rec([field(a,int(42))]),true,0,empty,empty)),node(rec([field(a,int(45))]),true,0,node(rec([field(a,int(44))]),true,0,empty,empty),node(rec([field(a,int(46))]),true,0,empty,empty)))),node(rec([field(a,int(55))]),true,0,node(rec([field(a,int(51))]),true,0,node(rec([field(a,int(49))]),true,0,node(rec([field(a,int(48))]),true,0,empty,empty),node(rec([field(a,int(50))]),true,0,empty,empty)),node(rec([field(a,int(53))]),true,0,node(rec([field(a,int(52))]),true,0,empty,empty),node(rec([field(a,int(54))]),true,0,empty,empty))),node(rec([field(a,int(59))]),true,0,node(rec([field(a,int(57))]),true,0,node(rec([field(a,int(56))]),true,0,empty,empty),node(rec([field(a,int(58))]),true,0,empty,empty)),node(rec([field(a,int(61))]),true,0,node(rec([field(a,int(60))]),true,0,empty,empty),node(rec([field(a,int(62))]),true,0,empty,empty)))))),node(rec([field(a,int(79))]),true,1,node(rec([field(a,int(71))]),true,0,node(rec([field(a,int(67))]),true,0,node(rec([field(a,int(65))]),true,0,node(rec([field(a,int(64))]),true,0,empty,empty),node(rec([field(a,int(66))]),true,0,empty,empty)),node(rec([field(a,int(69))]),true,0,node(rec([field(a,int(68))]),true,0,empty,empty),node(rec([field(a,int(70))]),true,0,empty,empty))),node(rec([field(a,int(75))]),true,0,node(rec([field(a,int(73))]),true,0,node(rec([field(a,int(72))]),true,0,empty,empty),node(rec([field(a,int(74))]),true,0,empty,empty)),node(rec([field(a,int(77))]),true,0,node(rec([field(a,int(76))]),true,0,empty,empty),node(rec([field(a,int(78))]),true,0,empty,empty)))),node(rec([field(a,int(87))]),true,1,node(rec([field(a,int(83))]),true,0,node(rec([field(a,int(81))]),true,0,node(rec([field(a,int(80))]),true,0,empty,empty),node(rec([field(a,int(82))]),true,0,empty,empty)),node(rec([field(a,int(85))]),true,0,node(rec([field(a,int(84))]),true,0,empty,empty),node(rec([field(a,int(86))]),true,0,empty,empty))),node(rec([field(a,int(95))]),true,0,node(rec([field(a,int(91))]),true,0,node(rec([field(a,int(89))]),true,0,node(rec([field(a,int(88))]),true,0,empty,empty),node(rec([field(a,int(90))]),true,0,empty,empty)),node(rec([field(a,int(93))]),true,0,node(rec([field(a,int(92))]),true,0,empty,empty),node(rec([field(a,int(94))]),true,0,empty,empty))),node(rec([field(a,int(97))]),true,1,node(rec([field(a,int(96))]),true,0,empty,empty),node(rec([field(a,int(98))]),true,1,empty,node(rec([field(a,int(99))]),true,0,empty,empty))))))))),bind(COMP_comp1,string(NOT_EXECUTED))]),???)))",
   :model-checking-time-unit :msec,
   :machine-hash "8f7fb7c6bef76d9ed7a7728e39e8d0d495544c86",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:inspect_existing_nodes :find_state_errors
     :find_invariant_violations :partial_order_reduction},
   :model-checking-time 260,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}
  {:errors ("assert_error"),
   :states 0,
   :transitions 4,
   :tool :prob,
   :hardware
   {:name :hilbert-ivybridge,
    :memory "2 GB",
    :cpu "Intel E5-2697v2 (Ivy Bridge EP), 2,70GHz"},
   :static-analysis-time 1,
   :memory-usage 162647840,
   :result
   "state_error(abort_error(assert_error,ASSERT violated: ,out : POW(struct(a:1 .. 100)),span_context(span_predicate(b(member(b(identifier(out),set(record([field(a,integer)])),[nodeid(pos(69,1,36,16,36,19)),introduced_by(operation)]),b(pow_subset(b(struct(b(rec([field(a,b(interval(b(integer(1),integer,[nodeid(pos(75,1,36,35,36,36))]),b(integer(100),integer,[nodeid(pos(76,1,36,40,36,43))])),set(integer),[nodeid(pos(74,1,36,35,36,43))]))]),record([field(a,set(integer))]),[nodeid(pos(71,1,36,26,36,44))])),set(record([field(a,integer)])),[nodeid(pos(71,1,36,26,36,44))])),set(set(record([field(a,integer)]))),[nodeid(pos(70,1,36,22,36,45))])),pred,[nodeid(pos(68,1,36,16,36,45))]),[bind(p,int(0))],[bind(out,avl_set(node(rec([field(a,int(63))]),true,0,node(rec([field(a,int(31))]),true,0,node(rec([field(a,int(15))]),true,0,node(rec([field(a,int(7))]),true,0,node(rec([field(a,int(3))]),true,0,node(rec([field(a,int(1))]),true,0,node(rec([field(a,int(0))]),true,0,empty,empty),node(rec([field(a,int(2))]),true,0,empty,empty)),node(rec([field(a,int(5))]),true,0,node(rec([field(a,int(4))]),true,0,empty,empty),node(rec([field(a,int(6))]),true,0,empty,empty))),node(rec([field(a,int(11))]),true,0,node(rec([field(a,int(9))]),true,0,node(rec([field(a,int(8))]),true,0,empty,empty),node(rec([field(a,int(10))]),true,0,empty,empty)),node(rec([field(a,int(13))]),true,0,node(rec([field(a,int(12))]),true,0,empty,empty),node(rec([field(a,int(14))]),true,0,empty,empty)))),node(rec([field(a,int(23))]),true,0,node(rec([field(a,int(19))]),true,0,node(rec([field(a,int(17))]),true,0,node(rec([field(a,int(16))]),true,0,empty,empty),node(rec([field(a,int(18))]),true,0,empty,empty)),node(rec([field(a,int(21))]),true,0,node(rec([field(a,int(20))]),true,0,empty,empty),node(rec([field(a,int(22))]),true,0,empty,empty))),node(rec([field(a,int(27))]),true,0,node(rec([field(a,int(25))]),true,0,node(rec([field(a,int(24))]),true,0,empty,empty),node(rec([field(a,int(26))]),true,0,empty,empty)),node(rec([field(a,int(29))]),true,0,node(rec([field(a,int(28))]),true,0,empty,empty),node(rec([field(a,int(30))]),true,0,empty,empty))))),node(rec([field(a,int(47))]),true,0,node(rec([field(a,int(39))]),true,0,node(rec([field(a,int(35))]),true,0,node(rec([field(a,int(33))]),true,0,node(rec([field(a,int(32))]),true,0,empty,empty),node(rec([field(a,int(34))]),true,0,empty,empty)),node(rec([field(a,int(37))]),true,0,node(rec([field(a,int(36))]),true,0,empty,empty),node(rec([field(a,int(38))]),true,0,empty,empty))),node(rec([field(a,int(43))]),true,0,node(rec([field(a,int(41))]),true,0,node(rec([field(a,int(40))]),true,0,empty,empty),node(rec([field(a,int(42))]),true,0,empty,empty)),node(rec([field(a,int(45))]),true,0,node(rec([field(a,int(44))]),true,0,empty,empty),node(rec([field(a,int(46))]),true,0,empty,empty)))),node(rec([field(a,int(55))]),true,0,node(rec([field(a,int(51))]),true,0,node(rec([field(a,int(49))]),true,0,node(rec([field(a,int(48))]),true,0,empty,empty),node(rec([field(a,int(50))]),true,0,empty,empty)),node(rec([field(a,int(53))]),true,0,node(rec([field(a,int(52))]),true,0,empty,empty),node(rec([field(a,int(54))]),true,0,empty,empty))),node(rec([field(a,int(59))]),true,0,node(rec([field(a,int(57))]),true,0,node(rec([field(a,int(56))]),true,0,empty,empty),node(rec([field(a,int(58))]),true,0,empty,empty)),node(rec([field(a,int(61))]),true,0,node(rec([field(a,int(60))]),true,0,empty,empty),node(rec([field(a,int(62))]),true,0,empty,empty)))))),node(rec([field(a,int(79))]),true,1,node(rec([field(a,int(71))]),true,0,node(rec([field(a,int(67))]),true,0,node(rec([field(a,int(65))]),true,0,node(rec([field(a,int(64))]),true,0,empty,empty),node(rec([field(a,int(66))]),true,0,empty,empty)),node(rec([field(a,int(69))]),true,0,node(rec([field(a,int(68))]),true,0,empty,empty),node(rec([field(a,int(70))]),true,0,empty,empty))),node(rec([field(a,int(75))]),true,0,node(rec([field(a,int(73))]),true,0,node(rec([field(a,int(72))]),true,0,empty,empty),node(rec([field(a,int(74))]),true,0,empty,empty)),node(rec([field(a,int(77))]),true,0,node(rec([field(a,int(76))]),true,0,empty,empty),node(rec([field(a,int(78))]),true,0,empty,empty)))),node(rec([field(a,int(87))]),true,1,node(rec([field(a,int(83))]),true,0,node(rec([field(a,int(81))]),true,0,node(rec([field(a,int(80))]),true,0,empty,empty),node(rec([field(a,int(82))]),true,0,empty,empty)),node(rec([field(a,int(85))]),true,0,node(rec([field(a,int(84))]),true,0,empty,empty),node(rec([field(a,int(86))]),true,0,empty,empty))),node(rec([field(a,int(95))]),true,0,node(rec([field(a,int(91))]),true,0,node(rec([field(a,int(89))]),true,0,node(rec([field(a,int(88))]),true,0,empty,empty),node(rec([field(a,int(90))]),true,0,empty,empty)),node(rec([field(a,int(93))]),true,0,node(rec([field(a,int(92))]),true,0,empty,empty),node(rec([field(a,int(94))]),true,0,empty,empty))),node(rec([field(a,int(97))]),true,1,node(rec([field(a,int(96))]),true,0,empty,empty),node(rec([field(a,int(98))]),true,1,empty,node(rec([field(a,int(99))]),true,0,empty,empty))))))))),bind(COMP_comp1,string(NOT_EXECUTED))]),operation(FUNC_foo,0))))",
   :model-checking-time-unit :msec,
   :machine-hash "8f7fb7c6bef76d9ed7a7728e39e8d0d495544c86",
   :commit "1b6f14bbd533c2459b1ce675eb57ab24fee89caa",
   :options
   #{:find_deadlocks :inspect_existing_nodes :find_state_errors},
   :model-checking-time 255,
   :revision-date "Fri May 7 15:43:25 2021 +0200",
   :memory-unit :byte}],
 :dynamic_assertions 0,
 :invariant-violated false,
 :constants 0,
 :formalism :b}
