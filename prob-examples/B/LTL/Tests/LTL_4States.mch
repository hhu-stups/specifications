MACHINE LTL_4States
DEFINITIONS


/* generated by Prolog : */
   ASSERT_LTL100 == "{x=0}";

  ASSERT_LTL101 == "([Loop] => X({x=0}))";
  ASSERT_LTL102 == "([Set] => X({x>0}))";
  ASSERT_LTL103 == "([Error] => X({x=3}))";
  ASSERT_LTL104 == "([Error] => X({x>0}))";
  ASSERT_LTL105 == "([Error] => X(X ({x=3})))";
  ASSERT_LTL106 == "([Error] => X(X ({x>0})))";

  ASSERT_LTL107 == "([Loop] => X(([Loop] => X({x=0}))))";
  ASSERT_LTL108 == "([Loop] => X(([Set] => X({x>0}))))";
  ASSERT_LTL109 == "([Loop] => X(([Error] => X({x=3}))))";
  ASSERT_LTL110 == "([Loop] => X(([Error] => X({x>0}))))";
  ASSERT_LTL111 == "([Loop] => X(([Error] => X(X ({x=3})))))";
  ASSERT_LTL112 == "([Loop] => X(([Error] => X(X ({x>0})))))";
  ASSERT_LTL113 == "([Set] => X(([Loop] => X({x>0}))))";
  ASSERT_LTL114 == "([Set] => X(([Set] => X({x>0}))))";
  ASSERT_LTL115 == "([Set] => X(([Error] => X({x=3}))))";
  ASSERT_LTL116 == "([Set] => X(([Error] => X({x>0}))))";
  ASSERT_LTL117 == "([Set] => X(([Error] => X(X ({x=3})))))";
  ASSERT_LTL118 == "([Set] => X(([Error] => X(X ({x>0})))))";
  ASSERT_LTL119 == "([Set] => X(([GT0] => X({x>0}))))";
  ASSERT_LTL120 == "([Set] => X(([GT0] => X(([Loop] => X({x>0}))))))";
  ASSERT_LTL121 == "([Set] => X(([GT0] => X(([Set] => X({x>0}))))))";
  ASSERT_LTL122 == "([Set] => X(([GT0] => X(([Error] => X({x=3}))))))";
  ASSERT_LTL123 == "([Set] => X(([GT0] => X(([Error] => X({x>0}))))))";
  ASSERT_LTL124 == "([Set] => X(([GT0] => X(([Error] => X(X ({x=3})))))))";
  ASSERT_LTL125 == "([Set] => X(([GT0] => X(([Error] => X(X ({x>0})))))))";
  ASSERT_LTL126 == "([Error] => X(([GT0] => X({x=3}))))";
  ASSERT_LTL127 == "([Error] => X(([GT0] => X({x>0}))))";
  ASSERT_LTL128 == "([Error] => X(([GT0] => X(X ({x=3})))))";
  ASSERT_LTL129 == "([Error] => X(([GT0] => X(X ({x>0})))))";
  ASSERT_LTL130 == "([Error] => X(F ({x=3})))";
  ASSERT_LTL131 == "([Error] => X(X (X ({x=3}))))";
  ASSERT_LTL132 == "([Error] => X(F ({x>0})))";
  ASSERT_LTL133 == "([Error] => X(X (X ({x>0}))))";
  ASSERT_LTL134 == "([Error] => X(X (([GT0] => X({x=3})))))";
  ASSERT_LTL135 == "([Error] => X(X (([GT0] => X({x>0})))))";
  ASSERT_LTL136 == "([Error] => X(X (([GT0] => X(X ({x=3}))))))";
  ASSERT_LTL137 == "([Error] => X(X (([GT0] => X(X ({x>0}))))))";


  ASSERT_LTL138 == "([Loop] => X(([Loop] => X(([Loop] => X({x=0}))))))";
  ASSERT_LTL139 == "([Loop] => X(([Loop] => X(([Set] => X({x>0}))))))";
  ASSERT_LTL140 == "([Loop] => X(([Loop] => X(([Error] => X({x=3}))))))";
  ASSERT_LTL141 == "([Loop] => X(([Loop] => X(([Error] => X({x>0}))))))";
  ASSERT_LTL142 == "([Loop] => X(([Loop] => X(([Error] => X(X ({x=3})))))))";
  ASSERT_LTL143 == "([Loop] => X(([Loop] => X(([Error] => X(X ({x>0})))))))";
  ASSERT_LTL144 == "([Loop] => X(([Set] => X(([Loop] => X({x>0}))))))";
  ASSERT_LTL145 == "([Loop] => X(([Set] => X(([Set] => X({x>0}))))))";
  ASSERT_LTL146 == "([Loop] => X(([Set] => X(([Error] => X({x=3}))))))";
  ASSERT_LTL147 == "([Loop] => X(([Set] => X(([Error] => X({x>0}))))))";
  ASSERT_LTL148 == "([Loop] => X(([Set] => X(([Error] => X(X ({x=3})))))))";
  ASSERT_LTL149 == "([Loop] => X(([Set] => X(([Error] => X(X ({x>0})))))))";
  ASSERT_LTL150 == "([Loop] => X(([Set] => X(([GT0] => X({x>0}))))))";
  ASSERT_LTL151 == "([Loop] => X(([Set] => X(([GT0] => X(([Loop] => X({x>0}))))))))";
  ASSERT_LTL152 == "([Loop] => X(([Set] => X(([GT0] => X(([Set] => X({x>0}))))))))";
  ASSERT_LTL153 == "([Loop] => X(([Set] => X(([GT0] => X(([Error] => X({x=3}))))))))";
  ASSERT_LTL154 == "([Loop] => X(([Set] => X(([GT0] => X(([Error] => X({x>0}))))))))";
  ASSERT_LTL155 == "([Loop] => X(([Set] => X(([GT0] => X(([Error] => X(X ({x=3})))))))))";
  ASSERT_LTL156 == "([Loop] => X(([Set] => X(([GT0] => X(([Error] => X(X ({x>0})))))))))";
  ASSERT_LTL157 == "([Loop] => X(([Error] => X(([GT0] => X({x=3}))))))";
  ASSERT_LTL158 == "([Loop] => X(([Error] => X(([GT0] => X({x>0}))))))";
  ASSERT_LTL159 == "([Loop] => X(([Error] => X(([GT0] => X(X ({x=3})))))))";
  ASSERT_LTL160 == "([Loop] => X(([Error] => X(([GT0] => X(X ({x>0})))))))";
  ASSERT_LTL161 == "([Loop] => X(([Error] => X(F ({x=3})))))";
  ASSERT_LTL162 == "([Loop] => X(([Error] => X(X (X ({x=3}))))))";
  ASSERT_LTL163 == "([Loop] => X(([Error] => X(F ({x>0})))))";
  ASSERT_LTL164 == "([Loop] => X(([Error] => X(X (X ({x>0}))))))";
  ASSERT_LTL165 == "([Loop] => X(([Error] => X(X (([GT0] => X({x=3})))))))";
  ASSERT_LTL166 == "([Loop] => X(([Error] => X(X (([GT0] => X({x>0})))))))";
  ASSERT_LTL167 == "([Loop] => X(([Error] => X(X (([GT0] => X(X ({x=3}))))))))";
  ASSERT_LTL168 == "([Loop] => X(([Error] => X(X (([GT0] => X(X ({x>0}))))))))";
  ASSERT_LTL169 == "([Set] => X(([Loop] => X(([Loop] => X({x>0}))))))";
  ASSERT_LTL170 == "([Set] => X(([Loop] => X(([Set] => X({x>0}))))))";
  ASSERT_LTL171 == "([Set] => X(([Loop] => X(([Error] => X({x=3}))))))";
  ASSERT_LTL172 == "([Set] => X(([Loop] => X(([Error] => X({x>0}))))))";
  ASSERT_LTL173 == "([Set] => X(([Loop] => X(([Error] => X(X ({x=3})))))))";
  ASSERT_LTL174 == "([Set] => X(([Loop] => X(([Error] => X(X ({x>0})))))))";
  ASSERT_LTL175 == "([Set] => X(([Loop] => X(([GT0] => X({x>0}))))))";
  ASSERT_LTL176 == "([Set] => X(([Loop] => X(([GT0] => X(([Loop] => X({x>0}))))))))";
  ASSERT_LTL177 == "([Set] => X(([Loop] => X(([GT0] => X(([Set] => X({x>0}))))))))";
  ASSERT_LTL178 == "([Set] => X(([Loop] => X(([GT0] => X(([Error] => X({x=3}))))))))";
  ASSERT_LTL179 == "([Set] => X(([Loop] => X(([GT0] => X(([Error] => X({x>0}))))))))";
  ASSERT_LTL180 == "([Set] => X(([Loop] => X(([GT0] => X(([Error] => X(X ({x=3})))))))))";
  ASSERT_LTL181 == "([Set] => X(([Loop] => X(([GT0] => X(([Error] => X(X ({x>0})))))))))";
  ASSERT_LTL182 == "([Set] => X(([Set] => X(([Loop] => X({x>0}))))))";
  ASSERT_LTL183 == "([Set] => X(([Set] => X(([Set] => X({x>0}))))))";
  ASSERT_LTL184 == "([Set] => X(([Set] => X(([Error] => X({x=3}))))))";
  ASSERT_LTL185 == "([Set] => X(([Set] => X(([Error] => X({x>0}))))))";
  ASSERT_LTL186 == "([Set] => X(([Set] => X(([Error] => X(X ({x=3})))))))";
  ASSERT_LTL187 == "([Set] => X(([Set] => X(([Error] => X(X ({x>0})))))))";
  ASSERT_LTL188 == "([Set] => X(([Set] => X(([GT0] => X({x>0}))))))";
  ASSERT_LTL189 == "([Set] => X(([Set] => X(([GT0] => X(([Loop] => X({x>0}))))))))";
  ASSERT_LTL190 == "([Set] => X(([Set] => X(([GT0] => X(([Set] => X({x>0}))))))))";
  ASSERT_LTL191 == "([Set] => X(([Set] => X(([GT0] => X(([Error] => X({x=3}))))))))";
  ASSERT_LTL192 == "([Set] => X(([Set] => X(([GT0] => X(([Error] => X({x>0}))))))))";
  ASSERT_LTL193 == "([Set] => X(([Set] => X(([GT0] => X(([Error] => X(X ({x=3})))))))))";
  ASSERT_LTL194 == "([Set] => X(([Set] => X(([GT0] => X(([Error] => X(X ({x>0})))))))))";
  ASSERT_LTL195 == "([Set] => X(([Set] => X(([Set] => X(([Loop] => X({x>0}))))))))";
  ASSERT_LTL196 == "([Set] => X(([Set] => X(([Set] => X(([Set] => X({x>0}))))))))";
  ASSERT_LTL197 == "([Set] => X(([Error] => X(([GT0] => X({x=3}))))))";
  ASSERT_LTL198 == "([Set] => X(([Error] => X(([GT0] => X({x>0}))))))";
  ASSERT_LTL199 == "([Set] => X(([Error] => X(([GT0] => X(X ({x=3})))))))";
  ASSERT_LTL200 == "([Set] => X(([Error] => X(([GT0] => X(X ({x>0})))))))";
  ASSERT_LTL201 == "([Set] => X(([Error] => X(F ({x=3})))))";
  ASSERT_LTL202 == "([Set] => X(([Error] => X(X (X ({x=3}))))))";
  ASSERT_LTL203 == "([Set] => X(([Error] => X(F ({x>0})))))";
  ASSERT_LTL204 == "([Set] => X(([Error] => X(X (X ({x>0}))))))";
  ASSERT_LTL205 == "([Set] => X(([Error] => X(X (([GT0] => X({x=3})))))))";
  ASSERT_LTL206 == "([Set] => X(([Error] => X(X (([GT0] => X({x>0})))))))";
  ASSERT_LTL207 == "([Set] => X(([Error] => X(X (([GT0] => X(X ({x=3}))))))))";
  ASSERT_LTL208 == "([Set] => X(([Error] => X(X (([GT0] => X(X ({x>0}))))))))";
  ASSERT_LTL209 == "([Set] => X(([GT0] => X(([GT0] => X({x>0}))))))";
  ASSERT_LTL210 == "([Set] => X(([GT0] => X(([GT0] => X(([Loop] => X({x>0}))))))))";
  ASSERT_LTL211 == "([Set] => X(([GT0] => X(([GT0] => X(([Set] => X({x>0}))))))))";
  ASSERT_LTL212 == "([Set] => X(([GT0] => X(([GT0] => X(([Error] => X({x=3}))))))))";
  ASSERT_LTL213 == "([Set] => X(([GT0] => X(([GT0] => X(([Error] => X({x>0}))))))))";
  ASSERT_LTL214 == "([Set] => X(([GT0] => X(([GT0] => X(([Error] => X(X ({x=3})))))))))";
  ASSERT_LTL215 == "([Set] => X(([GT0] => X(([GT0] => X(([Error] => X(X ({x>0})))))))))";
  ASSERT_LTL216 == "([Set] => X(([GT0] => X(([Loop] => X(([Loop] => X({x>0}))))))))";
  ASSERT_LTL217 == "([Set] => X(([GT0] => X(([Loop] => X(([Set] => X({x>0}))))))))";
  ASSERT_LTL218 == "([Set] => X(([GT0] => X(([Loop] => X(([Error] => X({x=3}))))))))";
  ASSERT_LTL219 == "([Set] => X(([GT0] => X(([Loop] => X(([Error] => X({x>0}))))))))";
  ASSERT_LTL220 == "([Set] => X(([GT0] => X(([Loop] => X(([Error] => X(X ({x=3})))))))))";
  ASSERT_LTL221 == "([Set] => X(([GT0] => X(([Loop] => X(([Error] => X(X ({x>0})))))))))";
  ASSERT_LTL222 == "([Set] => X(([GT0] => X(([Loop] => X(([GT0] => X({x>0}))))))))";
  ASSERT_LTL223 == "([Set] => X(([GT0] => X(([Loop] => X(([GT0] => X(([Loop] => X({x>0}))))))))))";
  ASSERT_LTL224 == "([Set] => X(([GT0] => X(([Loop] => X(([GT0] => X(([Set] => X({x>0}))))))))))";
  ASSERT_LTL225 == "([Set] => X(([GT0] => X(([Loop] => X(([GT0] => X(([Error] => X({x=3}))))))))))";
  ASSERT_LTL226 == "([Set] => X(([GT0] => X(([Loop] => X(([GT0] => X(([Error] => X({x>0}))))))))))";
  ASSERT_LTL227 == "([Set] => X(([GT0] => X(([Loop] => X(([GT0] => X(([Error] => X(X ({x=3})))))))))))";
  ASSERT_LTL228 == "([Set] => X(([GT0] => X(([Loop] => X(([GT0] => X(([Error] => X(X ({x>0})))))))))))";
  ASSERT_LTL229 == "([Set] => X(([GT0] => X(([Set] => X(([Loop] => X({x>0}))))))))";
  ASSERT_LTL230 == "([Set] => X(([GT0] => X(([Set] => X(([Set] => X({x>0}))))))))";
  ASSERT_LTL231 == "([Set] => X(([GT0] => X(([Set] => X(([Error] => X({x=3}))))))))";
  ASSERT_LTL232 == "([Set] => X(([GT0] => X(([Set] => X(([Error] => X({x>0}))))))))";
  ASSERT_LTL233 == "([Set] => X(([GT0] => X(([Set] => X(([Error] => X(X ({x=3})))))))))";
  ASSERT_LTL234 == "([Set] => X(([GT0] => X(([Set] => X(([Error] => X(X ({x>0})))))))))";
  ASSERT_LTL235 == "([Set] => X(([GT0] => X(([Set] => X(([GT0] => X({x>0}))))))))";
  ASSERT_LTL236 == "([Set] => X(([GT0] => X(([Set] => X(([GT0] => X(([Loop] => X({x>0}))))))))))";
  ASSERT_LTL237 == "([Set] => X(([GT0] => X(([Set] => X(([GT0] => X(([Set] => X({x>0}))))))))))";
  ASSERT_LTL238 == "([Set] => X(([GT0] => X(([Set] => X(([GT0] => X(([Error] => X({x=3}))))))))))";
  ASSERT_LTL239 == "([Set] => X(([GT0] => X(([Set] => X(([GT0] => X(([Error] => X({x>0}))))))))))";
  ASSERT_LTL240 == "([Set] => X(([GT0] => X(([Set] => X(([GT0] => X(([Error] => X(X ({x=3})))))))))))";
  ASSERT_LTL241 == "([Set] => X(([GT0] => X(([Set] => X(([GT0] => X(([Error] => X(X ({x>0})))))))))))";
  ASSERT_LTL242 == "([Set] => X(([GT0] => X(([Set] => X(([Set] => X(([Loop] => X({x>0}))))))))))";
  ASSERT_LTL243 == "([Set] => X(([GT0] => X(([Set] => X(([Set] => X(([Set] => X({x>0}))))))))))";
  ASSERT_LTL244 == "([Set] => X(([GT0] => X(([Error] => X(([GT0] => X({x=3}))))))))";
  ASSERT_LTL245 == "([Set] => X(([GT0] => X(([Error] => X(([GT0] => X({x>0}))))))))";
  ASSERT_LTL246 == "([Set] => X(([GT0] => X(([Error] => X(([GT0] => X(X ({x=3})))))))))";
  ASSERT_LTL247 == "([Set] => X(([GT0] => X(([Error] => X(([GT0] => X(X ({x>0})))))))))";
  ASSERT_LTL248 == "([Set] => X(([GT0] => X(([Error] => X(F ({x=3})))))))";
  ASSERT_LTL249 == "([Set] => X(([GT0] => X(([Error] => X(X (X ({x=3}))))))))";
  ASSERT_LTL250 == "([Set] => X(([GT0] => X(([Error] => X(F ({x>0})))))))";
  ASSERT_LTL251 == "([Set] => X(([GT0] => X(([Error] => X(X (X ({x>0}))))))))";
  ASSERT_LTL252 == "([Set] => X(([GT0] => X(([Error] => X(X (([GT0] => X({x=3})))))))))";
  ASSERT_LTL253 == "([Set] => X(([GT0] => X(([Error] => X(X (([GT0] => X({x>0})))))))))";
  ASSERT_LTL254 == "([Set] => X(([GT0] => X(([Error] => X(X (([GT0] => X(X ({x=3}))))))))))";
  ASSERT_LTL255 == "([Set] => X(([GT0] => X(([Error] => X(X (([GT0] => X(X ({x>0}))))))))))";
  ASSERT_LTL256 == "([Error] => X(([GT0] => X(([GT0] => X({x=3}))))))";
  ASSERT_LTL257 == "([Error] => X(([GT0] => X(([GT0] => X({x>0}))))))";
  ASSERT_LTL258 == "([Error] => X(([GT0] => X(([GT0] => X(X ({x=3})))))))";
  ASSERT_LTL259 == "([Error] => X(([GT0] => X(([GT0] => X(X ({x>0})))))))";
  ASSERT_LTL260 == "([Error] => X(([GT0] => X(F ({x=3})))))";
  ASSERT_LTL261 == "([Error] => X(([GT0] => X(X (X ({x=3}))))))";
  ASSERT_LTL262 == "([Error] => X(([GT0] => X(F ({x>0})))))";
  ASSERT_LTL263 == "([Error] => X(([GT0] => X(X (X ({x>0}))))))";
  ASSERT_LTL264 == "([Error] => X(([GT0] => X(X (([GT0] => X({x=3})))))))";
  ASSERT_LTL265 == "([Error] => X(([GT0] => X(X (([GT0] => X({x>0})))))))";
  ASSERT_LTL266 == "([Error] => X(([GT0] => X(X (([GT0] => X(X ({x=3}))))))))";
  ASSERT_LTL267 == "([Error] => X(([GT0] => X(X (([GT0] => X(X ({x>0}))))))))";
  ASSERT_LTL268 == "([Error] => X(X (F ({x=3}))))";
  ASSERT_LTL269 == "([Error] => X(F (X ({x=3}))))";
  ASSERT_LTL270 == "([Error] => X(X (X (X ({x=3})))))";
  ASSERT_LTL271 == "([Error] => X(X (F ({x>0}))))";
  ASSERT_LTL272 == "([Error] => X(F (X ({x>0}))))";
  ASSERT_LTL273 == "([Error] => X(X (X (X ({x>0})))))";
  ASSERT_LTL274 == "([Error] => X(F (([GT0] => X({x=3})))))";
  ASSERT_LTL275 == "([Error] => X(X (X (([GT0] => X({x=3}))))))";
  ASSERT_LTL276 == "([Error] => X(F (([GT0] => X({x>0})))))";
  ASSERT_LTL277 == "([Error] => X(X (X (([GT0] => X({x>0}))))))";
  ASSERT_LTL278 == "([Error] => X(F (([GT0] => X(X ({x=3}))))))";
  ASSERT_LTL279 == "([Error] => X(X (X (([GT0] => X(X ({x=3})))))))";
  ASSERT_LTL280 == "([Error] => X(F (([GT0] => X(X ({x>0}))))))";
  ASSERT_LTL281 == "([Error] => X(X (X (([GT0] => X(X ({x>0})))))))";
  ASSERT_LTL282 == "([Error] => X(X (([GT0] => X(([GT0] => X({x=3})))))))";
  ASSERT_LTL283 == "([Error] => X(X (([GT0] => X(([GT0] => X({x>0})))))))";
  ASSERT_LTL284 == "([Error] => X(X (([GT0] => X(([GT0] => X(X ({x=3}))))))))";
  ASSERT_LTL285 == "([Error] => X(X (([GT0] => X(([GT0] => X(X ({x>0}))))))))";
  ASSERT_LTL286 == "([Error] => X(X (([GT0] => X(F ({x=3}))))))";
  ASSERT_LTL287 == "([Error] => X(X (([GT0] => X(X (X ({x=3})))))))";
  ASSERT_LTL288 == "([Error] => X(X (([GT0] => X(F ({x>0}))))))";
  ASSERT_LTL289 == "([Error] => X(X (([GT0] => X(X (X ({x>0})))))))";
  ASSERT_LTL290 == "([Error] => X(X (([GT0] => X(X (([GT0] => X({x=3}))))))))";
  ASSERT_LTL291 == "([Error] => X(X (([GT0] => X(X (([GT0] => X({x>0}))))))))";
  ASSERT_LTL292 == "([Error] => X(X (([GT0] => X(X (([GT0] => X(X ({x=3})))))))))";
  ASSERT_LTL293 == "([Error] => X(X (([GT0] => X(X (([GT0] => X(X ({x>0})))))))))"

VARIABLES x
INVARIANT x:NATURAL
INITIALISATION x:=0
OPERATIONS
  Loop = PRE x<3 THEN x:= x END;
  Set = PRE x<3 THEN x::{1,2} END;
  Reset = PRE x=2 THEN x:= 0 END;
  Error = PRE x<3 THEN x:= 3 END;
  GT0 = PRE x>0 THEN skip END
END

