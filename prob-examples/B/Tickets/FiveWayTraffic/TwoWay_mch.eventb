package(load_event_b_project([event_b_model(none,'TwoWay',[sees(none,['Traffic_Context1']),variables(none,[identifier(none,light_dir)]),invariant(none,[member(rodinpos('TwoWay',inv1,'*'),identifier(none,light_dir),total_function(none,identifier(none,'DIRECTION'),identifier(none,'LIGHT'))),forall(rodinpos('TwoWay',inv2,'+'),[identifier(none,d)],implication(none,conjunct(none,member(none,identifier(none,d),identifier(none,'DIRECTION')),conjunct(none,member(none,identifier(none,d),identifier(none,'DIRECTION')),member(none,function(none,identifier(none,light_dir),[identifier(none,d)]),set_extension(none,[identifier(none,'Green'),identifier(none,'Amber')])))),member(none,function(none,identifier(none,light_dir),[function(none,identifier(none,'CONFLICT'),[identifier(none,d)])]),set_extension(none,[identifier(none,'Red')]))))]),theorems(none,[]),events(none,[event(rodinpos('TwoWay','INITIALISATION','\''),'INITIALISATION',ordinary(none),[],[],[],[],[assign(rodinpos('TwoWay',act1,'\''),[identifier(none,light_dir)],[set_extension(none,[couple(none,[identifier(none,'NorthSouth'),identifier(none,'Red')]),couple(none,[identifier(none,'EastWest'),identifier(none,'Red')])])])],[]),event(rodinpos('TwoWay','ToRed',','),'ToRed',ordinary(none),[],[identifier(rodinpos('TwoWay',[],'\''),dir)],[member(rodinpos('TwoWay',grd1,'('),identifier(none,dir),identifier(none,'DIRECTION')),equal(rodinpos('TwoWay',grd2,'*'),function(none,identifier(none,light_dir),[identifier(none,dir)]),identifier(none,'Amber'))],[],[assign(rodinpos('TwoWay',act1,')'),[identifier(none,light_dir)],[overwrite(none,identifier(none,light_dir),set_extension(none,[couple(none,[identifier(none,dir),identifier(none,'Red')])]))])],[]),event(rodinpos('TwoWay','ToGreen','-'),'ToGreen',ordinary(none),[],[identifier(rodinpos('TwoWay',[],'\''),dir)],[member(rodinpos('TwoWay',grd1,'('),identifier(none,dir),identifier(none,'DIRECTION')),equal(rodinpos('TwoWay',grd2,')'),function(none,identifier(none,light_dir),[identifier(none,dir)]),identifier(none,'Red')),equal(rodinpos('TwoWay',grd3,'*'),function(none,identifier(none,light_dir),[function(none,identifier(none,'CONFLICT'),[identifier(none,dir)])]),identifier(none,'Red'))],[],[assign(rodinpos('TwoWay',act1,'+'),[identifier(none,light_dir)],[overwrite(none,identifier(none,light_dir),set_extension(none,[couple(none,[identifier(none,dir),identifier(none,'Green')])]))])],[]),event(rodinpos('TwoWay','ToAmber','.'),'ToAmber',ordinary(none),[],[identifier(rodinpos('TwoWay',[],'\''),dir)],[member(rodinpos('TwoWay',grd1,'('),identifier(none,dir),identifier(none,'DIRECTION')),equal(rodinpos('TwoWay',grd2,')'),function(none,identifier(none,light_dir),[identifier(none,dir)]),identifier(none,'Green'))],[],[assign(rodinpos('TwoWay',act1,'*'),[identifier(none,light_dir)],[overwrite(none,identifier(none,light_dir),set_extension(none,[couple(none,[identifier(none,dir),identifier(none,'Amber')])]))])],[])])])],[event_b_context(none,'Traffic_Context1',[extends(none,[]),constants(none,[identifier(none,'Amber'),identifier(none,'CONFLICT'),identifier(none,'EastWest'),identifier(none,'Green'),identifier(none,'NorthSouth'),identifier(none,'Red')]),abstract_constants(none,[]),axioms(none,[partition(rodinpos('Traffic_Context1',axm1,'.'),identifier(none,'DIRECTION'),[set_extension(none,[identifier(none,'NorthSouth')]),set_extension(none,[identifier(none,'EastWest')])]),partition(rodinpos('Traffic_Context1',axm3,'0'),identifier(none,'LIGHT'),[set_extension(none,[identifier(none,'Red')]),set_extension(none,[identifier(none,'Green')]),set_extension(none,[identifier(none,'Amber')])]),member(rodinpos('Traffic_Context1',axm6,'4'),identifier(none,'CONFLICT'),total_function(none,identifier(none,'DIRECTION'),identifier(none,'DIRECTION'))),equal(rodinpos('Traffic_Context1',axm7,'5'),function(none,identifier(none,'CONFLICT'),[identifier(none,'NorthSouth')]),identifier(none,'EastWest')),equal(rodinpos('Traffic_Context1',axm8,'6'),function(none,identifier(none,'CONFLICT'),[identifier(none,'EastWest')]),identifier(none,'NorthSouth')),forall(rodinpos('Traffic_Context1',axm9,'9'),[identifier(none,d)],implication(none,conjunct(none,member(none,identifier(none,d),identifier(none,'DIRECTION')),member(none,identifier(none,d),identifier(none,'DIRECTION'))),not_equal(none,function(none,identifier(none,'CONFLICT'),[identifier(none,d)]),identifier(none,d)))),forall(rodinpos('Traffic_Context1',axm10,':'),[identifier(none,d)],implication(none,conjunct(none,member(none,identifier(none,d),identifier(none,'DIRECTION')),member(none,identifier(none,d),identifier(none,'DIRECTION'))),equal(none,function(none,identifier(none,'CONFLICT'),[function(none,identifier(none,'CONFLICT'),[identifier(none,d)])]),identifier(none,d))))]),theorems(none,[]),sets(none,[deferred_set(none,'DIRECTION'),deferred_set(none,'LIGHT')])])],[exporter_version(3),po('Traffic_Context1','Well-definedness of Axiom',[axiom(axm7)],true),po('Traffic_Context1','Well-definedness of Axiom',[axiom(axm8)],true),po('Traffic_Context1','Well-definedness of Axiom',[axiom(axm9)],true),po('Traffic_Context1','Well-definedness of Axiom',[axiom(axm10)],true),po('TwoWay','Well-definedness of Invariant',[invariant(inv2)],true),po('TwoWay','Invariant  establishment',[event('INITIALISATION'),invariant(inv1)],true),po('TwoWay','Invariant  establishment',[event('INITIALISATION'),invariant(inv2)],true),po('TwoWay','Well-definedness of Guard',[guard(grd2),event('ToRed')],true),po('TwoWay','Invariant  preservation',[event('ToRed'),invariant(inv1)],true),po('TwoWay','Invariant  preservation',[event('ToRed'),invariant(inv2)],true),po('TwoWay','Well-definedness of Guard',[guard(grd2),event('ToGreen')],true),po('TwoWay','Well-definedness of Guard',[guard(grd3),event('ToGreen')],true),po('TwoWay','Invariant  preservation',[event('ToGreen'),invariant(inv1)],true),po('TwoWay','Invariant  preservation',[event('ToGreen'),invariant(inv2)],false),po('TwoWay','Well-definedness of Guard',[guard(grd2),event('ToAmber')],true),po('TwoWay','Invariant  preservation',[event('ToAmber'),invariant(inv1)],true),po('TwoWay','Invariant  preservation',[event('ToAmber'),invariant(inv2)],true)],_Error)).

