/* Machine generated: Wed Jan 06 10:09:41 CET 2016 */
/* Database information: */
/*  schema_version: v3.0 */
/*  generator: mincer-0.1.0-SNAPSHOT */


MACHINE data
/* TODO:
 * Decide how to select courses for checking (major and minor pairs, major only courses and/or major and focus area)
 *  - Build all pairs ahead of time
 *  - Choose to options
 *  - Provide a faculty configuration which things can be selected by the user
 * Add an assertion that all levels with modules are leaves
 * Generate docs along with data
 */
DEFINITIONS
 "LibraryIO.def";
 SEMESTERS==1..6;
SETS
    TYPES={m,e};
    DAYS = {mon, tue, wed, thu, fri, sat, sun}
CONSTANTS
    abstract_units,
    abstract_unit_unit_semester,
    courses,
    course_names,
    course_levels,
    course_modules,
    course_module_combinations,
    course_tree_leaves,
    LEVELS,
    level_modules,
    sessions,
    units,
    modules,
    module_abstract_unit_semester
PROPERTIES
    modules : POW(NATURAL1 * struct(idx:NATURAL1, name:STRING, credit_points:NATURAL \/ {-1}, title:STRING, pordnr:NATURAL, elective_units:NATURAL, mandatory:BOOL))
    &
    modules = {
        (1 |-> rec(idx:1, name:"Grundlangen der Softwareentwicklung und Programmierung (Informatik I)", credit_points:10, title:"Grundlangen der Softwareentwicklung und Programmierung (Informatik I)", pordnr:1100, elective_units:0,  mandatory:TRUE)),
        (2 |-> rec(idx:2, name:"Grundlagen der Technischen Informatik (Informatik II)", credit_points:10, title:"Grundlangen der Technischen Informatik (Informatik II)", pordnr:1101, elective_units:0,  mandatory:TRUE)),
        (3 |-> rec(idx:3, name:"Grundlagen der Algorithmen und Datenstrukturen (Informatik III)", credit_points:10, title:"Grundlangen der Algorithmen und Datenstrukturen (Informatik III)", pordnr:1102, elective_units:0,  mandatory:TRUE)),
        (4 |-> rec(idx:4, name:"Grundlagen der Theoretischen Informatik (Informatik IV)", credit_points:10, title:"Grundlangen der Theoretischen Informatik (Informatik IV)", pordnr:1103, elective_units:0,  mandatory:TRUE)),
        (5 |-> rec(idx:5, name:"Programmierpraktikum", credit_points:10, title:"Programmierpraktikum", pordnr:1104, elective_units:0,  mandatory:TRUE)),
        (6 |-> rec(idx:6, name:"Analysis I", credit_points:10, title:"Analysis I", pordnr:1200, elective_units:0,  mandatory:TRUE)),
        (7 |-> rec(idx:7, name:"Lineare Algebra I", credit_points:10, title:"Lineare Algebra I", pordnr:1201, elective_units:0,  mandatory:TRUE)),
        (8 |-> rec(idx:8, name:"Analysis II", credit_points:10, title:"Analysis II", pordnr:1202, elective_units:0,  mandatory:TRUE)),
        (9 |-> rec(idx:9, name:"Numerik I", credit_points:10, title:"Numerik I", pordnr:1203, elective_units:1,  mandatory:FALSE)),
        (10 |-> rec(idx:10, name:"Einführung in die Stochastik", credit_points:10, title:"Einführung in die Stochastik", pordnr:1204, elective_units:1,  mandatory:FALSE)),
        (11 |-> rec(idx:11, name:"Datenbanksysteme (für BA Informatik)", credit_points:10, title:"Datenbanksysteme (für BA Informatik)", pordnr:1300, elective_units:0,  mandatory:FALSE)),
        (12 |-> rec(idx:12, name:"Rechnernetze", credit_points:10, title:"Rechnernetze", pordnr:1301, elective_units:0,  mandatory:FALSE)),
        (13 |-> rec(idx:13, name:"Einführung in die logische Programmierung", credit_points:5, title:"Einführung in die logische Programmierung", pordnr:1302, elective_units:0,  mandatory:FALSE)),
        (14 |-> rec(idx:14, name:"Compilerbau", credit_points:5, title:"Compilerbau", pordnr:1303, elective_units:0,  mandatory:FALSE)),
        (15 |-> rec(idx:15, name:"From NAND to Tetris", credit_points:5, title:"From NAND to Tetris", pordnr:1304, elective_units:0,  mandatory:FALSE)),
        (16 |-> rec(idx:16, name:"Verfahren zur kollektiven Entscheidungsfindung", credit_points:10, title:"Verfahren zur kollektiven Entscheidungsfindung", pordnr:1305, elective_units:0,  mandatory:FALSE)),
        (17 |-> rec(idx:17, name:"Präferenzaggregation durch Wählen: Algorithmik und Komplexität", credit_points:10, title:"Präferenzaggregation durch Wählen: Algorithmik und Komplexität", pordnr:1306, elective_units:0,  mandatory:FALSE)),
        (18 |-> rec(idx:18, name:"Betriebssysteme / Grundlagen verteiler Systeme", credit_points:5, title:"Betriesbssysteme / Grundlagen verteilter Systeme", pordnr:1307, elective_units:0,  mandatory:FALSE)),
        (19 |-> rec(idx:19, name:"Graphenalgorithmen I", credit_points:5, title:"Graphenalgorithmen I", pordnr:1309, elective_units:0,  mandatory:FALSE)),
        (20 |-> rec(idx:20, name:"Algorithmen in der Bioinformatik", credit_points:5, title:"Algorithmen in der Bioinformatik", pordnr:1310, elective_units:0,  mandatory:FALSE)),
        (21 |-> rec(idx:21, name:"Datenbanksysteme (für BA Informatik)", credit_points:10, title:"Datenbanksysteme (für BA Informatik)", pordnr:1300, elective_units:0,  mandatory:FALSE)),
        (22 |-> rec(idx:22, name:"Rechnernetze", credit_points:10, title:"Rechnernetze", pordnr:1301, elective_units:0,  mandatory:FALSE)),
        (23 |-> rec(idx:23, name:"Einführung in die logische Programmierung", credit_points:5, title:"Einführung in die logische Programmierung", pordnr:1302, elective_units:0,  mandatory:FALSE)),
        (24 |-> rec(idx:24, name:"Compilerbau", credit_points:5, title:"Compilerbau", pordnr:1303, elective_units:0,  mandatory:FALSE)),
        (25 |-> rec(idx:25, name:"From NAND to Tetris", credit_points:5, title:"From NAND to Tetris", pordnr:1304, elective_units:0,  mandatory:FALSE)),
        (26 |-> rec(idx:26, name:"Verfahren zur kollektiven Entscheidungsfindung", credit_points:10, title:"Verfahren zur kollektiven Entscheidungsfindung", pordnr:1305, elective_units:0,  mandatory:FALSE)),
        (27 |-> rec(idx:27, name:"Präferenzaggregation durch Wählen: Algorithmik und Komplexität", credit_points:10, title:"Präferenzaggregation durch Wählen: Algorithmik und Komplexität", pordnr:1306, elective_units:0,  mandatory:FALSE)),
        (28 |-> rec(idx:28, name:"Betriebssysteme / Grundlagen verteiler Systeme", credit_points:5, title:"Betriesbssysteme / Grundlagen verteilter Systeme", pordnr:1307, elective_units:0,  mandatory:FALSE)),
        (29 |-> rec(idx:29, name:"Graphenalgorithmen I", credit_points:5, title:"Graphenalgorithmen I", pordnr:1309, elective_units:0,  mandatory:FALSE)),
        (30 |-> rec(idx:30, name:"Algorithmen in der Bioinformatik", credit_points:5, title:"Algorithmen in der Bioinformatik", pordnr:1310, elective_units:0,  mandatory:FALSE)),
        (31 |-> rec(idx:31, name:"Mathematische Methoden der Physik I", credit_points:7, title:"Mathematische Methoden der Physik I", pordnr:2100, elective_units:0,  mandatory:TRUE)),
        (32 |-> rec(idx:32, name:"Grundpraktikum I", credit_points:6, title:"Grundpraktikum 1", pordnr:2101, elective_units:0,  mandatory:TRUE)),
        (33 |-> rec(idx:33, name:"Optik", credit_points:6, title:"Optik", pordnr:2102, elective_units:0,  mandatory:FALSE)),
        (34 |-> rec(idx:34, name:"Experimentelle Mechanik", credit_points:6, title:"Experimentelle Mechanik", pordnr:2103, elective_units:0,  mandatory:FALSE)),
        (35 |-> rec(idx:35, name:"Elektrizität und Magnetismus", credit_points:6, title:"Elektrizität und Magnetismus", pordnr:2104, elective_units:0,  mandatory:FALSE)),
        (36 |-> rec(idx:36, name:"Experimentelle Atomphysik", credit_points:6, title:"Experimentelle Atomphysik", pordnr:2105, elective_units:0,  mandatory:FALSE)),
        (37 |-> rec(idx:37, name:"Theoretische Mechanik", credit_points:9, title:"Theoretische Mechanik", pordnr:2106, elective_units:0,  mandatory:FALSE)),
        (38 |-> rec(idx:38, name:"Theoretische Elektrodynamik", credit_points:9, title:"Theoretische Elektrodynamik", pordnr:2107, elective_units:0,  mandatory:FALSE)),
        (39 |-> rec(idx:39, name:"Allgemeine Botanik und Zoologie für Biochemiker und Informatiker", credit_points:5, title:"Allgemeine Botanik und Zoologie für Biochemiker und Informatiker", pordnr:2200, elective_units:0,  mandatory:TRUE)),
        (40 |-> rec(idx:40, name:"Bio110: Zell- und Molekularbiologie", credit_points:5, title:"Bio110: Zell- und Molekularbiologie", pordnr:2201, elective_units:0,  mandatory:TRUE)),
        (41 |-> rec(idx:41, name:"Bio250: Genetik", credit_points:5, title:"Bio250: Genetik", pordnr:2202, elective_units:0,  mandatory:TRUE)),
        (42 |-> rec(idx:42, name:"Bio260: Ökologie und Evolution", credit_points:5, title:"Bio260: Ökologie und Evolution", pordnr:2203, elective_units:0,  mandatory:TRUE)),
        (43 |-> rec(idx:43, name:"Bio240: Mikrobiologie", credit_points:5, title:"Bio240: Mikrobiologie", pordnr:2204, elective_units:0,  mandatory:TRUE)),
        (44 |-> rec(idx:44, name:"Bio220: Tierphysiologie", credit_points:5, title:"Bio220: Tierphysiologie", pordnr:2205, elective_units:0,  mandatory:TRUE)),
        (45 |-> rec(idx:45, name:"Bio210: Biochemie", credit_points:5, title:"Bio210: Biochemie", pordnr:2206, elective_units:0,  mandatory:TRUE)),
        (46 |-> rec(idx:46, name:"Bio230: Biophysik", credit_points:5, title:"Bio230: Biphysik", pordnr:2207, elective_units:0,  mandatory:TRUE)),
        (47 |-> rec(idx:47, name:"Einführung in die Allgemeine und Anorganische Chemie (C1)", credit_points:8, title:"Einführung in die Allgemeine und Anorganische Chemie (C1)", pordnr:2300, elective_units:0,  mandatory:TRUE)),
        (48 |-> rec(idx:48, name:"Organische Chemie für Studierende der Biologie", credit_points:6, title:"Organische Chemie für Studierende der Biologie", pordnr:2301, elective_units:0,  mandatory:TRUE)),
        (49 |-> rec(idx:49, name:"PC II: Thermodynamik und chemische Kinetik", credit_points:10, title:"PC II: Thermodynamik und chemische Kinetik", pordnr:2302, elective_units:0,  mandatory:TRUE)),
        (50 |-> rec(idx:50, name:"Einführung in die Quanten- und Computerchemie (QCCC)", credit_points:8, title:"Einführung in die Quanten- und Computerchemie (QCCC)", pordnr:2303, elective_units:0,  mandatory:TRUE)),
        (51 |-> rec(idx:51, name:"Angewandte Quantenchemie und Computerchemie (AnQCCC)", credit_points:8, title:"Angewandte Quantenchemie und Computerchemie (AnQCCC)", pordnr:2304, elective_units:0,  mandatory:FALSE)),
        (52 |-> rec(idx:52, name:"Biochemie für Biologen (Bio 210)", credit_points:4, title:"Biochemie für Biologen (Bio 210)", pordnr:2305, elective_units:0,  mandatory:FALSE)),
        (53 |-> rec(idx:53, name:"Biophysik für Biologen (Bio 230)", credit_points:4, title:"Biophysik für Biologen (Bio 230)", pordnr:2306, elective_units:0,  mandatory:FALSE)),
        (54 |-> rec(idx:54, name:"Analysis III", credit_points:10, title:"Analysis III", pordnr:2400, elective_units:0,  mandatory:FALSE)),
        (55 |-> rec(idx:55, name:"Lineare Algebra II", credit_points:10, title:"Lineare Algebra II", pordnr:2401, elective_units:0,  mandatory:FALSE)),
        (56 |-> rec(idx:56, name:"Computergestützte Analysis", credit_points:5, title:"Computergestützte Analysis", pordnr:2402, elective_units:0,  mandatory:FALSE)),
        (57 |-> rec(idx:57, name:"Computergestützte Lineare Algebra", credit_points:5, title:"Computergestützte Lineare Algebra", pordnr:2403, elective_units:0,  mandatory:FALSE)),
        (58 |-> rec(idx:58, name:"Numerik I", credit_points:10, title:"Numerik I", pordnr:2404, elective_units:0,  mandatory:FALSE)),
        (59 |-> rec(idx:59, name:"Einführung in die Stochastik", credit_points:10, title:"Einführung in die Stochastik", pordnr:2405, elective_units:0,  mandatory:FALSE)),
        (60 |-> rec(idx:60, name:"Wahrscheinlickeitstheorie", credit_points:10, title:"Wahrscheinlichkeitstheorie", pordnr:2409, elective_units:0,  mandatory:FALSE)),
        (61 |-> rec(idx:61, name:"Quantitative Methoden I", credit_points:6, title:"Quantitative Methoden I", pordnr:2500, elective_units:0,  mandatory:TRUE)),
        (62 |-> rec(idx:62, name:"Quantitative Methoden II", credit_points:6, title:"Quantitavie Methoden II", pordnr:2501, elective_units:0,  mandatory:TRUE)),
        (63 |-> rec(idx:63, name:"Physiologische Grundlagen des Verhaltens I", credit_points:4, title:"Physiologischhe Grundlagen des Verhaltens I", pordnr:2502, elective_units:0,  mandatory:TRUE)),
        (64 |-> rec(idx:64, name:"Physiologische Grundlagen des Verhaltens II", credit_points:4, title:"Physiologische Grundlagen des Verhaltens II", pordnr:2503, elective_units:0,  mandatory:TRUE)),
        (65 |-> rec(idx:65, name:"Biologische Psychologie I", credit_points:4, title:"Biologische Psychologie I", pordnr:2504, elective_units:0,  mandatory:TRUE)),
        (66 |-> rec(idx:66, name:"Biologische Psychologie II", credit_points:4, title:"Biologische Psychologie II", pordnr:2505, elective_units:0,  mandatory:TRUE)),
        (67 |-> rec(idx:67, name:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion I", credit_points:4, title:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion I", pordnr:2506, elective_units:0,  mandatory:TRUE)),
        (68 |-> rec(idx:68, name:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion II", credit_points:4, title:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion II", pordnr:2507, elective_units:0,  mandatory:TRUE)),
        (69 |-> rec(idx:69, name:"Sozialpsychologie I", credit_points:4, title:"Sozialpsychologie I", pordnr:2508, elective_units:0,  mandatory:TRUE))
    }
    &
    courses : POW(STRING*struct(idx:NATURAL1, name:STRING, long_name:STRING, degree:STRING, credit_points:NATURAL \/ {-1}, po:NATURAL1, kzfa:STRING))
    &
    courses = {
        ("bsc-cs-H-2013" |-> rec(idx: 1, name: "bsc-cs-H-2013", long_name:"Bachelor Informatik (bsc H) PO:2013", credit_points:120, degree:"bsc", kzfa:"H", po:2013)),
        ("bsc-phy-N-2013" |-> rec(idx: 2, name: "bsc-phy-N-2013", long_name:"Nebenfach Physik (bsc N) PO:2013", credit_points:40, degree:"bsc", kzfa:"N", po:2013)),
        ("bsc-bio-N-2015" |-> rec(idx: 3, name: "bsc-bio-N-2015", long_name:"Nebenfach Biologie (bsc N) PO:2015", credit_points:40, degree:"bsc", kzfa:"N", po:2015)),
        ("bsc-che-N-2013" |-> rec(idx: 4, name: "bsc-che-N-2013", long_name:"Nebenfach Chemie (bsc N) PO:2013", credit_points:40, degree:"bsc", kzfa:"N", po:2013)),
        ("bsc-mat-N-2008" |-> rec(idx: 5, name: "bsc-mat-N-2008", long_name:"Nebenfach Mathematik (bsc N) PO:2008", credit_points:40, degree:"bsc", kzfa:"N", po:2008)),
        ("bsc-psy-N-2013" |-> rec(idx: 6, name: "bsc-psy-N-2013", long_name:"Nebenfach Psychologie (bsc N) PO:2013", credit_points:40, degree:"bsc", kzfa:"N", po:2013))
    }
    &
    course_names : POW(STRING)
    &
    course_names = dom(courses)
    &
    course_module_combinations = {
        ("bsc-cs-H-2013" |-> {
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 26} /* 1 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 26, 29} /* 31 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 26, 28} /* 32 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 29, 30} /* 34 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24} /* 36 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 28, 30} /* 37 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 28, 29, 30} /* 45 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 27, 28} /* 73 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 30} /* 75 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 26} /* 77 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 27, 29, 30} /* 82 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 30} /* 88 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26, 27} /* 96 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 27} /* 113 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 28, 29} /* 122 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 28} /* 124 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 26, 28} /* 125 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 26} /* 146 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 26, 29} /* 155 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 29} /* 160 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 29, 30} /* 162 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 27} /* 178 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 27, 29} /* 186 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 27, 29} /* 190 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 27, 28, 30} /* 221 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 23, 28} /* 231 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 28, 29} /* 234 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26, 29} /* 235 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 29, 30} /* 236 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24} /* 238 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25} /* 239 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 28, 30} /* 255 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22} /* 256 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 27, 28, 29} /* 271 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 27, 30} /* 284 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 24, 30} /* 287 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 29, 30} /* 298 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 27} /* 300 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 28, 30} /* 301 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 27} /* 303 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 28, 30} /* 312 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 27, 30} /* 313 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26, 29, 30} /* 315 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 28, 30} /* 323 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 27, 28, 29} /* 333 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 27, 28, 29, 30} /* 334 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 24, 30} /* 343 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 27, 29, 30} /* 346 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 27, 28} /* 362 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 26} /* 366 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 26, 28, 30} /* 369 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 27, 29} /* 391 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 27, 28} /* 394 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 28, 30} /* 396 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 26} /* 408 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 27, 30} /* 409 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 29} /* 411 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 26, 29} /* 412 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 28, 29} /* 423 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 26, 28, 29} /* 430 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 27, 28, 29} /* 437 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 26, 29, 30} /* 443 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 26, 28, 29} /* 446 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 26, 28} /* 457 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 29} /* 458 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 28, 29} /* 461 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 28} /* 463 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26, 27} /* 475 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 26, 29} /* 477 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 26, 28, 29} /* 490 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 29, 30} /* 494 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 28, 30} /* 518 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 27, 28, 30} /* 523 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 27, 28} /* 528 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 27} /* 545 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 28, 30} /* 558 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 29, 30} /* 559 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 28, 29} /* 561 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 29} /* 570 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 28, 29} /* 571 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 27, 28} /* 572 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 28, 29, 30} /* 587 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 26, 29, 30} /* 594 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 29} /* 598 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 27, 28, 29} /* 600 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 26, 28} /* 602 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 28, 29, 30} /* 603 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 27, 30} /* 609 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 27, 29} /* 623 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 29} /* 624 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 29} /* 643 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 28, 29, 30} /* 646 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 29, 30} /* 652 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 27, 28, 30} /* 664 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26, 29} /* 669 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 30} /* 670 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 27, 28, 29} /* 673 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 28, 29} /* 685 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 27, 28} /* 691 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 27, 29} /* 703 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 28, 30} /* 709 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 27, 29} /* 712 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 28, 29} /* 715 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 27, 29} /* 722 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 26, 27} /* 730 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 28, 29, 30} /* 737 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 26, 29} /* 749 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 27, 29, 30} /* 766 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 26, 27} /* 799 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 27, 28, 29} /* 805 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 27, 28} /* 811 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 28, 29, 30} /* 819 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 28, 29, 30} /* 830 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 28} /* 832 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 29} /* 838 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 25, 30} /* 847 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 27} /* 853 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 27, 30} /* 860 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 29, 30} /* 871 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 28, 29, 30} /* 891 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 27} /* 898 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 23, 29} /* 902 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 28} /* 909 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 28} /* 910 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26, 28} /* 921 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 27, 29} /* 922 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 27, 28} /* 923 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 27, 29} /* 928 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25} /* 932 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 30} /* 939 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 30} /* 941 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 28, 29} /* 944 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 29} /* 946 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 30} /* 947 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 27, 28} /* 963 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 29, 30} /* 967 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 30} /* 985 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 27, 28} /* 993 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 27, 29, 30} /* 997 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 27, 30} /* 1005 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 29, 30} /* 1011 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 27, 28, 29, 30} /* 1014 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26, 29, 30} /* 1016 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 29, 30} /* 1017 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 30} /* 1019 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 30} /* 1029 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 28, 29} /* 1031 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 27, 28, 30} /* 1040 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26, 27} /* 1044 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 27, 29} /* 1050 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 27, 28} /* 1062 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 26} /* 1064 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 27, 29, 30} /* 1067 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 26, 30} /* 1071 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 26, 27, 28, 29} /* 1073 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 26} /* 1083 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 28, 29} /* 1111 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 27, 29} /* 1115 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 23, 24} /* 1124 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 26, 28, 30} /* 1125 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 28, 30} /* 1133 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 28, 29, 30} /* 1138 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26, 28, 30} /* 1154 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26, 29} /* 1169 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 27, 28, 30} /* 1196 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26, 27} /* 1200 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 26, 30} /* 1202 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 26, 28} /* 1204 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 26} /* 1208 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 25, 29} /* 1222 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 30} /* 1224 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 28} /* 1229 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26, 30} /* 1235 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 28, 30} /* 1236 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 27, 28} /* 1264 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 28, 29} /* 1282 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 28} /* 1297 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 27, 30} /* 1298 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 26} /* 1317 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 28, 30} /* 1338 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 27} /* 1339 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 29, 30} /* 1351 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 28} /* 1365 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 27, 30} /* 1367 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 28, 29, 30} /* 1375 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 29, 30} /* 1377 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26, 27} /* 1388 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 28} /* 1389 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 27, 30} /* 1399 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 27, 28, 29} /* 1400 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 23, 30} /* 1405 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 27} /* 1416 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 27} /* 1419 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 28, 29} /* 1428 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 25, 28} /* 1431 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 27, 28, 29} /* 1432 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 26, 29, 30} /* 1448 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 27, 30} /* 1454 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 29} /* 1456 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 25, 30} /* 1465 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 26} /* 1469 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 28, 29, 30} /* 1471 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 28} /* 1478 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 27, 28} /* 1502 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 28, 30} /* 1510 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 30} /* 1513 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 27, 30} /* 1523 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 29, 30} /* 1530 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 28, 30} /* 1532 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 26} /* 1536 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26, 28, 29} /* 1552 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 28, 29} /* 1553 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 25, 30} /* 1568 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 27, 29} /* 1573 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 27, 28, 30} /* 1579 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 30} /* 1593 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 28, 29, 30} /* 1598 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 26, 28, 29} /* 1605 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 28, 30} /* 1615 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26, 29} /* 1646 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 27, 28, 30} /* 1657 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 27, 28} /* 1667 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 28, 30} /* 1672 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 28, 30} /* 1692 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 27, 28, 29} /* 1696 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 27} /* 1699 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 27, 28, 29} /* 1711 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 27, 28, 29, 30} /* 1721 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 28, 29} /* 1731 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 26, 29} /* 1769 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 28, 29} /* 1779 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 28, 30} /* 1783 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 28} /* 1786 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 29, 30} /* 1793 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 27, 28, 29, 30} /* 1796 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 29, 30} /* 1797 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 27, 30} /* 1799 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25} /* 1801 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 29} /* 1805 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 27, 30} /* 1807 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 26, 29} /* 1810 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 27, 29, 30} /* 1815 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 26, 29} /* 1840 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 23, 25} /* 1847 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 28, 30} /* 1850 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26} /* 1852 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 25} /* 1853 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 28} /* 1868 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 27, 29, 30} /* 1871 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 29, 30} /* 1878 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 27, 29} /* 1894 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 28} /* 1907 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 27, 30} /* 1915 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 26, 30} /* 1916 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 28, 29, 30} /* 1930 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 25, 29} /* 1937 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 25, 28} /* 1950 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 29} /* 1951 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 29, 30} /* 1954 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 27, 28, 29} /* 1964 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 28, 29} /* 1965 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 27, 28} /* 1968 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 27, 30} /* 1969 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 28, 29, 30} /* 1970 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 26, 30} /* 1991 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 29} /* 1995 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 28, 29} /* 2003 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 26, 28} /* 2026 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 29} /* 2032 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 30} /* 2039 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 28} /* 2042 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25} /* 2043 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 24, 29} /* 2056 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 27, 29} /* 2059 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 23, 28} /* 2063 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 28, 29} /* 2066 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 27, 29, 30} /* 2068 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 30} /* 2069 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 30} /* 2078 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 28, 29, 30} /* 2079 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 28, 29, 30} /* 2082 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26, 28, 29} /* 2090 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 28, 29} /* 2094 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 30} /* 2114 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 27, 28, 29} /* 2126 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 28, 29} /* 2127 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 28, 29} /* 2134 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 27} /* 2142 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 27, 29} /* 2153 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 28, 29} /* 2183 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 27} /* 2190 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 29, 30} /* 2191 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 24, 25} /* 2196 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26, 28, 30} /* 2218 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 27} /* 2227 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 27, 28} /* 2240 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 27, 28} /* 2246 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 28} /* 2253 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 23, 30} /* 2272 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 26, 28} /* 2280 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 26} /* 2281 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 27, 29, 30} /* 2285 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 27, 28, 29} /* 2290 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 27, 28, 30} /* 2294 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 30} /* 2322 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 28, 29} /* 2327 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 26, 28, 29} /* 2328 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 29, 30} /* 2332 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26, 29, 30} /* 2333 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 27, 28} /* 2337 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 26} /* 2350 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25} /* 2361 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 27, 29} /* 2364 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 28, 30} /* 2365 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 26, 28, 30} /* 2384 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 28, 29} /* 2407 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 26, 28} /* 2417 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 26} /* 2420 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 29, 30} /* 2428 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 28, 30} /* 2432 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 27, 29} /* 2441 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 30} /* 2446 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 27, 28} /* 2448 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 27, 29} /* 2455 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 27, 28, 29, 30} /* 2461 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 29, 30} /* 2466 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 28, 29} /* 2475 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 28, 29, 30} /* 2479 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 25} /* 2496 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 27, 28, 29, 30} /* 2502 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 29, 30} /* 2505 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 27, 29} /* 2506 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 23, 24} /* 2507 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 29, 30} /* 2522 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 27, 30} /* 2542 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 25, 29} /* 2551 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 27, 29} /* 2552 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 30} /* 2558 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 25, 29} /* 2564 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 23, 29} /* 2577 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 27} /* 2581 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 29} /* 2590 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 28, 29, 30} /* 2600 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 28, 29} /* 2604 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 28, 29, 30} /* 2605 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 30} /* 2606 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 28, 30} /* 2611 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 29, 30} /* 2612 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 24, 25} /* 2647 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 30} /* 2649 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 28, 30} /* 2656 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 30} /* 2659 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 27, 28, 29} /* 2669 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 27, 29} /* 2676 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 25} /* 2680 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 30} /* 2704 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 29, 30} /* 2706 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 26} /* 2707 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 26, 28} /* 2708 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 28, 30} /* 2714 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 28, 30} /* 2718 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 28} /* 2727 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 27, 30} /* 2729 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26, 28, 30} /* 2745 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 25, 30} /* 2748 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 27, 29} /* 2762 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 26, 28} /* 2763 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 27, 28, 29} /* 2764 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 29, 30} /* 2781 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 28, 30} /* 2805 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 26, 30} /* 2820 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 25, 28} /* 2828 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 29, 30} /* 2836 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 26, 28} /* 2837 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 28, 30} /* 2843 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 27, 29} /* 2849 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 29} /* 2852 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 28, 30} /* 2861 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 26, 30} /* 2865 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 28, 30} /* 2882 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 26, 28} /* 2886 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 29} /* 2911 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 29} /* 2932 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 28} /* 2939 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26, 28, 29} /* 2940 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 27, 28, 30} /* 2953 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 29} /* 2988 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26, 28, 29} /* 2994 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 30} /* 3001 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 23, 25} /* 3013 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25} /* 3016 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 29, 30} /* 3025 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 27} /* 3026 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 29, 30} /* 3060 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26, 30} /* 3061 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 27, 30} /* 3063 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 28} /* 3068 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 27, 28, 30} /* 3087 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 27, 28} /* 3090 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 28, 29, 30} /* 3093 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 27, 28} /* 3095 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 27, 28} /* 3142 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 25, 28} /* 3147 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 27} /* 3148 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 29, 30} /* 3160 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 28, 29} /* 3163 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 28, 30} /* 3179 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 29, 30} /* 3180 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 28, 30} /* 3182 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 28, 29, 30} /* 3187 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 28, 30} /* 3192 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 28} /* 3195 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 28} /* 3210 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 28, 30} /* 3211 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 28, 29, 30} /* 3213 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 27, 29} /* 3220 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 27, 28} /* 3230 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 26} /* 3248 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 27} /* 3256 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 27, 28} /* 3257 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 28, 30} /* 3263 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 26, 29, 30} /* 3268 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 27, 29, 30} /* 3271 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 30} /* 3285 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 28, 30} /* 3286 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 25, 28} /* 3294 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 30} /* 3295 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26, 28, 30} /* 3304 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 29, 30} /* 3314 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 30} /* 3317 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 26, 29} /* 3318 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24} /* 3319 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 27} /* 3321 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 26, 29} /* 3324 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 28, 29} /* 3325 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 29, 30} /* 3330 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 28} /* 3352 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 25, 30} /* 3365 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 28, 30} /* 3374 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 28, 29} /* 3375 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 29} /* 3383 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 27, 30} /* 3385 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 26, 27} /* 3417 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 30} /* 3420 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 26} /* 3426 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 27, 29} /* 3429 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 29} /* 3431 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 27, 28, 29} /* 3439 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 27} /* 3450 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 27} /* 3458 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 29} /* 3462 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 28, 29, 30} /* 3464 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 28} /* 3466 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26} /* 3482 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 26, 29} /* 3483 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 28} /* 3484 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 27, 29, 30} /* 3490 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 27, 29, 30} /* 3507 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 28, 29, 30} /* 3510 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 26, 30} /* 3517 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 28, 30} /* 3520 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 27, 29, 30} /* 3526 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 26, 29} /* 3529 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 27, 30} /* 3532 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 26, 30} /* 3548 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 26, 30} /* 3551 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 27, 30} /* 3562 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 29} /* 3565 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 27} /* 3567 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 28, 30} /* 3571 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 28, 29, 30} /* 3572 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 27, 28, 29} /* 3577 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 27, 29} /* 3582 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 26, 29} /* 3604 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 28, 29, 30} /* 3619 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26, 30} /* 3621 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 26, 30} /* 3622 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 28} /* 3629 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 29, 30} /* 3641 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 27, 28, 30} /* 3647 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 28, 30} /* 3653 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26, 28} /* 3656 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 24, 28} /* 3657 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 28, 29} /* 3696 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 27} /* 3705 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 30} /* 3706 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 27, 30} /* 3719 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 27, 28} /* 3727 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 26} /* 3747 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 29, 30} /* 3750 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 29, 30} /* 3760 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 27, 30} /* 3766 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 28, 30} /* 3769 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 24, 29} /* 3770 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 28, 29} /* 3781 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 28, 29} /* 3801 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 27} /* 3811 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 27, 28} /* 3820 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 26, 29, 30} /* 3821 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 28, 29} /* 3822 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 28, 29} /* 3823 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26, 28} /* 3825 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 28, 29, 30} /* 3832 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 28, 29} /* 3835 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 26, 30} /* 3836 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 29, 30} /* 3837 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 28, 29, 30} /* 3838 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 27, 30} /* 3839 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 27, 29} /* 3853 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 28, 29} /* 3856 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 27, 29, 30} /* 3872 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 29} /* 3875 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 27, 28} /* 3882 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 29, 30} /* 3885 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 26, 29} /* 3886 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 28} /* 3888 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 28, 29} /* 3890 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25} /* 3898 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 29} /* 3900 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 28, 29, 30} /* 3901 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 25, 27, 28, 29, 30} /* 3905 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 29, 30} /* 3909 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26, 28, 29} /* 3942 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 24, 27} /* 3944 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 28, 30} /* 3946 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22} /* 3950 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26} /* 3951 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26, 28} /* 3967 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 28, 29, 30} /* 3969 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 29, 30} /* 3972 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 25, 29} /* 3982 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 26, 30} /* 3986 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 24, 25, 28, 29} /* 3993 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 29, 30} /* 3996 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 26, 28, 29, 30} /* 4006 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24, 28} /* 4020 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25} /* 4022 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 27, 29, 30} /* 4037 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 30} /* 4042 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 28, 30} /* 4057 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 25, 30} /* 4061 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 26} /* 4062 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 27, 28} /* 4067 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 28, 29} /* 4068 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 27, 28} /* 4069 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26} /* 4074 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 26, 27, 30} /* 4077 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 25, 29} /* 4082 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 27, 28, 29} /* 4085 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 28, 30} /* 4088 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 29, 30} /* 4090 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 26, 29, 30} /* 4091 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 27, 30} /* 4096 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 24} /* 4114 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 28} /* 4116 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 28, 29} /* 4135 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 28, 30} /* 4143 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 28, 29, 30} /* 4147 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 28, 30} /* 4163 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 27, 28, 30} /* 4169 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 28, 29, 30} /* 4195 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 28, 29, 30} /* 4198 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 26, 30} /* 4206 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 27, 28} /* 4207 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 25, 26, 27} /* 4214 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26, 28} /* 4222 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 27, 28, 30} /* 4223 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 25, 29} /* 4231 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 25, 28, 29, 30} /* 4259 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 27, 30} /* 4272 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 26, 29} /* 4278 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 27, 29} /* 4287 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 29} /* 4296 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 25, 28, 30} /* 4303 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 28, 29} /* 4314 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 27, 30} /* 4322 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 27, 29, 30} /* 4340 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 26, 28} /* 4343 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 28, 30} /* 4348 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 29} /* 4362 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 25, 28} /* 4376 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 26, 28, 30} /* 4378 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 27, 30} /* 4381 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 30} /* 4389 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 30} /* 4408 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 24, 25, 28, 29} /* 4409 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 28, 29, 30} /* 4411 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 26} /* 4423 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 25, 28, 29} /* 4424 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 28, 29, 30} /* 4438 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 28, 29} /* 4439 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26, 29, 30} /* 4450 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 26, 30} /* 4453 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 28, 29} /* 4456 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 27, 28, 30} /* 4462 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 26, 27, 28, 30} /* 4463 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26, 29, 30} /* 4464 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 26, 27, 29} /* 4470 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 26, 30} /* 4488 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 27, 29} /* 4497 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 23, 27, 30} /* 4502 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 26} /* 4504 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 27, 28, 30} /* 4508 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 24, 28} /* 4532 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 28} /* 4534 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26, 30} /* 4547 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 27, 28, 30} /* 4554 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 26, 28, 30} /* 4560 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 26, 28, 30} /* 4565 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 25, 28} /* 4579 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 29, 30} /* 4584 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 25, 28} /* 4593 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 25, 27} /* 4595 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 24, 28} /* 4604 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 25} /* 4610 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 26, 27, 30} /* 4611 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 25, 28, 29} /* 4612 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 26, 29} /* 4624 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 29, 30} /* 4626 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 27, 29} /* 4628 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 27, 29, 30} /* 4645 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 29} /* 4654 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 26, 28} /* 4657 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 25, 27, 28, 30} /* 4658 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 28, 29, 30} /* 4659 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 26, 27, 28, 30} /* 4667 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 24, 28, 29, 30} /* 4674 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 26, 27, 29, 30} /* 4680 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 26, 27, 29} /* 4681 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 24, 25, 29, 30} /* 4685 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 27, 29, 30} /* 4687 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 25, 29} /* 4688 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 22, 23, 25, 26} /* 4697 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 23, 27, 28} /* 4707 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 24, 25, 28} /* 4709 */,
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 26, 27} /* 4718 */           }),
        ("bsc-phy-N-2013" |-> {
            {31, 32, 33, 35, 36, 37} /* 0 */,
            {31, 32, 33, 34, 36, 37} /* 1 */,
            {31, 32, 33, 34, 36, 38} /* 2 */,
            {31, 32, 34, 35, 36, 37} /* 3 */,
            {31, 32, 33, 34, 35, 38} /* 4 */,
            {31, 32, 33, 34, 35, 37} /* 5 */,
            {31, 32, 33, 35, 36, 38} /* 6 */,
            {31, 32, 34, 35, 36, 38} /* 7 */           }),
        ("bsc-bio-N-2015" |-> {
            {39, 40, 41, 42, 43, 44, 45, 46} /* 0 */           }),
        ("bsc-che-N-2013" |-> {
            {47, 48, 49, 50, 51} /* 0 */,
            {47, 48, 49, 50, 52, 53} /* 1 */           }),
        ("bsc-mat-N-2008" |-> {
            {54, 55, 56, 57, 59} /* 3 */,
            {54, 56, 57, 59, 60} /* 4 */,
            {54, 55, 59, 60} /* 5 */,
            {54, 55, 58, 60} /* 6 */,
            {54, 55, 56, 57, 60} /* 7 */,
            {54, 55, 56, 57, 58} /* 8 */,
            {54, 56, 57, 58, 59} /* 9 */,
            {55, 56, 57, 58, 60} /* 12 */,
            {55, 58, 59, 60} /* 13 */,
            {54, 56, 57, 58, 60} /* 19 */,
            {56, 57, 58, 59, 60} /* 20 */,
            {54, 55, 58, 59} /* 21 */,
            {55, 56, 57, 59, 60} /* 26 */,
            {54, 58, 59, 60} /* 30 */,
            {55, 56, 57, 58, 59} /* 31 */           }),
        ("bsc-psy-N-2013" |-> {
            {61, 62, 63, 64, 65, 66, 67, 68, 69} /* 0 */           })
    }
    &
    sessions : POW(NATURAL1 * struct(duration:INTEGER, rhythm:INTEGER, dow:DAYS, slot:NATURAL1))
    &
    sessions = {
        (1, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (2, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (3, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (4, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (5, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (6, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (7, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (8, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (9, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (10, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (11, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (12, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (13, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (14, rec(dow:thu, slot:5, rhythm:0, duration:2)),
        (15, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (16, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (17, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (18, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (19, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (20, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (21, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (22, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (23, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (24, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (25, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (26, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (27, rec(dow:tue, slot:5, rhythm:0, duration:2)),
        (28, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (29, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (30, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (31, rec(dow:thu, slot:5, rhythm:0, duration:2)),
        (32, rec(dow:tue, slot:5, rhythm:0, duration:2)),
        (33, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (34, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (35, rec(dow:fri, slot:4, rhythm:0, duration:2)),
        (36, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (37, rec(dow:wed, slot:6, rhythm:0, duration:2)),
        (38, rec(dow:mon, slot:5, rhythm:0, duration:2)),
        (39, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (40, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (41, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (42, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (43, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (44, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (45, rec(dow:fri, slot:4, rhythm:0, duration:2)),
        (46, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (47, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (48, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (49, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (50, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (51, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (52, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (53, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (54, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (55, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (56, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (57, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (58, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (59, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (60, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (61, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (62, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (63, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (64, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (65, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (66, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (67, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (68, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (69, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (70, rec(dow:tue, slot:5, rhythm:0, duration:2)),
        (71, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (72, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (73, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (74, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (75, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (76, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (77, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (78, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (79, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (80, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (81, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (82, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (83, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (84, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (85, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (86, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (87, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (88, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (89, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (90, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (91, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (92, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (93, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (94, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (95, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (96, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (97, rec(dow:mon, slot:5, rhythm:0, duration:2)),
        (98, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (99, rec(dow:mon, slot:5, rhythm:0, duration:2)),
        (100, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (101, rec(dow:mon, slot:5, rhythm:0, duration:2)),
        (102, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (103, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (104, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (105, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (106, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (107, rec(dow:tue, slot:5, rhythm:0, duration:2)),
        (108, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (109, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (110, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (111, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (112, rec(dow:mon, slot:4, rhythm:1, duration:2)),
        (113, rec(dow:tue, slot:1, rhythm:1, duration:2)),
        (114, rec(dow:tue, slot:3, rhythm:1, duration:2)),
        (115, rec(dow:tue, slot:3, rhythm:1, duration:2)),
        (116, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (117, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (118, rec(dow:mon, slot:2, rhythm:1, duration:2)),
        (119, rec(dow:mon, slot:4, rhythm:1, duration:2)),
        (120, rec(dow:tue, slot:1, rhythm:1, duration:2)),
        (121, rec(dow:mon, slot:2, rhythm:1, duration:2)),
        (122, rec(dow:tue, slot:3, rhythm:1, duration:2)),
        (123, rec(dow:tue, slot:3, rhythm:1, duration:2)),
        (124, rec(dow:tue, slot:4, rhythm:1, duration:2)),
        (125, rec(dow:wed, slot:3, rhythm:1, duration:2)),
        (126, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (127, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (128, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (129, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (130, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (131, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (132, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (133, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (134, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (135, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (136, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (137, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (138, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (139, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (140, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (141, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (142, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (143, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (144, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (145, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (146, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (147, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (148, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (149, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (150, rec(dow:mon, slot:5, rhythm:0, duration:2)),
        (151, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (152, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (153, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (154, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (155, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (156, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (157, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (158, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (159, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (160, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (161, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (162, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (163, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (164, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (165, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (166, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (167, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (168, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (169, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (170, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (171, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (172, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (173, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (174, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (175, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (176, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (177, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (178, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (179, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (180, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (181, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (182, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (183, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (184, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (185, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (186, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (187, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (188, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (189, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (190, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (191, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (192, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (193, rec(dow:mon, slot:1, rhythm:0, duration:2)),
        (194, rec(dow:mon, slot:5, rhythm:0, duration:2)),
        (195, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (196, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (197, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (198, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (199, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (200, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (201, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (202, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (203, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (204, rec(dow:fri, slot:1, rhythm:0, duration:2)),
        (205, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (206, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (207, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (208, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (209, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (210, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (211, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (212, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (213, rec(dow:fri, slot:4, rhythm:0, duration:2)),
        (214, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (215, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (216, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (217, rec(dow:tue, slot:5, rhythm:0, duration:2)),
        (218, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (219, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (220, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (221, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (222, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (223, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (224, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (225, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (226, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (227, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (228, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (229, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (230, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (231, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (232, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (233, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (234, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (235, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (236, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (237, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (238, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (239, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (240, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (241, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (242, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (243, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (244, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (245, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (246, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (247, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (248, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (249, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (250, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (251, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (252, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (253, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (254, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (255, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (256, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (257, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (258, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (259, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (260, rec(dow:thu, slot:1, rhythm:0, duration:2)),
        (261, rec(dow:mon, slot:4, rhythm:0, duration:2)),
        (262, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (263, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (264, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (265, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (266, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (267, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (268, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (269, rec(dow:mon, slot:5, rhythm:0, duration:2)),
        (270, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (271, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (272, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (273, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (274, rec(dow:tue, slot:5, rhythm:0, duration:2)),
        (275, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (276, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (277, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (278, rec(dow:wed, slot:5, rhythm:0, duration:2)),
        (279, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (280, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (281, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (282, rec(dow:thu, slot:3, rhythm:0, duration:2)),
        (283, rec(dow:thu, slot:4, rhythm:0, duration:2)),
        (284, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (285, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (286, rec(dow:wed, slot:2, rhythm:0, duration:2)),
        (287, rec(dow:mon, slot:3, rhythm:0, duration:2)),
        (288, rec(dow:wed, slot:5, rhythm:0, duration:2)),
        (289, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (290, rec(dow:mon, slot:2, rhythm:0, duration:2)),
        (291, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (292, rec(dow:fri, slot:3, rhythm:0, duration:2)),
        (293, rec(dow:thu, slot:2, rhythm:0, duration:2)),
        (294, rec(dow:wed, slot:3, rhythm:0, duration:2)),
        (295, rec(dow:tue, slot:1, rhythm:0, duration:2)),
        (296, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (297, rec(dow:tue, slot:3, rhythm:0, duration:2)),
        (298, rec(dow:tue, slot:2, rhythm:0, duration:2)),
        (299, rec(dow:fri, slot:2, rhythm:0, duration:2)),
        (300, rec(dow:tue, slot:4, rhythm:0, duration:2)),
        (301, rec(dow:wed, slot:1, rhythm:0, duration:2)),
        (302, rec(dow:wed, slot:4, rhythm:0, duration:2)),
        (303, rec(dow:thu, slot:1, rhythm:0, duration:2))
    }
    &
    abstract_units : POW(NATURAL1 * struct(idx:NATURAL, title:STRING, key:STRING, type: TYPES))
    &
    abstract_units = {
        (1, rec(idx:1, title:"Grundlangen der Softwareentwicklung und Programmierung (Informatik I)", key:"P-CS-L-INFO1A", type:m)),
        (2, rec(idx:2, title:"Übungen zu Grundlangen der Softwareentwicklung und Programmierung (Informatik I)", key:"P-CS-L-INFO1B", type:m)),
        (3, rec(idx:3, title:"Praktische Übungen Grundlangen der Softwareentwicklung und Programmierung (Informatik I)", key:"P-CS-L-INFO1C", type:m)),
        (4, rec(idx:4, title:"Grundlangen der Technischen Informatik (Informatik II)", key:"P-CS-L-INFO2A", type:m)),
        (5, rec(idx:5, title:"Übungen zu Grundlangen der Technischen Informatik (Informatik II)", key:"P-CS-L-INFO2B", type:m)),
        (6, rec(idx:6, title:"Grundlangen der Algorithmen und Datenstrukturen (Informatik III)", key:"P-CS-L-INFO3A", type:m)),
        (7, rec(idx:7, title:"Übungen zu Grundlangen der Algorithmen und Datenstrukturen (Informatik III)", key:"P-CS-L-INFO3B", type:m)),
        (8, rec(idx:8, title:"Grundlangen der Theoretischen Informatik (Informatik IV)", key:"P-CS-L-INFO4A", type:m)),
        (9, rec(idx:9, title:"Übungen zu Grundlangen der Theoretischen Informatik (Informatik IV)", key:"P-CS-L-INFO4B", type:m)),
        (10, rec(idx:10, title:"Programmierpraktikum", key:"P-CS-L-PROPRAA", type:m)),
        (11, rec(idx:11, title:"Übungen: Programmierpraktikum", key:"P-CS-L-PROPRAB", type:m)),
        (12, rec(idx:12, title:"Analysis I", key:"P-CS-L-ANA1A", type:m)),
        (13, rec(idx:13, title:"Analysis I - Übungen", key:"P-CS-L-ANA1B", type:m)),
        (14, rec(idx:14, title:"Analysis I - Tutorium", key:"P-CS-L-ANA1C", type:m)),
        (15, rec(idx:15, title:"Lineare Algebra I", key:"P-CS-L-LA1A", type:m)),
        (16, rec(idx:16, title:"Lineare Algebra I - Übungen", key:"P-CS-L-LA1B", type:m)),
        (17, rec(idx:17, title:"Lineare Algebra I - Tutorium", key:"P-CS-L-LA1C", type:m)),
        (18, rec(idx:18, title:"Analysis II", key:"P-CS-L-ANA2A", type:m)),
        (19, rec(idx:19, title:"Analysis II - Übungen", key:"P-CS-L-ANA2B", type:m)),
        (20, rec(idx:20, title:"Analysis II - Tutorium", key:"P-CS-L-ANA2C", type:m)),
        (21, rec(idx:21, title:"Numerik I", key:"P-CS-L-NUM1A", type:e)),
        (22, rec(idx:22, title:"Numerik I - Übungen", key:"P-CS-L-NUM1B", type:e)),
        (23, rec(idx:23, title:"Numerik I - Praktische Übungen", key:"P-CS-L-NUM1C", type:e)),
        (24, rec(idx:24, title:"Einführung in die Stochastik", key:"P-CS-L-STOA", type:e)),
        (25, rec(idx:25, title:"Übungen zu Einführung in die Stochastik", key:"P-CS-L-STOB", type:e)),
        (26, rec(idx:26, title:"Datenbanksysteme (für BA Informatik)", key:"P-CS-L-DBSA", type:m)),
        (27, rec(idx:27, title:"Datenbanksysteme (für BA Informatik) - Übungen", key:"P-CS-L-DBSB", type:m)),
        (28, rec(idx:28, title:"Rechnernetze", key:"P-CS-L-RNA", type:m)),
        (29, rec(idx:29, title:"Rechnernetze - Hörsaalübung", key:"P-CS-L-RNB", type:m)),
        (30, rec(idx:30, title:"Einführung in die logische Programmierung", key:"P-CS-L-PROLOG", type:m)),
        (31, rec(idx:31, title:"Compilerbau", key:"P-CS-L-CBAU", type:m)),
        (32, rec(idx:32, title:"From NAND to Tetris", key:"P-CS-L-NAND", type:m)),
        (33, rec(idx:33, title:"Verfahren zur kollektiven Entscheidungsfindung", key:"P-CS-L-KOLL", type:m)),
        (34, rec(idx:34, title:"Präferenzaggregation durch Wählen: Algorithmik und Komplexität", key:"P-CS-L-WAHLA", type:m)),
        (35, rec(idx:35, title:"Übungen zu Präferenzaggregation durch Wählen: Algorithmik und Komplexität", key:"P-CS-L-WAHLB", type:m)),
        (36, rec(idx:36, title:"Betriesbssysteme / Grundlagen verteilter Systeme", key:"P-CS-L-VSBS", type:m)),
        (37, rec(idx:37, title:"Graphenalgorithmen I", key:"P-CS-L-GALGO1", type:m)),
        (38, rec(idx:38, title:"Algorithmen in der Bioinformatik", key:"P-CS-L-BIOINF", type:m)),
        (39, rec(idx:39, title:"Datenbanksysteme (für BA Informatik)", key:"P-CS-L-DBSA", type:m)),
        (40, rec(idx:40, title:"Datenbanksysteme (für BA Informatik) - Übungen", key:"P-CS-L-DBSB", type:m)),
        (41, rec(idx:41, title:"Rechnernetze", key:"P-CS-L-RNA", type:m)),
        (42, rec(idx:42, title:"Rechnernetze - Hörsaalübung", key:"P-CS-L-RNB", type:m)),
        (43, rec(idx:43, title:"Einführung in die logische Programmierung", key:"P-CS-L-PROLOG", type:m)),
        (44, rec(idx:44, title:"Compilerbau", key:"P-CS-L-CBAU", type:m)),
        (45, rec(idx:45, title:"From NAND to Tetris", key:"P-CS-L-NAND", type:m)),
        (46, rec(idx:46, title:"Verfahren zur kollektiven Entscheidungsfindung", key:"P-CS-L-KOLL", type:m)),
        (47, rec(idx:47, title:"Präferenzaggregation durch Wählen: Algorithmik und Komplexität", key:"P-CS-L-WAHLA", type:m)),
        (48, rec(idx:48, title:"Übungen zu Präferenzaggregation durch Wählen: Algorithmik und Komplexität", key:"P-CS-L-WAHLB", type:m)),
        (49, rec(idx:49, title:"Betriesbssysteme / Grundlagen verteilter Systeme", key:"P-CS-L-VSBS", type:m)),
        (50, rec(idx:50, title:"Graphenalgorithmen I", key:"P-CS-L-GALGO1", type:m)),
        (51, rec(idx:51, title:"Algorithmen in der Bioinformatik", key:"P-CS-L-BIOINF", type:m)),
        (52, rec(idx:52, title:"Mathematische Methoden der Physik I", key:"P-PHY-L-MAME1A", type:m)),
        (53, rec(idx:53, title:"Übungen zu Mathematische Methoden der Physik I", key:"P-PHY-L-MAME1B", type:m)),
        (54, rec(idx:54, title:"Grundpraktikum 1", key:"P-PHY-L-GP1", type:m)),
        (55, rec(idx:55, title:"Optik", key:"P-PHY-L-OPTA", type:m)),
        (56, rec(idx:56, title:"Theoretsische Übungen - Optik", key:"P-PHY-L-OPTB", type:m)),
        (57, rec(idx:57, title:"Experimentelle Mechanik", key:"P-PHY-L-EXMA", type:m)),
        (58, rec(idx:58, title:"Übungen zu Experimentelle Mechanik", key:"P-PHY-L-EXMB", type:m)),
        (59, rec(idx:59, title:"Elektrizität und Magnetismus", key:"P-PHY-L-ELMAA", type:m)),
        (60, rec(idx:60, title:"Übungen zu Vorlesung Elektrizität und Magnetismus", key:"P-PHY-L-ELMAB", type:m)),
        (61, rec(idx:61, title:"Experimentelle Atomphysik", key:"P-PHY-L-ATOMA", type:m)),
        (62, rec(idx:62, title:"Übungen zu Experimentelle Atomphysik", key:"P-PHY-L-ATOMB", type:m)),
        (63, rec(idx:63, title:"Theoretische Mechanik", key:"P-PHY-L-THEOMA", type:m)),
        (64, rec(idx:64, title:"Übungen zu Theoretische Mechanik", key:"P-PHY-L-THEOMB", type:m)),
        (65, rec(idx:65, title:"Theoretische Elektrodynamik", key:"P-PHY-L-EDYNA", type:m)),
        (66, rec(idx:66, title:"Übungen zu Theoretische Elektrodynamik", key:"P-PHY-L-EDYNB", type:m)),
        (67, rec(idx:67, title:"Allgemeine Botanik und Zoologie für Biochemiker und Informatiker", key:"P-BIO-L-BOZOO", type:m)),
        (68, rec(idx:68, title:"Bio110: Zell- und Molekularbiologie", key:"P-BIO-L-110", type:m)),
        (69, rec(idx:69, title:"Bio250: Genetik", key:"P-BIO-L-250", type:m)),
        (70, rec(idx:70, title:"Bio260: Ökologie und Evolution", key:"P-BIO-L-260", type:m)),
        (71, rec(idx:71, title:"Bio240: Mikrobiologie", key:"P-BIO-L-240", type:m)),
        (72, rec(idx:72, title:"Bio220: Tierphysiologie", key:"P-BIO-L-220", type:m)),
        (73, rec(idx:73, title:"Bio210: Biochemie", key:"P-BIO-L-210", type:m)),
        (74, rec(idx:74, title:"Bio230: Biphysik", key:"P-BIO-L-230A", type:m)),
        (75, rec(idx:75, title:"Übungen zu Bio230: Biphysik", key:"P-BIO-L-230B", type:m)),
        (76, rec(idx:76, title:"Einführung in die Allgemeine und Anorganische Chemie (C1)", key:"P-CHE-L-C1", type:m)),
        (77, rec(idx:77, title:"Organische Chemie für Studierende der Biologie", key:"P-CHE-L-OC", type:m)),
        (78, rec(idx:78, title:"PC II: Thermodynamik und chemische Kinetik", key:"P-CHE-L-PC2A", type:m)),
        (79, rec(idx:79, title:"Übungen zu PC II: Thermodynamik und chemische Kinetik", key:"P-CHE-L-PC2B", type:m)),
        (80, rec(idx:80, title:"Einführung in die Quanten- und Computerchemie (QCCC)", key:"P-CHE-L-QCCCA", type:m)),
        (81, rec(idx:81, title:"Computerpraktikum: Einführung in die Quanten- und Computerchemie (QCCC)", key:"P-CHE-L-QCCCB", type:m)),
        (82, rec(idx:82, title:"Angewandte Quantenchemie und Computerchemie (AnQCCC)", key:"P-CHE-L-ANQCCC", type:m)),
        (83, rec(idx:83, title:"Biochemie für Biologen (Bio 210)", key:"P-CHE-L-BIOC", type:m)),
        (84, rec(idx:84, title:"Biophysik für Biologen (Bio 230)", key:"P-CHE-L-BIOP", type:m)),
        (85, rec(idx:85, title:"Analysis III", key:"P-MAT-L-ANA3A", type:m)),
        (86, rec(idx:86, title:"Analysis III - Übungen", key:"P-MAT-L-ANA3B", type:m)),
        (87, rec(idx:87, title:"Analysis III - Tutorium", key:"P-MAT-L-ANA3C", type:m)),
        (88, rec(idx:88, title:"Lineare Algebra II", key:"P-MAT-L-LA2A", type:m)),
        (89, rec(idx:89, title:"Lineare Algebra II - Übungen", key:"P-MAT-L-LA2B", type:m)),
        (90, rec(idx:90, title:"Lineare Algebra II - Tutorium", key:"P-MAT-L-LA2C", type:m)),
        (91, rec(idx:91, title:"Computergestützte Analysis", key:"P-MAT-L-CANAA", type:m)),
        (92, rec(idx:92, title:"Übungen zu Computergestützte Analysis", key:"P-MAT-L-CANAB", type:m)),
        (93, rec(idx:93, title:"Computergestützte Lineare Algebra", key:"P-MAT-L-CLAA", type:m)),
        (94, rec(idx:94, title:"Übungen zu Computergestützte Lineare Algebra", key:"P-MAT-L-CLAB", type:m)),
        (95, rec(idx:95, title:"Numerik I", key:"P-MAT-L-NUM1A", type:m)),
        (96, rec(idx:96, title:"Numerik I - Übungen", key:"P-MAT-L-NUM1B", type:m)),
        (97, rec(idx:97, title:"Numerik I- Praktische Übungen", key:"P-MAT-L-NUM1C", type:m)),
        (98, rec(idx:98, title:"Einführung in die Stochastik", key:"P-MAT-L-STOCHAA", type:m)),
        (99, rec(idx:99, title:"Übungen zu Einführung in die Stochastik", key:"P-MAT-L-STOCHAB", type:m)),
        (100, rec(idx:100, title:"Wahrscheinlichkeitstheorie", key:"P-MAT-L-WAHRA", type:m)),
        (101, rec(idx:101, title:"Übungen zu Wahrscheinlichkeitstheorie", key:"P-MAT-L-WAHRB", type:m)),
        (102, rec(idx:102, title:"Quantitative Methoden I", key:"P-PSY-L-QM1", type:m)),
        (103, rec(idx:103, title:"Quantitavie Methoden II", key:"P-PSY-L-QM2", type:m)),
        (104, rec(idx:104, title:"Physiologischhe Grundlagen des Verhaltens I", key:"P-PSY-L-VER1", type:m)),
        (105, rec(idx:105, title:"Physiologische Grundlagen des Verhaltens II", key:"P-PSY-L-VER2", type:m)),
        (106, rec(idx:106, title:"Biologische Psychologie I", key:"P-PSY-L-BPSY1", type:m)),
        (107, rec(idx:107, title:"Biologische Psychologie II", key:"P-PSY-L-BPSY2", type:m)),
        (108, rec(idx:108, title:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion I", key:"P-PSY-L-EMO1", type:m)),
        (109, rec(idx:109, title:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion II", key:"P-PSY-L-EMO2", type:m)),
        (110, rec(idx:110, title:"Sozialpsychologie I", key:"P-PSY-L-SOZ", type:m))
    }
    &
    module_abstract_unit_semester : POW((dom(modules) * dom(abstract_units)) * SEMESTERS)
    &
    module_abstract_unit_semester = {
        (7, 17, 2),
        (39, 67, 3),
        (31, 52, 3),
        (26, 46, 5),
        (33, 56, 5),
        (48, 77, 4),
        (58, 96, 6),
        (60, 101, 3),
        (28, 49, 5),
        (5, 11, 4),
        (1, 3, 1),
        (35, 60, 6),
        (38, 66, 3),
        (30, 51, 4),
        (6, 14, 1),
        (14, 31, 4),
        (32, 54, 2),
        (54, 86, 5),
        (1, 2, 1),
        (35, 59, 4),
        (33, 56, 3),
        (2, 4, 2),
        (6, 13, 2),
        (7, 15, 1),
        (55, 88, 4),
        (58, 95, 6),
        (17, 35, 4),
        (8, 20, 2),
        (27, 48, 6),
        (8, 18, 3),
        (33, 55, 5),
        (55, 89, 6),
        (55, 89, 4),
        (37, 64, 4),
        (51, 82, 4),
        (14, 31, 6),
        (6, 14, 2),
        (39, 67, 5),
        (31, 52, 5),
        (19, 37, 5),
        (9, 22, 4),
        (64, 105, 3),
        (4, 9, 4),
        (23, 43, 5),
        (3, 7, 3),
        (47, 76, 5),
        (7, 17, 1),
        (21, 40, 5),
        (8, 20, 3),
        (12, 29, 3),
        (26, 46, 3),
        (38, 65, 5),
        (62, 103, 4),
        (43, 71, 3),
        (37, 63, 2),
        (12, 29, 5),
        (16, 33, 5),
        (27, 48, 4),
        (49, 78, 4),
        (37, 64, 2),
        (54, 87, 3),
        (11, 26, 3),
        (43, 71, 5),
        (38, 65, 3),
        (50, 81, 5),
        (24, 44, 4),
        (58, 97, 6),
        (65, 106, 3),
        (66, 107, 4),
        (45, 73, 5),
        (35, 60, 4),
        (22, 42, 5),
        (55, 88, 6),
        (7, 16, 1),
        (59, 99, 3),
        (12, 28, 3),
        (36, 62, 4),
        (63, 104, 3),
        (50, 81, 3),
        (27, 47, 4),
        (37, 64, 6),
        (18, 36, 5),
        (22, 42, 3),
        (40, 68, 5),
        (57, 93, 5),
        (8, 19, 2),
        (37, 63, 4),
        (59, 99, 5),
        (55, 90, 6),
        (15, 32, 4),
        (54, 87, 5),
        (22, 41, 3),
        (24, 44, 6),
        (34, 57, 3),
        (46, 74, 3),
        (35, 59, 6),
        (45, 73, 3),
        (22, 41, 5),
        (2, 5, 2),
        (27, 47, 6),
        (67, 108, 3),
        (1, 1, 1),
        (60, 100, 5),
        (34, 57, 5),
        (36, 62, 6),
        (9, 21, 4),
        (8, 19, 3),
        (48, 77, 6),
        (34, 58, 5),
        (60, 100, 3),
        (16, 33, 3),
        (52, 83, 3),
        (46, 75, 3),
        (18, 36, 3),
        (29, 50, 3),
        (58, 97, 4),
        (53, 84, 3),
        (44, 72, 3),
        (57, 94, 3),
        (68, 109, 4),
        (46, 74, 5),
        (49, 79, 6),
        (50, 80, 5),
        (5, 10, 2),
        (13, 30, 5),
        (21, 39, 5),
        (38, 66, 5),
        (58, 96, 4),
        (12, 28, 5),
        (6, 12, 2),
        (25, 45, 4),
        (21, 40, 3),
        (17, 34, 4),
        (55, 90, 4),
        (31, 53, 3),
        (20, 38, 4),
        (5, 11, 2),
        (41, 69, 6),
        (29, 50, 5),
        (34, 58, 3),
        (20, 38, 6),
        (59, 98, 3),
        (54, 86, 3),
        (46, 75, 5),
        (4, 8, 4),
        (6, 12, 1),
        (51, 82, 6),
        (56, 91, 3),
        (25, 45, 6),
        (54, 85, 5),
        (19, 37, 3),
        (57, 94, 5),
        (8, 18, 2),
        (7, 15, 2),
        (42, 70, 6),
        (52, 83, 5),
        (59, 98, 5),
        (10, 24, 3),
        (35, 60, 2),
        (42, 70, 4),
        (56, 92, 5),
        (31, 53, 5),
        (50, 80, 3),
        (35, 59, 2),
        (54, 85, 3),
        (13, 30, 3),
        (28, 49, 3),
        (7, 16, 2),
        (49, 78, 6),
        (47, 76, 3),
        (36, 61, 6),
        (5, 10, 4),
        (36, 61, 4),
        (21, 39, 3),
        (41, 69, 4),
        (17, 34, 6),
        (37, 63, 6),
        (11, 27, 3),
        (44, 72, 5),
        (60, 101, 5),
        (30, 51, 6),
        (6, 13, 1),
        (10, 25, 3),
        (57, 93, 3),
        (33, 55, 3),
        (11, 27, 5),
        (56, 92, 3),
        (3, 6, 3),
        (9, 23, 4),
        (11, 26, 5),
        (69, 110, 3),
        (15, 32, 6),
        (17, 35, 6),
        (23, 43, 3),
        (32, 54, 4),
        (40, 68, 3),
        (61, 102, 3),
        (58, 95, 4),
        (56, 91, 5),
        (53, 84, 5),
        (49, 79, 4)
    }
    &
    units :  POW(NATURAL1 * struct(idx:NATURAL1, key:STRING, groups:POW(INTEGER*struct(sessions:POW(INTEGER))), title:STRING))
    &
    units = {
        (1, rec(idx:1, title:"Grundlagen der Softwareentwicklung und Programmierung (Informatik I)", key:"110000", groups:{(1, rec(sessions:{2, 1}))})),
        (2, rec(idx:2, title:"Übungen zu Grundlagen der Softwareentwicklung und Programmierung (Informatik I)", key:"110001", groups:{(11, rec(sessions:{12})), (8, rec(sessions:{9})), (12, rec(sessions:{13})), (13, rec(sessions:{14})), (3, rec(sessions:{4})), (14, rec(sessions:{15})), (6, rec(sessions:{7})), (2, rec(sessions:{3})), (7, rec(sessions:{8})), (10, rec(sessions:{11})), (4, rec(sessions:{5})), (15, rec(sessions:{16})), (16, rec(sessions:{17})), (9, rec(sessions:{10})), (5, rec(sessions:{6}))})),
        (3, rec(idx:3, title:"Praktische Übungen zu Grundlagen der Softwareentwicklung und Programmierung (Informatik I)", key:"110002", groups:{(17, rec(sessions:{18}))})),
        (4, rec(idx:4, title:"Grundlagen der Technischen Informatik (Informatik II)", key:"110100", groups:{(18, rec(sessions:{19, 20}))})),
        (5, rec(idx:5, title:"Übungen zu Grundlagen der Technischen Informatik (Informatik II)", key:"110101", groups:{(19, rec(sessions:{21}))})),
        (6, rec(idx:6, title:"Grundlagen der Algorithmen und Datenstrukturen (Informatik III)", key:"110200", groups:{(20, rec(sessions:{23, 22}))})),
        (7, rec(idx:7, title:"Übungen zu Grundlagen der Algorithmen und Datenstrukturen (Informatik III)", key:"110201", groups:{(21, rec(sessions:{24}))})),
        (8, rec(idx:8, title:"Grundlagen der Theoretischen Informatik (Informatik IV)", key:"110300", groups:{(22, rec(sessions:{25, 26}))})),
        (9, rec(idx:9, title:"Übungen zu Grundlagen der Theoretischen Informatik (Informatik IV)", key:"110301", groups:{(23, rec(sessions:{27}))})),
        (10, rec(idx:10, title:"Programmierpraktikum", key:"110400", groups:{(24, rec(sessions:{28}))})),
        (11, rec(idx:11, title:"Übungen: Programmierpraktikum", key:"100401", groups:{(25, rec(sessions:{29}))})),
        (12, rec(idx:12, title:"Analysis I", key:"120000", groups:{(26, rec(sessions:{30, 31})), (27, rec(sessions:{33, 32}))})),
        (13, rec(idx:13, title:"Übungen zu Analysis I", key:"120001", groups:{(28, rec(sessions:{34}))})),
        (14, rec(idx:14, title:"Tutorium zu Analysis I", key:"120002", groups:{(29, rec(sessions:{35}))})),
        (15, rec(idx:15, title:"Lineare Algebra I", key:"120100", groups:{(30, rec(sessions:{36, 37})), (31, rec(sessions:{38, 39}))})),
        (16, rec(idx:16, title:"Lineare Algebra I - Übungen", key:"120101", groups:{(32, rec(sessions:{40}))})),
        (17, rec(idx:17, title:"Lineare Algebra I - Tutorium", key:"120102", groups:{(33, rec(sessions:{41}))})),
        (18, rec(idx:18, title:"Analysis II", key:"120200", groups:{(34, rec(sessions:{42, 43}))})),
        (19, rec(idx:19, title:"Übungen zu Analysis II", key:"120201", groups:{(35, rec(sessions:{44}))})),
        (20, rec(idx:20, title:"Tutorium zu Analysis II", key:"120202", groups:{(36, rec(sessions:{45}))})),
        (21, rec(idx:21, title:"Numerik I", key:"120300", groups:{(37, rec(sessions:{47, 46}))})),
        (22, rec(idx:22, title:"Übungen zu Numerik I", key:"120301", groups:{(38, rec(sessions:{48}))})),
        (23, rec(idx:23, title:"Programmierübungen zu Numerik I", key:"120302", groups:{(39, rec(sessions:{49}))})),
        (24, rec(idx:24, title:"Einführung in die Stochastik", key:"120400", groups:{(40, rec(sessions:{50, 51}))})),
        (25, rec(idx:25, title:"Übungen zu Einführung in die Stochastik", key:"120401", groups:{(44, rec(sessions:{55})), (43, rec(sessions:{54})), (45, rec(sessions:{56})), (42, rec(sessions:{53})), (41, rec(sessions:{52})), (46, rec(sessions:{57}))})),
        (26, rec(idx:26, title:"Datenbanksysteme (für BA Informatik)", key:"130000", groups:{(47, rec(sessions:{58, 59}))})),
        (27, rec(idx:27, title:"Datenbanksysteme (für BA Informatik) - Übungen", key:"130001", groups:{(52, rec(sessions:{64})), (48, rec(sessions:{60})), (51, rec(sessions:{63})), (49, rec(sessions:{61})), (50, rec(sessions:{62}))})),
        (28, rec(idx:28, title:"Rechnernetze", key:"130100", groups:{(53, rec(sessions:{65, 66}))})),
        (29, rec(idx:29, title:"Rechnernetze - Hörsaalübung", key:"130101", groups:{(54, rec(sessions:{67}))})),
        (30, rec(idx:30, title:"Einführung in die logische Programmierung", key:"130200", groups:{(55, rec(sessions:{70, 68, 69}))})),
        (31, rec(idx:31, title:"Compilerbau", key:"130300", groups:{(56, rec(sessions:{71, 72, 73}))})),
        (32, rec(idx:32, title:"From NAND to Tetris", key:"130400", groups:{(57, rec(sessions:{75, 76, 74}))})),
        (33, rec(idx:33, title:"Verfahren zur kollektiven Entscheidungsfindung", key:"130500", groups:{(58, rec(sessions:{77, 78, 79, 80}))})),
        (34, rec(idx:34, title:"Präferenzaggretation durch Wählen: Algorithmik und Komplexität", key:"130600", groups:{(59, rec(sessions:{82, 81, 83}))})),
        (35, rec(idx:35, title:"Übungen zu Präferenzaggretation durch Wählen: Algorithmik und Komplexität", key:"130601", groups:{(60, rec(sessions:{84})), (61, rec(sessions:{85}))})),
        (36, rec(idx:36, title:"Betriebssysteme", key:"130700", groups:{(62, rec(sessions:{86, 87}))})),
        (37, rec(idx:37, title:"Graphenalgorithmen I", key:"130900", groups:{(63, rec(sessions:{88, 89})), (64, rec(sessions:{91, 90}))})),
        (38, rec(idx:38, title:"Algorithmen in der Bioinformatik", key:"131000", groups:{(65, rec(sessions:{92, 93}))})),
        (39, rec(idx:39, title:"Mathematische Methoden der Physik I", key:"210000", groups:{(66, rec(sessions:{95, 94}))})),
        (40, rec(idx:40, title:"Übungen zu Mathematische Methoden der Physik I", key:"210001", groups:{(72, rec(sessions:{106, 107})), (67, rec(sessions:{97, 96})), (69, rec(sessions:{101, 100})), (71, rec(sessions:{105, 104})), (73, rec(sessions:{109, 108})), (70, rec(sessions:{102, 103})), (68, rec(sessions:{99, 98}))})),
        (41, rec(idx:41, title:"Optik", key:"210200", groups:{(74, rec(sessions:{111, 110}))})),
        (42, rec(idx:42, title:"Theoretische Übungen - Optik", key:"210201", groups:{(75, rec(sessions:{112})), (77, rec(sessions:{114})), (78, rec(sessions:{115})), (76, rec(sessions:{113}))})),
        (43, rec(idx:43, title:"Experimentelle Mechanik", key:"210300", groups:{(79, rec(sessions:{117, 116}))})),
        (44, rec(idx:44, title:"Übungen zur Experimentellen Mechanik", key:"210301", groups:{(80, rec(sessions:{118})), (85, rec(sessions:{123})), (86, rec(sessions:{124})), (82, rec(sessions:{120})), (87, rec(sessions:{125})), (83, rec(sessions:{121})), (84, rec(sessions:{122})), (81, rec(sessions:{119}))})),
        (45, rec(idx:45, title:"Elektrizität und Magnetismus", key:"210400", groups:{(88, rec(sessions:{127, 126}))})),
        (46, rec(idx:46, title:"Übungen zur Vorlesung Elektrizität und Magnetismus", key:"210401", groups:{(89, rec(sessions:{128})), (91, rec(sessions:{130})), (93, rec(sessions:{132})), (90, rec(sessions:{129})), (92, rec(sessions:{131}))})),
        (47, rec(idx:47, title:"Experimentelle Atomphysik", key:"210500", groups:{(94, rec(sessions:{133, 134}))})),
        (48, rec(idx:48, title:"Übungen zu Experimentelle Atomphysik", key:"210501", groups:{(98, rec(sessions:{138})), (96, rec(sessions:{136})), (97, rec(sessions:{137})), (95, rec(sessions:{135}))})),
        (49, rec(idx:49, title:"Theoretische Mechanik", key:"210600", groups:{(99, rec(sessions:{140, 139}))})),
        (50, rec(idx:50, title:"Übungen zur Theoretischen Mechanik", key:"210601", groups:{(104, rec(sessions:{145})), (100, rec(sessions:{141})), (105, rec(sessions:{146})), (102, rec(sessions:{143})), (103, rec(sessions:{144})), (101, rec(sessions:{142}))})),
        (51, rec(idx:51, title:"Theoretische Elektrodynamik", key:"210700", groups:{(106, rec(sessions:{148, 147}))})),
        (52, rec(idx:52, title:"Übungen zur Theoretischen Elektrodynamik", key:"210701", groups:{(107, rec(sessions:{149})), (108, rec(sessions:{150})), (111, rec(sessions:{153})), (112, rec(sessions:{154})), (110, rec(sessions:{152})), (109, rec(sessions:{151}))})),
        (53, rec(idx:53, title:"Allgemeine Botanik und Zoologie für Biochemiker und Informatiker", key:"220000", groups:{(113, rec(sessions:{155}))})),
        (54, rec(idx:54, title:"Bio110: Zell- und Molekularbiologie", key:"220100", groups:{(114, rec(sessions:{156, 157}))})),
        (55, rec(idx:55, title:"Bio250: Genetik", key:"220200", groups:{(115, rec(sessions:{159, 158}))})),
        (56, rec(idx:56, title:"Bio260: Ökologie und Evolution", key:"220300", groups:{(116, rec(sessions:{160, 161}))})),
        (57, rec(idx:57, title:"Bio240: Mikrobiologie", key:"220400", groups:{(117, rec(sessions:{163, 162}))})),
        (58, rec(idx:58, title:"Bio220: Tierphysiologie", key:"220500", groups:{(118, rec(sessions:{164, 165}))})),
        (59, rec(idx:59, title:"Bio210: Biochemie", key:"220600", groups:{(119, rec(sessions:{167, 166}))})),
        (60, rec(idx:60, title:"Bio230: Biophysik", key:"220700", groups:{(120, rec(sessions:{168, 169}))})),
        (61, rec(idx:61, title:"Übung: Bio230: Biophysik", key:"220701", groups:{(125, rec(sessions:{174})), (123, rec(sessions:{172})), (121, rec(sessions:{170})), (124, rec(sessions:{173})), (122, rec(sessions:{171}))})),
        (62, rec(idx:62, title:"Einführung in die Allgemeine und Anorganische Chemie (C1)", key:"230000", groups:{(126, rec(sessions:{176, 175}))})),
        (63, rec(idx:63, title:"Organische Chemie für Studierende der Biologie", key:"230100", groups:{(127, rec(sessions:{177, 178}))})),
        (64, rec(idx:64, title:"PC II: Thermodynamik und chemische Kinetik", key:"230200", groups:{(128, rec(sessions:{179, 180}))})),
        (65, rec(idx:65, title:"Übungen zu PC II: Theromdynamik und chemische Kinetik", key:"230201", groups:{(132, rec(sessions:{184})), (134, rec(sessions:{186})), (130, rec(sessions:{182})), (129, rec(sessions:{181})), (131, rec(sessions:{183})), (135, rec(sessions:{187})), (133, rec(sessions:{185}))})),
        (66, rec(idx:66, title:"Einführung in die Quanten- und Computerchemie (QCCC)", key:"230300", groups:{(136, rec(sessions:{189, 188}))})),
        (67, rec(idx:67, title:"Computerpraktikum: Einführung in die Quanten- und Computerchemie", key:"230301", groups:{(143, rec(sessions:{196})), (141, rec(sessions:{194})), (146, rec(sessions:{199})), (137, rec(sessions:{190})), (139, rec(sessions:{192})), (145, rec(sessions:{198})), (138, rec(sessions:{191})), (140, rec(sessions:{193})), (142, rec(sessions:{195})), (144, rec(sessions:{197}))})),
        (68, rec(idx:68, title:"Angewandte Quantenchemie und Computerchemie (AnQCCC)", key:"230400", groups:{(147, rec(sessions:{200, 201, 202}))})),
        (69, rec(idx:69, title:"Biochemie für Biologen (Bio 210)", key:"230500", groups:{(148, rec(sessions:{204, 203}))})),
        (70, rec(idx:70, title:"Biophysik für Biologen (Bio 230)", key:"230600", groups:{(149, rec(sessions:{206, 205}))})),
        (71, rec(idx:71, title:"Analysis III", key:"240000", groups:{(150, rec(sessions:{208, 207}))})),
        (72, rec(idx:72, title:"Analysis III - Übungen", key:"240001", groups:{(154, rec(sessions:{212})), (152, rec(sessions:{210})), (153, rec(sessions:{211})), (151, rec(sessions:{209}))})),
        (73, rec(idx:73, title:"Analysis III - Tutorium", key:"240002", groups:{(155, rec(sessions:{213}))})),
        (74, rec(idx:74, title:"Lineare Algebra II", key:"240100", groups:{(156, rec(sessions:{215, 214}))})),
        (75, rec(idx:75, title:"Übungen zu Lineare Algebra II", key:"240101", groups:{(157, rec(sessions:{216})), (160, rec(sessions:{219})), (161, rec(sessions:{220})), (159, rec(sessions:{218})), (158, rec(sessions:{217}))})),
        (76, rec(idx:76, title:"Tutorium zu Lineare Algebra II", key:"240102", groups:{(162, rec(sessions:{221}))})),
        (77, rec(idx:77, title:"Computergestützte Analysis / Lineare Algebra", key:"240300", groups:{(163, rec(sessions:{222}))})),
        (78, rec(idx:78, title:"Übungen zu Computergestützte Lineare Algebra", key:"240301", groups:{(170, rec(sessions:{229})), (164, rec(sessions:{223})), (172, rec(sessions:{231})), (165, rec(sessions:{224})), (168, rec(sessions:{227})), (169, rec(sessions:{228})), (166, rec(sessions:{225})), (167, rec(sessions:{226})), (171, rec(sessions:{230}))})),
        (79, rec(idx:79, title:"Übungen zu Computergestützte Analysis", key:"240201", groups:{(174, rec(sessions:{233})), (177, rec(sessions:{236})), (176, rec(sessions:{235})), (178, rec(sessions:{237})), (173, rec(sessions:{232})), (175, rec(sessions:{234}))})),
        (80, rec(idx:80, title:"Numerik II", key:"240800", groups:{(179, rec(sessions:{238, 239}))})),
        (81, rec(idx:81, title:"Übungen zu Numerik II", key:"240801", groups:{(181, rec(sessions:{241})), (183, rec(sessions:{243})), (180, rec(sessions:{240})), (182, rec(sessions:{242}))})),
        (82, rec(idx:82, title:"Wahrscheinlichkeitstheorie", key:"240900", groups:{(184, rec(sessions:{245, 244}))})),
        (83, rec(idx:83, title:"Übungen zu Wahrscheinlickeitstheorie", key:"²40901", groups:{(185, rec(sessions:{246})), (186, rec(sessions:{247}))})),
        (84, rec(idx:84, title:"Quantitative Methoden I", key:"250000", groups:{(187, rec(sessions:{248}))})),
        (85, rec(idx:85, title:"Quantitative Methoden II", key:"250100", groups:{(188, rec(sessions:{249}))})),
        (86, rec(idx:86, title:"Quantitative Methoden II - Tutorium", key:"250101", groups:{(189, rec(sessions:{250}))})),
        (87, rec(idx:87, title:"Physiologiesche Grundlagen des Verhaltens I", key:"250200", groups:{(190, rec(sessions:{251}))})),
        (88, rec(idx:88, title:"Physiologische Grundlagen des Verhaltens II", key:"250300", groups:{(191, rec(sessions:{252}))})),
        (89, rec(idx:89, title:"Biologische Psychologie I", key:"250400", groups:{(192, rec(sessions:{253}))})),
        (90, rec(idx:90, title:"Biologische Psychologie II", key:"250500", groups:{(193, rec(sessions:{254}))})),
        (91, rec(idx:91, title:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion I", key:"250600", groups:{(194, rec(sessions:{255}))})),
        (92, rec(idx:92, title:"Allgemeine Psychologie II: Lernen, Gedächnis, Motivation, Emotion II", key:"250700", groups:{(195, rec(sessions:{256}))})),
        (93, rec(idx:93, title:"Sozialpsychologie I", key:"250700", groups:{(196, rec(sessions:{257}))})),
        (94, rec(idx:94, title:"Einführung in die Geoinformatik", key:"300000", groups:{(197, rec(sessions:{258}))})),
        (95, rec(idx:95, title:"Funktionale Programmierung", key:"300100", groups:{(198, rec(sessions:{259, 260}))})),
        (96, rec(idx:96, title:"Information Retrieval and Natural Language Processing", key:"300200", groups:{(199, rec(sessions:{262, 261}))})),
        (97, rec(idx:97, title:"iOS-Programmierung", key:"300300", groups:{(200, rec(sessions:{264, 263}))})),
        (98, rec(idx:98, title:"Modellierung metabolischer Netzwerke", key:"300400", groups:{(201, rec(sessions:{266, 265}))})),
        (99, rec(idx:99, title:"Paralleles Rechnen mit Grafikkarten", key:"300500", groups:{(202, rec(sessions:{267}))})),
        (100, rec(idx:100, title:"Sicherheitskritische Systeme", key:"300600", groups:{(203, rec(sessions:{268, 269}))})),
        (101, rec(idx:101, title:"Algorithmische Spieltheorie", key:"300700", groups:{(204, rec(sessions:{270}))})),
        (102, rec(idx:102, title:"Algorithmische Spieltheorie - Übung", key:"300701", groups:{(206, rec(sessions:{272})), (205, rec(sessions:{271}))})),
        (103, rec(idx:103, title:"Algorithmische Spieltheorie - Seminar", key:"300702", groups:{(207, rec(sessions:{274, 273}))})),
        (104, rec(idx:104, title:"Zeichnen von Graphen", key:"300800", groups:{(208, rec(sessions:{275}))})),
        (105, rec(idx:105, title:"Zeichnen von Graphen - Übung", key:"300801", groups:{(209, rec(sessions:{276})), (211, rec(sessions:{278})), (210, rec(sessions:{277})), (212, rec(sessions:{279}))})),
        (106, rec(idx:106, title:"Algorithmen in der Bioinformatik II", key:"300900", groups:{(213, rec(sessions:{281, 280}))})),
        (107, rec(idx:107, title:"Android-Programmierung", key:"301000", groups:{(214, rec(sessions:{283, 282}))})),
        (108, rec(idx:108, title:"Architektur verteilter Systeme", key:"301100", groups:{(215, rec(sessions:{284, 285}))})),
        (109, rec(idx:109, title:"Dynamische Programmiersprachen", key:"301200", groups:{(216, rec(sessions:{286}))})),
        (110, rec(idx:110, title:"Knowledge Discovery in Databases: Ausgewählte Themen", key:"301400", groups:{(217, rec(sessions:{287, 288}))})),
        (111, rec(idx:111, title:"Model Checking", key:"301500", groups:{(218, rec(sessions:{289}))})),
        (112, rec(idx:112, title:"Netzwerksicherheit", key:"301600", groups:{(219, rec(sessions:{292, 291, 290}))})),
        (113, rec(idx:113, title:"Peer-to-Peer Systeme", key:"301700", groups:{(220, rec(sessions:{294, 293}))})),
        (114, rec(idx:114, title:"Verteilte und Prallele Programmierung", key:"301800", groups:{(221, rec(sessions:{296, 295}))})),
        (115, rec(idx:115, title:"Vertiefung logische Programmierung", key:"301900", groups:{(222, rec(sessions:{297}))})),
        (116, rec(idx:116, title:"Algorithmen für Ad-hoc- und Sensornetzwerke", key:"302000", groups:{(223, rec(sessions:{300, 298, 299}))})),
        (117, rec(idx:117, title:"Algorithmen für schwere Probleme", key:"302100", groups:{(224, rec(sessions:{301, 302}))})),
        (118, rec(idx:118, title:"Cake-cutting Algorithms", key:"302200", groups:{(225, rec(sessions:{303}))}))
    }
    &
    abstract_unit_unit_semester : POW((dom(abstract_units) * dom(units)) * SEMESTERS)
    &
    abstract_unit_unit_semester = {
        (7, 7, 3),
        (104, 87, 3),
        (5, 5, 4),
        (107, 90, 4),
        (67, 53, 5),
        (92, 79, 3),
        (100, 82, 5),
        (70, 56, 2),
        (10, 10, 2),
        (78, 64, 4),
        (62, 48, 4),
        (63, 49, 2),
        (103, 85, 4),
        (23, 23, 4),
        (62, 48, 6),
        (5, 5, 2),
        (96, 22, 6),
        (87, 73, 3),
        (3, 3, 3),
        (90, 76, 6),
        (34, 34, 6),
        (93, 77, 3),
        (37, 37, 6),
        (64, 50, 6),
        (69, 55, 4),
        (82, 68, 4),
        (60, 46, 6),
        (94, 78, 5),
        (27, 27, 5),
        (29, 29, 3),
        (68, 54, 5),
        (105, 88, 5),
        (52, 39, 3),
        (22, 22, 4),
        (16, 16, 1),
        (26, 26, 3),
        (96, 22, 4),
        (9, 9, 6),
        (23, 23, 6),
        (83, 69, 3),
        (9, 9, 4),
        (24, 24, 3),
        (29, 29, 5),
        (56, 42, 5),
        (12, 12, 2),
        (108, 91, 5),
        (65, 51, 5),
        (69, 55, 6),
        (15, 15, 2),
        (107, 90, 6),
        (109, 92, 3),
        (6, 6, 5),
        (64, 50, 2),
        (66, 52, 5),
        (35, 35, 4),
        (61, 47, 4),
        (64, 50, 4),
        (93, 77, 5),
        (18, 18, 3),
        (85, 71, 5),
        (110, 93, 3),
        (12, 12, 1),
        (69, 55, 2),
        (59, 45, 2),
        (59, 45, 4),
        (74, 60, 3),
        (90, 76, 4),
        (75, 61, 3),
        (63, 49, 4),
        (103, 86, 4),
        (35, 35, 6),
        (10, 10, 6),
        (57, 43, 3),
        (100, 82, 3),
        (61, 47, 6),
        (26, 26, 5),
        (30, 30, 5),
        (84, 70, 3),
        (38, 38, 4),
        (101, 83, 5),
        (21, 21, 4),
        (86, 72, 3),
        (59, 45, 6),
        (15, 15, 1),
        (73, 59, 3),
        (89, 75, 6),
        (32, 32, 6),
        (1, 1, 3),
        (103, 85, 6),
        (22, 22, 6),
        (103, 86, 6),
        (1, 1, 1),
        (71, 57, 3),
        (3, 3, 1),
        (75, 61, 5),
        (68, 54, 3),
        (37, 37, 4),
        (10, 10, 4),
        (67, 53, 3),
        (84, 70, 5),
        (104, 87, 5),
        (58, 44, 5),
        (17, 17, 1),
        (17, 17, 2),
        (76, 62, 5),
        (16, 16, 2),
        (95, 21, 6),
        (31, 31, 5),
        (109, 92, 5),
        (4, 4, 2),
        (36, 36, 5),
        (20, 20, 2),
        (66, 52, 3),
        (110, 93, 5),
        (77, 63, 4),
        (2, 2, 3),
        (57, 43, 5),
        (63, 49, 6),
        (13, 13, 1),
        (19, 19, 2),
        (102, 84, 3),
        (6, 6, 3),
        (24, 24, 5),
        (77, 63, 6),
        (20, 20, 3),
        (13, 13, 2),
        (2, 2, 1),
        (27, 27, 3),
        (72, 58, 3),
        (101, 83, 3),
        (106, 89, 3),
        (19, 19, 3),
        (25, 25, 5),
        (2, 2, 5),
        (8, 8, 6),
        (83, 69, 5),
        (5, 5, 6),
        (88, 74, 4),
        (53, 40, 5),
        (80, 66, 5),
        (73, 59, 5),
        (3, 3, 5),
        (97, 23, 6),
        (70, 56, 6),
        (28, 28, 3),
        (32, 32, 4),
        (60, 46, 4),
        (78, 64, 6),
        (33, 33, 3),
        (7, 7, 5),
        (53, 40, 3),
        (87, 73, 5),
        (102, 84, 5),
        (105, 88, 3),
        (55, 41, 5),
        (94, 78, 3),
        (4, 4, 6),
        (58, 44, 3),
        (72, 58, 5),
        (76, 62, 3),
        (89, 75, 4),
        (56, 42, 3),
        (95, 21, 4),
        (79, 65, 4),
        (31, 31, 3),
        (36, 36, 3),
        (92, 79, 5),
        (8, 8, 4),
        (88, 74, 6),
        (14, 14, 1),
        (70, 56, 4),
        (74, 60, 5),
        (81, 67, 5),
        (21, 21, 6),
        (30, 30, 3),
        (108, 91, 3),
        (106, 89, 5),
        (28, 28, 5),
        (38, 38, 6),
        (52, 39, 5),
        (18, 18, 2),
        (85, 71, 3),
        (65, 51, 3),
        (79, 65, 6),
        (86, 72, 5),
        (82, 68, 6),
        (25, 25, 3),
        (4, 4, 4),
        (34, 34, 4),
        (55, 41, 3),
        (14, 14, 2),
        (97, 23, 4),
        (71, 57, 5),
        (81, 67, 3),
        (80, 66, 3),
        (1, 1, 5),
        (33, 33, 5),
        (60, 46, 2)
    }
    &
    LEVELS = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59}
    &
    course_levels : dom(courses) <-> tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1}, from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
    &
    #(level_1, level_2, level_3, level_4, level_5, level_6, level_7, level_8, level_9, level_10,
        level_11, level_12, level_13, level_14, level_15, level_16, level_17, level_18, level_19, level_20,
        level_21, level_22, level_23, level_24, level_25, level_26, level_27, level_28, level_29, level_30,
        level_31, level_32, level_33, level_34, level_35, level_36, level_37, level_38, level_39, level_40,
        level_41, level_42, level_43, level_44, level_45, level_46, level_47, level_48, level_49, level_50,
        level_51, level_52, level_53, level_54, level_55, level_56, level_57, level_58, level_59).(
    
        level_1 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_1 = 
            const(rec(idx:1, art:"null", name:"Grundlagenmodule", tm:"null", min_credit_points:50, max_credit_points:50, from:-1, to:-1), [level_4, level_3, level_2, level_5, level_6]) & 
        level_2 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_2 = 
            bin(rec(idx:2, art:"null", name:"Grundlagen der Softwareentwicklung und Programmierung (Informatik I)", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_3 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_3 = 
            bin(rec(idx:3, art:"null", name:"Grundlagen der Technischen Informatik (Informatik II)", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_4 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_4 = 
            bin(rec(idx:4, art:"null", name:"Grundlagen der Algorithmen und Datenstrukturen (Informatik III)", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_5 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_5 = 
            bin(rec(idx:5, art:"null", name:"Grundlagen der Theoretischen Informatik (Informatik IV)", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_6 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_6 = 
            bin(rec(idx:6, art:"null", name:"Programmierpraktikum", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_7 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_7 = 
            const(rec(idx:7, art:"null", name:"Pflichtbereich Mathematik", tm:"null", min_credit_points:40, max_credit_points:40, from:-1, to:-1), [level_10, level_9, level_11, level_8]) & 
        level_8 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_8 = 
            bin(rec(idx:8, art:"null", name:"Analysis I", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_9 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_9 = 
            bin(rec(idx:9, art:"null", name:"Lineare Algebra I", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_10 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_10 = 
            bin(rec(idx:10, art:"null", name:"Analysis II", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_11 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_11 = 
            const(rec(idx:11, art:"null", name:"Angewandte Mathematik", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1), [level_12, level_13]) & 
        level_12 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_12 = 
            bin(rec(idx:12, art:"null", name:"Numerik I", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_13 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_13 = 
            bin(rec(idx:13, art:"null", name:"Einführung in die Stochastik", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_14 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_14 = 
            const(rec(idx:14, art:"null", name:"Schwerpunkt", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1), [level_17, level_22, level_26, level_21, level_25, level_16, level_24, level_15, level_23]) & 
        level_15 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_15 = 
            bin(rec(idx:15, art:"null", name:"Datenbanken und Informationssysteme", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_16 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_16 = 
            bin(rec(idx:16, art:"null", name:"Rechnernetze", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_17 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_17 = 
            const(rec(idx:17, art:"null", name:"Softwaretechnik und Programmiersprachen", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1), [level_19, level_20, level_18]) & 
        level_18 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_18 = 
            bin(rec(idx:18, art:"null", name:"Einführung in die logische Programmierung", tm:"null", min_credit_points:0, max_credit_points:5, from:-1, to:-1))
         & 
        level_19 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_19 = 
            bin(rec(idx:19, art:"null", name:"Compilerbau", tm:"null", min_credit_points:0, max_credit_points:5, from:-1, to:-1))
         & 
        level_20 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_20 = 
            bin(rec(idx:20, art:"null", name:"From NAND to Tetris", tm:"null", min_credit_points:0, max_credit_points:5, from:-1, to:-1))
         & 
        level_21 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_21 = 
            bin(rec(idx:21, art:"null", name:"Komplextitätstheorie und Kryptologie", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_22 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_22 = 
            bin(rec(idx:22, art:"null", name:"Betriebssysteme", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_23 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_23 = 
            bin(rec(idx:23, art:"null", name:"Graphenalgorithmen", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_24 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_24 = 
            bin(rec(idx:24, art:"null", name:"Bioinformatik", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_25 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_25 = 
            bin(rec(idx:25, art:"null", name:"Computer Vision, Computer Graphics and Pattern Recognition", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_26 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_26 = 
            bin(rec(idx:26, art:"null", name:"Algorithmen für schwere Probleme", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_27 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_27 = 
            const(rec(idx:27, art:"null", name:"Wahlpflicht", tm:"null", min_credit_points:20, max_credit_points:20, from:-1, to:-1), [level_37, level_29, level_28, level_30, level_36, level_39, level_34, level_38, level_35]) & 
        level_28 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_28 = 
            bin(rec(idx:28, art:"null", name:"Datenbanken und Informationssysteme", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_29 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_29 = 
            bin(rec(idx:29, art:"null", name:"Rechnernetze", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_30 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_30 = 
            const(rec(idx:30, art:"null", name:"Softwaretechnik und Programmiersprachen", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1), [level_31, level_32, level_33]) & 
        level_31 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_31 = 
            bin(rec(idx:31, art:"null", name:"Einführung in die logische Programmierung", tm:"null", min_credit_points:0, max_credit_points:5, from:-1, to:-1))
         & 
        level_32 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_32 = 
            bin(rec(idx:32, art:"null", name:"Compilerbau", tm:"null", min_credit_points:0, max_credit_points:5, from:-1, to:-1))
         & 
        level_33 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_33 = 
            bin(rec(idx:33, art:"null", name:"From NAND to Tetris", tm:"null", min_credit_points:0, max_credit_points:5, from:-1, to:-1))
         & 
        level_34 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_34 = 
            bin(rec(idx:34, art:"null", name:"Komplextitätstheorie und Kryptologie", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_35 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_35 = 
            bin(rec(idx:35, art:"null", name:"Betriebssysteme", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_36 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_36 = 
            bin(rec(idx:36, art:"null", name:"Graphenalgorithmen", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_37 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_37 = 
            bin(rec(idx:37, art:"null", name:"Bioinformatik", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_38 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_38 = 
            bin(rec(idx:38, art:"null", name:"Computer Vision, Computer Graphics and Pattern Recognition", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_39 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_39 = 
            bin(rec(idx:39, art:"null", name:"Algorithmen für schwere Probleme", tm:"null", min_credit_points:0, max_credit_points:10, from:-1, to:-1))
         & 
        level_40 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_40 = 
            bin(rec(idx:40, art:"null", name:"Mathematische Methoden der Physik", tm:"null", min_credit_points:7, max_credit_points:7, from:-1, to:-1))
         & 
        level_41 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_41 = 
            bin(rec(idx:41, art:"null", name:"Grundpraktikum I", tm:"null", min_credit_points:6, max_credit_points:6, from:-1, to:-1))
         & 
        level_42 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_42 = 
            bin(rec(idx:42, art:"null", name:"Experimentelle Physik", tm:"null", min_credit_points:18, max_credit_points:18, from:-1, to:-1))
         & 
        level_43 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_43 = 
            bin(rec(idx:43, art:"null", name:"Theoretische Physik", tm:"null", min_credit_points:9, max_credit_points:9, from:-1, to:-1))
         & 
        level_44 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_44 = 
            bin(rec(idx:44, art:"null", name:"Allgemeine Biologie", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_45 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_45 = 
            bin(rec(idx:45, art:"null", name:"Genetik", tm:"null", min_credit_points:5, max_credit_points:5, from:-1, to:-1))
         & 
        level_46 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_46 = 
            bin(rec(idx:46, art:"null", name:"Ökologie und Evolution", tm:"null", min_credit_points:5, max_credit_points:5, from:-1, to:-1))
         & 
        level_47 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_47 = 
            bin(rec(idx:47, art:"null", name:"Mikrobiologie", tm:"null", min_credit_points:5, max_credit_points:5, from:-1, to:-1))
         & 
        level_48 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_48 = 
            bin(rec(idx:48, art:"null", name:"Neurobiologie und Stoffwechselphysiologie", tm:"null", min_credit_points:5, max_credit_points:5, from:-1, to:-1))
         & 
        level_49 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_49 = 
            bin(rec(idx:49, art:"null", name:"Biochemie", tm:"null", min_credit_points:5, max_credit_points:5, from:-1, to:-1))
         & 
        level_50 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_50 = 
            bin(rec(idx:50, art:"null", name:"Biophysik", tm:"null", min_credit_points:5, max_credit_points:5, from:-1, to:-1))
         & 
        level_51 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_51 = 
            bin(rec(idx:51, art:"null", name:"Einführung in die Allgemeine und Anorganische Chemie (C1)", tm:"null", min_credit_points:8, max_credit_points:8, from:-1, to:-1))
         & 
        level_52 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_52 = 
            bin(rec(idx:52, art:"null", name:"Organische Chemie für Studierende der Biologie", tm:"null", min_credit_points:6, max_credit_points:6, from:-1, to:-1))
         & 
        level_53 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_53 = 
            bin(rec(idx:53, art:"null", name:"Grundlagen der physikalischen Chemie", tm:"null", min_credit_points:10, max_credit_points:10, from:-1, to:-1))
         & 
        level_54 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_54 = 
            bin(rec(idx:54, art:"null", name:"Einführung in die Quanten- und Computerchemie (QCCC)", tm:"null", min_credit_points:8, max_credit_points:8, from:-1, to:-1))
         & 
        level_55 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_55 = 
            bin(rec(idx:55, art:"null", name:"Wahlpflichtmodul", tm:"null", min_credit_points:8, max_credit_points:8, from:-1, to:-1))
         & 
        level_56 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_56 = 
            bin(rec(idx:56, art:"null", name:"Module", tm:"null", min_credit_points:40, max_credit_points:40, from:-1, to:-1))
         & 
        level_57 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_57 = 
            bin(rec(idx:57, art:"null", name:"Modul 1: Quantitative Methoden", tm:"null", min_credit_points:12, max_credit_points:12, from:-1, to:-1))
         & 
        level_58 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_58 = 
            bin(rec(idx:58, art:"null", name:"Module 2: Physiologische Grundlagen des Verhaltens und Biologische Psychologie", tm:"null", min_credit_points:16, max_credit_points:16, from:-1, to:-1))
         & 
        level_59 : tree(struct(idx: LEVELS, art:STRING, name: STRING, tm: STRING, min_credit_points: NATURAL \/ {-1}, max_credit_points: NATURAL \/ {-1},  from: NATURAL \/ {-1}, to: NATURAL \/ {-1}))
        &
        level_59 = 
            bin(rec(idx:59, art:"null", name:"Modul 3: Allgemeine Psychologie II und Sozialpsychologie I", tm:"null", min_credit_points:12, max_credit_points:12, from:-1, to:-1))
        
      &
      course_levels = {
        ("bsc-cs-H-2013", level_14), ("bsc-cs-H-2013", level_1), ("bsc-cs-H-2013", level_7), ("bsc-cs-H-2013", level_27),
        ("bsc-phy-N-2013", level_42), ("bsc-phy-N-2013", level_41), ("bsc-phy-N-2013", level_40), ("bsc-phy-N-2013", level_43),
        ("bsc-bio-N-2015", level_47), ("bsc-bio-N-2015", level_46), ("bsc-bio-N-2015", level_50), ("bsc-bio-N-2015", level_49), ("bsc-bio-N-2015", level_45), ("bsc-bio-N-2015", level_48), ("bsc-bio-N-2015", level_44),
        ("bsc-che-N-2013", level_51), ("bsc-che-N-2013", level_52), ("bsc-che-N-2013", level_53), ("bsc-che-N-2013", level_54), ("bsc-che-N-2013", level_55),
        ("bsc-mat-N-2008", level_56),
        ("bsc-psy-N-2013", level_59), ("bsc-psy-N-2013", level_57), ("bsc-psy-N-2013", level_58)
      }
    )
    &
    course_tree_leaves : POW((dom(courses)*LEVELS)*POW(seq(INTEGER)))
    &
    !(cc, tt).( cc : dom(courses) & tt : course_levels[{cc}] =>
        course_tree_leaves(cc, top(tt)'idx) = {xx | xx : dom(tt) & sizet(subtree(tt, xx)) = 1}
    )
    &
    /*
     * Maps from level ID to the set of modules associated with that level (leaf)
     */
    level_modules : LEVELS <-> dom(modules)
    &
    level_modules = {
        (2 |-> 1),
        (3 |-> 2),
        (4 |-> 3),
        (5 |-> 4),
        (6 |-> 5),
        (8 |-> 6),
        (9 |-> 7),
        (10 |-> 8),
        (12 |-> 9),
        (13 |-> 10),
        (15 |-> 11),
        (16 |-> 12),
        (18 |-> 13),
        (19 |-> 14),
        (20 |-> 15),
        (21 |-> 17), (21 |-> 16),
        (22 |-> 18),
        (23 |-> 19),
        (24 |-> 20),
        (28 |-> 21),
        (29 |-> 22),
        (31 |-> 23),
        (32 |-> 24),
        (33 |-> 25),
        (34 |-> 26), (34 |-> 27),
        (35 |-> 28),
        (36 |-> 29),
        (37 |-> 30),
        (40 |-> 31),
        (41 |-> 32),
        (42 |-> 33), (42 |-> 36), (42 |-> 34), (42 |-> 35),
        (43 |-> 37), (43 |-> 38),
        (44 |-> 39), (44 |-> 40),
        (45 |-> 41),
        (46 |-> 42),
        (47 |-> 43),
        (48 |-> 44),
        (49 |-> 45),
        (50 |-> 46),
        (51 |-> 47),
        (52 |-> 48),
        (53 |-> 49),
        (54 |-> 50),
        (55 |-> 52), (55 |-> 51), (55 |-> 53),
        (56 |-> 59), (56 |-> 60), (56 |-> 54), (56 |-> 55), (56 |-> 57), (56 |-> 56), (56 |-> 58),
        (57 |-> 62), (57 |-> 61),
        (58 |-> 65), (58 |-> 63), (58 |-> 64), (58 |-> 66),
        (59 |-> 69), (59 |-> 68), (59 |-> 67)
    }
    &
    course_modules : dom(courses) --> POW(dom(modules))
    &
    course_modules = {
        
        ("bsc-cs-H-2013", {25 ,13 ,18 ,12 ,5 ,30 ,3 ,23 ,8 ,6 ,7 ,9 ,16 ,1 ,22 ,19 ,26 ,27 ,15 ,20 ,10 ,29 ,21 ,17 ,2 ,4 ,24 ,28 ,11 ,14}),
        ("bsc-phy-N-2013", {37 ,32 ,31 ,33 ,38 ,36 ,34 ,35}),
        ("bsc-bio-N-2015", {45 ,42 ,39 ,43 ,46 ,40 ,41 ,44}),
        ("bsc-che-N-2013", {50 ,52 ,48 ,51 ,49 ,47 ,53}),
        ("bsc-mat-N-2008", {59 ,60 ,54 ,55 ,57 ,56 ,58}),
        ("bsc-psy-N-2013", {69 ,62 ,65 ,68 ,63 ,61 ,64 ,67 ,66})
    }

END
