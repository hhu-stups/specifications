MACHINE DSP0 /*" U2B3.6.11 generated this component from Package DSP0 "*//* this Machine takes a long time to initialise ? it does not seem to be possible   to find values for cellChannels */SETS	DSP={thisDSP};	CELL = {cell1};	CHANNEL = {ch1};	DSP_STATE={boot,init,idle,traffic}CONSTANTS	thresholdPROPERTIES	threshold : DSP --> INT & threshold(thisDSP) >= 0DEFINITIONS	disjoint(f)==!(a1,a2).( a1:dom(f) & a2:dom(f) & a1/=a2 =>  f(a1)/\f(a2)={} ) ;	singleton(vv,SS)==	(vv:POW1(SS) & !(xx,yy).(xx:vv & yy:vv => xx=yy))VARIABLES	dsp_state,	current,	dspChannels,	powerlevel,	cellChannels,	broadcastingINVARIANT	dsp_state : DSP --> DSP_STATE &	current : DSP +-> CELL &	dspChannels : DSP --> POW(CHANNEL) &	powerlevel : CELL --> INT &	cellChannels : CELL --> POW(CHANNEL) &	broadcasting : CHANNEL --> BOOL &	dspChannels(thisDSP)<:cellChannels(current(thisDSP)) &	(dsp_state(thisDSP)=boot => dspChannels(thisDSP)={}) &	(dsp_state(thisDSP)=idle => dspChannels(thisDSP)/={}) &	(dsp_state(thisDSP)=traffic => dspChannels(thisDSP)/={}) &	disjoint(cellChannels) & union(ran(cellChannels)) = CHANNELINITIALISATION	dsp_state := DSP * {boot} ||	current :: DSP +-> CELL ||	dspChannels :: DSP --> POW(CHANNEL) ||	powerlevel :: CELL --> INT ||	cellChannels : (cellChannels:CELL --> POW(CHANNEL) /* & 	  !(a1,a2).( a1:dom(cellChannels) & a2:dom(cellChannels) & a1/=a2	             =>  cellChannels(a1)/\cellChannels(a2)={} ) */	   /* disjoint(cellChannels) */	  & union(ran(cellChannels)) = CHANNEL) ||	broadcasting :: CHANNEL --> BOOLOPERATIONS unran = PRE union(ran(cellChannels)) = CHANNEL THEN skip END; gotoinit  =BEGIN	SELECT dsp_state(thisDSP)=boot	THEN   dsp_state(thisDSP):=init	ENDEND; gotoidle  =BEGIN	SELECT dsp_state(thisDSP)=init &	       powerlevel(current(thisDSP))>threshold(thisDSP) & cellChannels(current(thisDSP))/={}	THEN   dsp_state(thisDSP):=idle	  ||	ANY cs WHERE cs: POW1(cellChannels(current(thisDSP))) 	THEN dspChannels(thisDSP):=cs END	ENDEND; gototraffic (tt) =PRE	tt:CHANNELTHEN	SELECT dsp_state(thisDSP)=idle	THEN   dsp_state(thisDSP):=traffic	ENDEND; returninit  =BEGIN	SELECT dsp_state(thisDSP)=idle	THEN   dsp_state(thisDSP):=init	ENDEND; returnidle  =BEGIN	SELECT dsp_state(thisDSP)=traffic	THEN   dsp_state(thisDSP):=idle	ENDEND; poweron  =BEGIN	skipENDEND