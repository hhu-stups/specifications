MACHINE Euler_Problem_018_ForKodkod
/* Encoding of Euler Problem 18; adapted from seq of seq model to a flat version which can be handled by Kodkod
  solved in 0.16 secs by ProB
  written by Michael Leuschel, July 19th 2014

 Kodkod with INTEGER instead of INTDOM says:
  java.lang.IllegalArgumentException: too many atoms (99 <= 2^7) for too few powers of 2 (5< 7)
  with INTDOM: runs very long without result
  Note: there are still a few Kodkod fails 
 */

/*
By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.

3
7 4
2 4 6
8 5 9 3

That is, 3 + 7 + 4 + 9 = 23.

*/
DEFINITIONS INTDOM == 0..1000 /* FOR KODKOD; to make this model finite */
CONSTANTS  n, Sol, OptimalSolution, TriangleFlat
PROPERTIES 
n = card(dom(dom(TriangleFlat))) &
 n = 15 &  /* added for Kodkod; ProB does not require this */

Sol : ((1..n)*(1..n))-->INTDOM
&
!j.(j:1..n => Sol(n,j)=TriangleFlat(n,j)) /* Initialisation */
&
!i.(i:1..(n-1) => !k.(k:(i+1)..n => Sol(i,k) = 0)) /* values outside of triangle do not matter */
&
! i. (i:1..(n-1) =>
  !j.(j: 1..i
    => Sol(i,j) = TriangleFlat(i,j)+max({Sol(i+1,j),Sol(i+1,j+1)}))
  )
 & OptimalSolution = Sol(1,1)

/* & TriangleFlat =
 {
  (1,1,3),
  (2,1,7), (2,2,4),
  (3,1,2), (3,2,4), (3,3,6),
  (4,1,8), (4,2,5), (4,3,9),  (4,4,3)
 } */
 
 & TriangleFlat =
{((1|->1)|->75),((2|->1)|->95),((2|->2)|->64),((3|->1)|->17),((3|->2)|->47),((3|->3)|->82),((4|->1)|->18),((4|->2)|->35),((4|->3)|->87),((4|->4)|->10),((5|->1)|->20),((5|->2)|->4),((5|->3)|->82),((5|->4)|->47),((5|->5)|->65),((6|->1)|->19),((6|->2)|->1),((6|->3)|->23),((6|->4)|->75),((6|->5)|->3),((6|->6)|->34),((7|->1)|->88),((7|->2)|->2),((7|->3)|->77),((7|->4)|->73),((7|->5)|->7),((7|->6)|->63),((7|->7)|->67),((8|->1)|->99),((8|->2)|->65),((8|->3)|->4),((8|->4)|->28),((8|->5)|->6),((8|->6)|->16),((8|->7)|->70),((8|->8)|->92),((9|->1)|->41),((9|->2)|->41),((9|->3)|->26),((9|->4)|->56),((9|->5)|->83),((9|->6)|->40),((9|->7)|->80),((9|->8)|->70),((9|->9)|->33),((10|->1)|->41),((10|->2)|->48),((10|->3)|->72),((10|->4)|->33),((10|->5)|->47),((10|->6)|->32),((10|->7)|->37),((10|->8)|->16),((10|->9)|->94),((10|->10)|->29),((11|->1)|->53),((11|->2)|->71),((11|->3)|->44),((11|->4)|->65),((11|->5)|->25),((11|->6)|->43),((11|->7)|->91),((11|->8)|->52),((11|->9)|->97),((11|->10)|->51),((11|->11)|->14),((12|->1)|->70),((12|->2)|->11),((12|->3)|->33),((12|->4)|->28),
((12|->5)|->77),((12|->6)|->73),((12|->7)|->17),((12|->8)|->78),((12|->9)|->39),((12|->10)|->68),((12|->11)|->17),((12|->12)|->57),((13|->1)|->91),((13|->2)|->71),((13|->3)|->52),((13|->4)|->38),((13|->5)|->17),((13|->6)|->14),((13|->7)|->91),((13|->8)|->43),((13|->9)|->58),((13|->10)|->50),((13|->11)|->27),((13|->12)|->29),((13|->13)|->48),((14|->1)|->63),((14|->2)|->66),((14|->3)|->4),((14|->4)|->68),((14|->5)|->89),((14|->6)|->53),((14|->7)|->67),((14|->8)|->30),((14|->9)|->73),((14|->10)|->16),((14|->11)|->69),((14|->12)|->87),((14|->13)|->40),((14|->14)|->31),((15|->1)|->4),((15|->2)|->62),((15|->3)|->98),((15|->4)|->27),((15|->5)|->23),((15|->6)|->9),((15|->7)|->70),((15|->8)|->98),((15|->9)|->73),((15|->10)|->93),((15|->11)|->38),((15|->12)|->53),((15|->13)|->60),((15|->14)|->4),((15|->15)|->23)}
 
END

