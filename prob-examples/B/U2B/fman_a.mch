MACHINE /*SYSTEM*/ fman_a /*" U2B3.7.12 generated this component from Package fman_a 24/06/2004 15:53:46 "*/SETS	INPUT={ii};	SIGNAL_STATE={clear,unconfirmed,confirmed};	CONTROL_STATE={normal,frozen,hardfaulted}DEFINITIONSclearAction (thisINPUT) ==BEGIN	out(thisINPUT):=invalEND;unconfirmedAction (thisINPUT) ==BEGIN	ANY n WHERE n:NAT THEN out(thisINPUT):=n ENDEND;confirmedAction (thisINPUT) ==BEGIN	ANY n WHERE n:NAT THEN out(thisINPUT):=n END ||	CHOICE hardfault OR skip END || 	faultcode(thisINPUT):=TRUEEND;hardfault  ==BEGIN	SELECT control_state=normal	THEN   control_state:=hardfaulted	WHEN   control_state=frozen	THEN   control_state:=hardfaulted	WHEN   control_state=hardfaulted	THEN   skip	ENDEND;freeze  ==BEGIN	SELECT control_state=normal	THEN   control_state:=frozen ||	       freezers:=1	WHEN   control_state=frozen	THEN   freezers:=freezers+1	WHEN   control_state=hardfaulted	THEN   skip	ENDEND;unfreeze  ==BEGIN	SELECT control_state=frozen &	       freezers=1	THEN   control_state:=normal ||	       freezers:=0	WHEN   control_state=frozen &	       freezers>1	THEN   freezers:=freezers-1	WHEN   control_state=hardfaulted	THEN   skip	ENDEND ;type_invariant == (	signal_state : INPUT --> SIGNAL_STATE &	faultcode : INPUT --> BOOL &	out : INPUT --> NAT &	control_state : CONTROL_STATE &	freezers : 1..card(INPUT)) ;INPUT_invariant == (	!(thisINPUT).(thisINPUT:INPUT => (	(signal_state(thisINPUT) = clear => (faultcode(thisINPUT)=FALSE)) )) &	!(thisINPUT).(thisINPUT:INPUT => (	(signal_state(thisINPUT) = unconfirmed => (faultcode(thisINPUT)=FALSE)) )) &	!(thisINPUT).(thisINPUT:INPUT => (	(signal_state(thisINPUT) = confirmed => (faultcode(thisINPUT) =TRUE)) ))) ;CONTROL_invariant == (	(control_state = normal => (freezers=0)) &	(control_state = frozen => (freezers>0))) ;invariant == (type_invariant & INPUT_invariant & CONTROL_invariant)VARIABLES	signal_state,	faultcode,	out,	control_state,	freezersINVARIANT	invariantINITIALISATION	signal_state := INPUT * {clear} ||	faultcode := INPUT * {FALSE} ||	out := INPUT * {0} ||	control_state := normal ||	freezers := 0OPERATIONS /*EVENTS*/ read =ANY thisINPUT,inval WHERE	thisINPUT:INPUT &	inval:NATTHEN	SELECT signal_state(thisINPUT)=clear	THEN   signal_state(thisINPUT):=unconfirmed ||	       unconfirmedAction || freeze	WHEN   signal_state(thisINPUT)=clear	THEN   clearAction	WHEN   signal_state(thisINPUT)=unconfirmed	THEN   signal_state(thisINPUT):=confirmed ||	       confirmedAction || unfreeze	WHEN   signal_state(thisINPUT)=unconfirmed	THEN   signal_state(thisINPUT):=clear ||	       clearAction || unfreeze	WHEN   signal_state(thisINPUT)=unconfirmed	THEN   unconfirmedAction	ENDENDEND