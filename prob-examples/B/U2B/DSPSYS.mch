MACHINE DSPSYS /*" U2B3.6.6 generated this component from Package DSPSYS "*/SETS	CHANNEL_SET;	PROTOCOL_SET;	DSP_STATE={start,initialised,failed,idle,configured}VARIABLES	CHANNEL,	PROTOCOL,	pl,	sw,	dh,	uid,	protocol,	dsp_state,	threshold,	chs,	prols,	cfg,	av,	sigINVARIANT	CHANNEL : POW(CHANNEL_SET) &	PROTOCOL : POW(PROTOCOL_SET) &	pl : CHANNEL --> NATURAL &	sw : CHANNEL --> BOOL &	dh : CHANNEL --> NATURAL &	uid : CHANNEL --> NATURAL &	protocol : CHANNEL +-> PROTOCOL &	dsp_state : DSP_STATE &	threshold : NATURAL &	chs : POW(CHANNEL) &	prols : POW(PROTOCOL) &	cfg : POW(CHANNEL) &	av : POW(CHANNEL) &	sig : CHANNEL --> NATURAL1 &	card(CHANNEL)=card(uid)INITIALISATION	CHANNEL := {} ||	PROTOCOL := {} ||	pl := {} ||	sw := {} ||	dh := {} ||	uid := {} ||	protocol := {} ||	dsp_state := start ||	threshold :: NATURAL ||	chs := {} ||	prols := {} ||	cfg := {} ||	av := {} ||	sig := {}OPERATIONS initialise =BEGIN	SELECT dsp_state=start &	       card(chs)>0 & card(prols)>0	THEN   dsp_state:=initialised	WHEN   dsp_state=start &	       card(chs)=0 or card(prols)=0	THEN   skip	ENDEND; configAddress_fail =BEGIN	SELECT dsp_state=start	THEN   dsp_state:=failed	ENDEND; configure =BEGIN	SELECT dsp_state=initialised	THEN   dsp_state:=configured ||	       av:={ch | ch:chs & pl(ch)>threshold & sw(ch)=TRUE & dh(ch)>0}	ENDEND; analyse =BEGIN	SELECT dsp_state=configured	THEN   dsp_state:=idle ||	       cfg:={ch | ch:av & {pr | pr:PROTOCOL & sig(pr)=dh(ch)} = {}} || protocol :: {fn | fn : {ch | ch:av & {pr | pr:PROTOCOL & sig(pr)=dh(ch)}= {}} +-> PROTOCOL & !(c1,p1).(c1|->p1 : fn => dh(c1)=sig(p1))}	ENDENDEND