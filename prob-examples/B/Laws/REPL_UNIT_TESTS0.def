DEFINITIONS
/* the probcli REPL will append unit tests at the bottom of this file */
 UNIT_TESTS == (1=1) & 
  ( not({x|x : INTEGER & x >= 10} /\ {x|x : INTEGER & 99999 >= x} = 10 .. 999998) ) /* 15/3/2011 12:53 */
 & 
  ( NAT1 <<: NAT ) /* 15/3/2011 12:56 */
 & 
  ( 1 .. 10000 <: 0 .. 999999 ) /* 15/3/2011 12:57 */
 & 
  ( {x|x : INTEGER & x + x = 1} = {} ) /* 15/3/2011 15:17 */
 & 
  ( /*__ASSERT12345 : NATURAL IN 12345 * 12345 */
   %x.(x:NATURAL|x*x)(12345) = 152399025 ) /* 15/3/2011 15:17 */
 & 
  ( [3,4,5,6,7,8](3) = 5 ) /* 15/3/2011 15:25 */
 & 
  ( {x|x : INTEGER & #(n).(n : 1 .. 32 & 2 ** n = x)} = {2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,4294967296} ) /* 15/3/2011 17:39 */
 & 
  ( {x|x : INTEGER & #(n).(n : 1 .. 32 & 2 ** n = x)} /\ 2 ** 20 .. 2 ** 64 = {1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,4294967296} ) /* 15/3/2011 17:40 */
 & 
  ( {x|x : INTEGER & #(n).(n : 1 .. 32 & 2 ** n = x)} - (2 ** 20 .. 2 ** 64) = {2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288} ) /* 15/3/2011 17:41 */
 & 
  ( 2 ** 20 .. 2 ** 64 /\ {x|x : INTEGER & #(n).(n : 1 .. 32 & 2 ** n = x)} = {1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,4294967296} ) /* 15/3/2011 17:44 */
 & 
  ( card((2 ** 10 .. 2 ** 11) - {x|x : INTEGER & #(n).(n : 1 .. 32 & 2 ** n = x)}) = 1023 ) /* 15/3/2011 17:45 */
 & 
  ( card(ran(%x.(x : 1 .. 64|2 ** x))) = 64 ) /* 15/3/2011 17:47 */
 & 
  ( {x|x : INTEGER & #(n).(n : 1 .. 32 & 2 ** n = x)} <<: ran(%x.(x : 1 .. 64|2 ** x)) ) /* 15/3/2011 17:47 */
 & 
  ( {x|x : INTEGER & #(n).(n : 1 .. 65 & 2 ** n = x)} /<: ran(%x.(x : 1 .. 64|2 ** x)) ) /* 15/3/2011 17:48 */
 & 
  ( %x.(x : 1 .. 64|2 ** x)[2 .. 10] = {x|x : INTEGER & #(n).(n : 2 .. 10 & 2 ** n = x)} ) /* 15/3/2011 17:49 */
 & 
  ( #(x).(x : INTEGER & x + x = 1000) ) /* 15/3/2011 17:50 */
 & 
  ( NATURAL * NAT <: NATURAL * NATURAL ) /* 15/3/2011 22:3 */
 & 
  ( #(g).((g : 1 .. 10 --> 1 .. 10 & !(x,y).((x : 1 .. 10 & y : 2 .. 10) & y > x => g(x) /= g(y))) & !(x).(x : 1 .. 10 => g(x) /= x)) ) /* 15/3/2011 22:10 */
 & 
  ( #(g).(((g : 1 .. 10 --> 1 .. 10 & !(x,y).((x : 1 .. 10 & y : 2 .. 10) & y > x => g(x) /= g(y))) & !(x).(x : 1 .. 10 => g(x) /= x)) & ran(g) = 1 .. 10) ) /* 16/3/2011 8:18 */
 & 
  ( #(g).(((g : 1 .. 10 --> 1 .. 10 & !(x,y).((x : 1 .. 10 & y : 2 .. 10) & y > x => g(x) /= g(y))) & !(x).(x : 1 .. 10 => g(x) /= x)) & dom(g~) = 1 .. 10) ) /* 16/3/2011 8:19 */
 & 
  ( #(g).(((((((g : 1 .. 10 --> 1 .. 10 & !(x,y).((x : 1 .. 10 & y : 2 .. 10) & y > x => g(x) /= g(y))) & !(x).(x : 1 .. 10 => g(x) /= x)) & dom(g~) = 1 .. 10) & ran(g) = 1 .. 10) & g(1) /= 2) & g(1) > 7) & g(1) < g(2)) ) /* 17/3/2011 17:24 */
 & 
  ( #(g).((((((((g : 1 .. 10 --> 1 .. 10 & !(x,y).((x : 1 .. 10 & y : 2 .. 10) & y > x => g(x) /= g(y))) & !(x).(x : 1 .. 10 => g(x) /= x)) & dom(g~) = 1 .. 10) & ran(g) = 1 .. 10) & g(1) /= 2) & g(1) > 7) & g(1) < g(2)) & SIGMA(x).(x : 1 .. 5|g(x)) = 40) ) /* 17/3/2011 17:26 */
 & 
  ( not(#(g).((((((((g : 1 .. 10 --> 1 .. 10 & !(x,y).((x : 1 .. 10 & y : 2 .. 10) & y > x => g(x) /= g(y))) & !(x).(x : 1 .. 10 => g(x) /= x)) & dom(g~) = 1 .. 10) & ran(g) = 1 .. 10) & g(1) /= 2) & g(1) > 7) & g(1) < g(2)) & SIGMA(x).(x : 1 .. 5|g(x)) = 41)) ) /* 17/3/2011 17:27 */
 & 
  ( #(x,y,z,v,xz).(((((x : BOOL & y : BOOL) & z : BOOL) & v : BOOL) & xz : BOOL) & ((((x /= y & v /= z) & x = v) & (x = z) <=> (xz = TRUE)) & (xz = FALSE => x = TRUE))) ) /* 8/4/2011 15:11 */
 & 
  ( not(#(a,b,c).(((a : BOOL & b : BOOL) & c : BOOL) & (((b = TRUE) <=> (a = TRUE => a = FALSE) & (c = TRUE) <=> (a = b)) & (c = TRUE) <=> not(a = b)))) ) /* 12/4/2011 9:37 */
 & 
  ( #(a,b,c).(((a : BOOL & b : BOOL) & c : BOOL) & ((b = TRUE) <=> (a = TRUE => a = FALSE) & (c = TRUE) <=> (a = b))) ) /* 12/4/2011 9:37 */
 & 
  ( #(a,b).((a : BOOL & b : BOOL) & (b = TRUE) <=> (a = TRUE => a = TRUE)) ) /* 12/4/2011 9:38 */
 & 
  ( #(a,b).((a : BOOL & b : BOOL) & not(((b = TRUE) <=> (a = TRUE => a = TRUE)) <=> ((b = FALSE) <=> (a = FALSE => a = TRUE)))) ) /* 12/4/2011 9:41 */
 & 
  ( not(!(a,b).(a : BOOL & b : BOOL => ((b = TRUE) <=> (a = TRUE => a = TRUE)) <=> ((b = FALSE) <=> (a = FALSE => a = TRUE)))) ) /* 12/4/2011 9:42 */
 & 
  ( {d1,d2|(d1 : BOOL & d2 : BOOL) & (d1 = TRUE & d2 = FALSE) <=> not((d1 = TRUE) <=> (d2 = FALSE))} = {(FALSE|->TRUE)} ) /* 13/4/2011 8:35 */
 & 
  ( !(d1,d2).((d1 : BOOL & d2 : BOOL) & (d1 = TRUE & d2 = FALSE) <=> not((d1 = TRUE) <=> (d2 = FALSE)) => d2 = TRUE) ) /* 13/4/2011 8:36 */
 & 
  ( #(x,y,z).(((x : BOOL & y : BOOL) & z : BOOL) & ((TRUE:BOOL) => (x : {TRUE}) <=> (y = TRUE) & (x = y) <=> (z = TRUE))) ) /* 19/5/2011 7:51 */
 & 
  ( bool(INT +->> INT <: {}) = FALSE ) /* 27/5/2011 7:42 */
 & 
  ( bool(INT >+>> INT <: {}) = FALSE ) /* 27/5/2011 7:42 */
 & 
  ( #(a,b,c,d).((((a : INTEGER & b : INTEGER) & c : INTEGER) & d : INTEGER) & ((({a,b} \/ {c,d} = 1 .. 4 & a < b) & b < c) & c < d)) ) /* 1/6/2011 15:26 */
 & 
  ( #(a,b,c,d).((((a : INTEGER & b : INTEGER) & c : INTEGER) & d : INTEGER) & ((({a,b} \/ {c,d} = 11111 .. 11114 & a < b) & b < c) & c < d)) ) /* 1/6/2011 15:27 */
 & 
  ( size(conc(%i.(i : 1 .. 10000|[1,2]))) = 20000 ) /* 10/6/2011 11:12 */
 & 
  ( size(conc(%i.(i : 1 .. 10|%j.(j : 1 .. 2000|j)))) = 20000 ) /* 10/6/2011 11:14 */
 & 
  ( SIGMA(k).(k : dom(conc(%i.(i : 1 .. 100|%j.(j : 1 .. 100|j))))|1) = 10000 ) /* 10/6/2011 11:19 */
 & 
  ( {1 |-> 1,2 |-> 2,3 |-> 3} >< {1 |-> 11,3 |-> 33} = {(1|->(1|->11)),(3|->(3|->33))} ) /* 17/6/2011 10:53 */
 & 
  ( {1 |-> 1,2 |-> 2,3 |-> 3,1 |-> 0} >< {1 |-> 11,3 |-> 33,1 |-> 111} = {(1|->(0|->11)),(1|->(0|->111)),(1|->(1|->11)),(1|->(1|->111)),(3|->(3|->33))} ) /* 17/6/2011 10:54 */
 & 
  ( #(x,y,z).(((x : INTEGER & y : INTEGER) & z : INTEGER) & ((((x + y) + z = 10 & x > y) & y > z) & z > 0)) ) /* 17/6/2011 16:22 */
