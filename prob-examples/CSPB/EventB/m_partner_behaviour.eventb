package(load_event_b_project([event_b_model(none,
     m_partner_behaviour,
     [sees(none,
        [ctx_choreography]),
      refines(none,
        m_choreography),
      variables(none,
        [identifier(none,
           'CustReq_T_ID_SET'),
         identifier(none,
           'CustReq_blocked'),
         identifier(none,
           'CustReq_st_Example'),
         identifier(none,
           'EndStateVar'),
         identifier(none,
           'InstanceID'),
         identifier(none,
           'SO_T_ID_SET'),
         identifier(none,
           'SO_blocked'),
         identifier(none,
           'SO_st_Example'),
         identifier(none,
           channel_CustReq_SO_EO),
         identifier(none,
           channel_CustReq_SO_EOIO),
         identifier(none,
           channel_SO_CustReq_EO),
         identifier(none,
           channel_SO_CustReq_EOIO),
         identifier(none,
           events),
         identifier(none,
           msg),
         identifier(none,
           types)]),
      invariant(none,
        [member(rodinpos(invariant7,
             invariant7),
           identifier(none,
             'SO_st_Example'),
           identifier(none,
             'Example')),
         member(rodinpos(invariant8,
             invariant8),
           identifier(none,
             'CustReq_st_Example'),
           identifier(none,
             'Example')),
         member(rodinpos(invariant9,
             invariant9),
           identifier(none,
             'SO_T_ID_SET'),
           pow_subset(none,
             identifier(none,
               'BSI_IDDt'))),
         member(rodinpos(invariant10,
             invariant10),
           identifier(none,
             'CustReq_T_ID_SET'),
           pow_subset(none,
             identifier(none,
               'BSI_IDDt'))),
         member(rodinpos(invariant11,
             invariant11),
           identifier(none,
             msg),
           natural_set(none)),
         member(rodinpos(invariant12,
             invariant12),
           identifier(none,
             types),
           partial_function(none,
             natural_set(none),
             identifier(none,
               'MESSAGES'))),
         member(rodinpos(invariant13,
             invariant13),
           identifier(none,
             events),
           partial_function(none,
             natural_set(none),
             identifier(none,
               'EVENTS'))),
         member(rodinpos(invariant14,
             invariant14),
           identifier(none,
             'SO_blocked'),
           natural_set(none)),
         member(rodinpos(invariant15,
             invariant15),
           identifier(none,
             'CustReq_blocked'),
           natural_set(none)),
         member(rodinpos(invariant16,
             invariant16),
           identifier(none,
             channel_SO_CustReq_EO),
           pow_subset(none,
             natural_set(none))),
         member(rodinpos(invariant17,
             invariant17),
           identifier(none,
             channel_CustReq_SO_EO),
           pow_subset(none,
             natural_set(none))),
         member(rodinpos(invariant18,
             invariant18),
           identifier(none,
             channel_SO_CustReq_EOIO),
           pow_subset(none,
             natural_set(none))),
         member(rodinpos(invariant19,
             invariant19),
           identifier(none,
             channel_CustReq_SO_EOIO),
           pow_subset(none,
             natural_set(none))),
         member(rodinpos(invariant20,
             invariant20),
           identifier(none,
             'InstanceID'),
           partial_function(none,
             natural_set(none),
             identifier(none,
               'BSI_IDDt'))),
         member(rodinpos(invariant21,
             invariant21),
           identifier(none,
             'EndStateVar'),
           bool_set(none))]),
      theorems(none,
        []),
      events(none,
        [event(rodinpos('INITIALISATION',
             'INITIALISATION'),
           'INITIALISATION',
           ['INITIALISATION'],
           [],
           [],
           [assign(rodinpos(act47,
                act47),
              [identifier(none,
                 'SO_st_Example')],
              [identifier(none,
                 mcm_Start_Example)]),
            assign(rodinpos(act48,
                act48),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Start_Example)]),
            assign(rodinpos(act49,
                act49),
              [identifier(none,
                 'SO_T_ID_SET')],
              [empty_set(none)]),
            assign(rodinpos(act50,
                act50),
              [identifier(none,
                 'CustReq_T_ID_SET')],
              [empty_set(none)]),
            assign(rodinpos(act51,
                act51),
              [identifier(none,
                 msg)],
              [integer(none,
                 0)]),
            assign(rodinpos(act52,
                act52),
              [identifier(none,
                 types)],
              [empty_set(none)]),
            assign(rodinpos(act53,
                act53),
              [identifier(none,
                 events)],
              [empty_set(none)]),
            assign(rodinpos(act54,
                act54),
              [identifier(none,
                 'SO_blocked')],
              [integer(none,
                 0)]),
            assign(rodinpos(act55,
                act55),
              [identifier(none,
                 'CustReq_blocked')],
              [integer(none,
                 0)]),
            assign(rodinpos(act56,
                act56),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [empty_set(none)]),
            assign(rodinpos(act57,
                act57),
              [identifier(none,
                 channel_CustReq_SO_EO)],
              [empty_set(none)]),
            assign(rodinpos(act58,
                act58),
              [identifier(none,
                 channel_SO_CustReq_EOIO)],
              [empty_set(none)]),
            assign(rodinpos(act59,
                act59),
              [identifier(none,
                 channel_CustReq_SO_EOIO)],
              [empty_set(none)]),
            assign(rodinpos(act129,
                act129),
              [identifier(none,
                 'InstanceID')],
              [empty_set(none)]),
            assign(rodinpos(act130,
                act130),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(send_Request,
             send_Request),
           send_Request,
           ['Request'],
           [identifier(rodinpos([],
                t1),
              t1)],
           [disjunct(rodinpos(guard26,
                guard26),
              equal(none,
                identifier(none,
                  'SO_st_Example'),
                identifier(none,
                  mcm_Reserved_Example)),
              equal(none,
                identifier(none,
                  'SO_st_Example'),
                identifier(none,
                  mcm_Start_Example))),
            member(rodinpos(guard27,
                guard27),
              identifier(none,
                t1),
              identifier(none,
                'BSI_IDDt')),
            negation(rodinpos(guard28,
                guard28),
              member(none,
                identifier(none,
                  t1),
                identifier(none,
                  'SO_T_ID_SET'))),
            implication(rodinpos(guard29,
                guard29),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t1))),
            not_equal(rodinpos(guard30,
                guard30),
              identifier(none,
                'SO_st_Example'),
              identifier(none,
                mcm_Reserved_Example)),
            equal(rodinpos(guard31,
                guard31),
              identifier(none,
                'SO_blocked'),
              integer(none,
                0))],
           [assign(rodinpos(act60,
                act60),
              [identifier(none,
                 'InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t1)])]))]),
            assign(rodinpos(act61,
                act61),
              [identifier(none,
                 events)],
              [overwrite(none,
                 identifier(none,
                   events),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'RequestEvt')])]))]),
            assign(rodinpos(act62,
                act62),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Request')])]))]),
            assign(rodinpos(act63,
                act63),
              [identifier(none,
                 'SO_st_Example')],
              [identifier(none,
                 mcm_Requested_Example)]),
            assign(rodinpos(act64,
                act64),
              [identifier(none,
                 'SO_T_ID_SET')],
              [union(none,
                 identifier(none,
                   'SO_T_ID_SET'),
                 set_extension(none,
                   [identifier(none,
                      t1)]))]),
            assign(rodinpos(act65,
                act65),
              [identifier(none,
                 channel_SO_CustReq_EOIO)],
              [union(none,
                 identifier(none,
                   channel_SO_CustReq_EOIO),
                 set_extension(none,
                   [identifier(none,
                      msg)]))]),
            assign(rodinpos(act66,
                act66),
              [identifier(none,
                 'SO_blocked')],
              [integer(none,
                 2)]),
            assign(rodinpos(act67,
                act67),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act131,
                act131),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(receive_Request,
             receive_Request),
           receive_Request,
           [],
           [identifier(rodinpos([],
                m),
              m)],
           [disjunct(rodinpos(guard32,
                guard32),
              equal(none,
                identifier(none,
                  'CustReq_st_Example'),
                identifier(none,
                  mcm_Reserved_Example)),
              equal(none,
                identifier(none,
                  'CustReq_st_Example'),
                identifier(none,
                  mcm_Start_Example))),
            member(rodinpos(guard33,
                guard33),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            negation(rodinpos(guard34,
                guard34),
              member(none,
                function(none,
                  identifier(none,
                    'InstanceID'),
                  [identifier(none,
                     m)]),
                identifier(none,
                  'CustReq_T_ID_SET'))),
            member(rodinpos(guard35,
                guard35),
              identifier(none,
                m),
              natural_set(none)),
            member(rodinpos(guard36,
                guard36),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  types))),
            equal(rodinpos(guard37,
                guard37),
              function(none,
                identifier(none,
                  types),
                [identifier(none,
                   m)]),
              identifier(none,
                'Request')),
            member(rodinpos(guard38,
                guard38),
              identifier(none,
                m),
              identifier(none,
                channel_SO_CustReq_EOIO)),
            forall(rodinpos(guard39,
                guard39),
              [identifier(none,
                 x)],
              implication(none,
                member(none,
                  identifier(none,
                    x),
                  identifier(none,
                    channel_SO_CustReq_EOIO)),
                greater_equal(none,
                  identifier(none,
                    x),
                  identifier(none,
                    m)))),
            member(rodinpos(guard40,
                guard40),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID')))],
           [assign(rodinpos(act68,
                act68),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Requested_Example)]),
            assign(rodinpos(act69,
                act69),
              [identifier(none,
                 'CustReq_T_ID_SET')],
              [union(none,
                 identifier(none,
                   'CustReq_T_ID_SET'),
                 set_extension(none,
                   [function(none,
                      identifier(none,
                        'InstanceID'),
                      [identifier(none,
                         m)])]))]),
            assign(rodinpos(act70,
                act70),
              [identifier(none,
                 channel_SO_CustReq_EOIO)],
              [set_subtraction(none,
                 identifier(none,
                   channel_SO_CustReq_EOIO),
                 set_extension(none,
                   [identifier(none,
                      m)]))]),
            assign(rodinpos(act132,
                act132),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(send_Confirmation,
             send_Confirmation),
           send_Confirmation,
           ['Confirmation'],
           [],
           [equal(rodinpos(guard41,
                guard41),
              identifier(none,
                'CustReq_st_Example'),
              identifier(none,
                mcm_Requested_Example)),
            equal(rodinpos(guard42,
                guard42),
              identifier(none,
                'CustReq_blocked'),
              integer(none,
                0))],
           [assign(rodinpos(act71,
                act71),
              [identifier(none,
                 events)],
              [overwrite(none,
                 identifier(none,
                   events),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'ConfirmationEvt')])]))]),
            assign(rodinpos(act72,
                act72),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Confirmation')])]))]),
            assign(rodinpos(act73,
                act73),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Reserved_Example)]),
            assign(rodinpos(act74,
                act74),
              [identifier(none,
                 channel_CustReq_SO_EOIO)],
              [union(none,
                 identifier(none,
                   channel_CustReq_SO_EOIO),
                 set_extension(none,
                   [identifier(none,
                      msg)]))]),
            assign(rodinpos(act75,
                act75),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act133,
                act133),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(receive_Confirmation,
             receive_Confirmation),
           receive_Confirmation,
           [],
           [identifier(rodinpos([],
                m),
              m)],
           [equal(rodinpos(guard43,
                guard43),
              identifier(none,
                'SO_st_Example'),
              identifier(none,
                mcm_Requested_Example)),
            member(rodinpos(guard44,
                guard44),
              identifier(none,
                m),
              natural_set(none)),
            member(rodinpos(guard45,
                guard45),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  types))),
            equal(rodinpos(guard46,
                guard46),
              function(none,
                identifier(none,
                  types),
                [identifier(none,
                   m)]),
              identifier(none,
                'Confirmation')),
            member(rodinpos(guard47,
                guard47),
              identifier(none,
                m),
              identifier(none,
                channel_CustReq_SO_EOIO)),
            forall(rodinpos(guard48,
                guard48),
              [identifier(none,
                 x)],
              implication(none,
                member(none,
                  identifier(none,
                    x),
                  identifier(none,
                    channel_CustReq_SO_EOIO)),
                greater_equal(none,
                  identifier(none,
                    x),
                  identifier(none,
                    m))))],
           [assign(rodinpos(act76,
                act76),
              [identifier(none,
                 'SO_st_Example')],
              [identifier(none,
                 mcm_Reserved_Example)]),
            assign(rodinpos(act77,
                act77),
              [identifier(none,
                 channel_CustReq_SO_EOIO)],
              [set_subtraction(none,
                 identifier(none,
                   channel_CustReq_SO_EOIO),
                 set_extension(none,
                   [identifier(none,
                      m)]))]),
            becomes_such(rodinpos(act78,
                act78),
              [identifier(none,
                 'SO_blocked')],
              disjunct(none,
                conjunct(none,
                  equal(none,
                    identifier(none,
                      'SO_blocked'),
                    integer(none,
                      2)),
                  equal(none,
                    identifier(none,
                      'SO_blocked\''),
                    integer(none,
                      0))),
                conjunct(none,
                  not_equal(none,
                    identifier(none,
                      'SO_blocked'),
                    integer(none,
                      2)),
                  equal(none,
                    identifier(none,
                      'SO_blocked\''),
                    identifier(none,
                      'SO_blocked'))))),
            assign(rodinpos(act134,
                act134),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(send_CustomerRequest,
             send_CustomerRequest),
           send_CustomerRequest,
           ['CustomerRequest'],
           [identifier(rodinpos([],
                t2),
              t2)],
           [equal(rodinpos(guard49,
                guard49),
              identifier(none,
                'SO_st_Example'),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard50,
                guard50),
              identifier(none,
                t2),
              identifier(none,
                'BSI_IDDt')),
            member(rodinpos(guard51,
                guard51),
              identifier(none,
                t2),
              identifier(none,
                'SO_T_ID_SET')),
            implication(rodinpos(guard52,
                guard52),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t2))),
            equal(rodinpos(guard53,
                guard53),
              identifier(none,
                'SO_blocked'),
              integer(none,
                0))],
           [assign(rodinpos(act79,
                act79),
              [identifier(none,
                 'InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t2)])]))]),
            assign(rodinpos(act80,
                act80),
              [identifier(none,
                 events)],
              [overwrite(none,
                 identifier(none,
                   events),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'CustomerRequestEvt')])]))]),
            assign(rodinpos(act81,
                act81),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'CustomerRequest')])]))]),
            assign(rodinpos(act82,
                act82),
              [identifier(none,
                 'SO_st_Example')],
              [identifier(none,
                 mcm_Ordered_Example)]),
            assign(rodinpos(act83,
                act83),
              [identifier(none,
                 'SO_T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'SO_T_ID_SET'),
                 set_extension(none,
                   [identifier(none,
                      t2)]))]),
            assign(rodinpos(act84,
                act84),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [union(none,
                 identifier(none,
                   channel_SO_CustReq_EO),
                 set_extension(none,
                   [identifier(none,
                      msg)]))]),
            assign(rodinpos(act85,
                act85),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act135,
                act135),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(receive_CustomerRequest,
             receive_CustomerRequest),
           receive_CustomerRequest,
           [],
           [identifier(rodinpos([],
                m),
              m)],
           [equal(rodinpos(guard54,
                guard54),
              identifier(none,
                'CustReq_st_Example'),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard55,
                guard55),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            member(rodinpos(guard56,
                guard56),
              function(none,
                identifier(none,
                  'InstanceID'),
                [identifier(none,
                   m)]),
              identifier(none,
                'CustReq_T_ID_SET')),
            member(rodinpos(guard57,
                guard57),
              identifier(none,
                m),
              natural_set(none)),
            member(rodinpos(guard58,
                guard58),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  types))),
            equal(rodinpos(guard59,
                guard59),
              function(none,
                identifier(none,
                  types),
                [identifier(none,
                   m)]),
              identifier(none,
                'CustomerRequest')),
            member(rodinpos(guard60,
                guard60),
              identifier(none,
                m),
              identifier(none,
                channel_SO_CustReq_EO)),
            member(rodinpos(guard61,
                guard61),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID')))],
           [assign(rodinpos(act86,
                act86),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Ordered_Example)]),
            assign(rodinpos(act87,
                act87),
              [identifier(none,
                 'CustReq_T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'CustReq_T_ID_SET'),
                 set_extension(none,
                   [function(none,
                      identifier(none,
                        'InstanceID'),
                      [identifier(none,
                         m)])]))]),
            assign(rodinpos(act88,
                act88),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [set_subtraction(none,
                 identifier(none,
                   channel_SO_CustReq_EO),
                 set_extension(none,
                   [identifier(none,
                      m)]))]),
            assign(rodinpos(act136,
                act136),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(send_Delete,
             send_Delete),
           send_Delete,
           ['Delete'],
           [identifier(rodinpos([],
                t3),
              t3)],
           [equal(rodinpos(guard62,
                guard62),
              identifier(none,
                'SO_st_Example'),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard63,
                guard63),
              identifier(none,
                t3),
              identifier(none,
                'BSI_IDDt')),
            conjunct(rodinpos(guard64,
                guard64),
              equal(none,
                set_subtraction(none,
                  identifier(none,
                    'SO_T_ID_SET'),
                  set_extension(none,
                    [identifier(none,
                       t3)])),
                empty_set(none)),
              member(none,
                identifier(none,
                  t3),
                identifier(none,
                  'SO_T_ID_SET'))),
            implication(rodinpos(guard65,
                guard65),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t3))),
            equal(rodinpos(guard66,
                guard66),
              identifier(none,
                'SO_blocked'),
              integer(none,
                0))],
           [assign(rodinpos(act89,
                act89),
              [identifier(none,
                 'InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t3)])]))]),
            assign(rodinpos(act90,
                act90),
              [identifier(none,
                 events)],
              [overwrite(none,
                 identifier(none,
                   events),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'DeleteEvt')])]))]),
            assign(rodinpos(act91,
                act91),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Delete')])]))]),
            assign(rodinpos(act92,
                act92),
              [identifier(none,
                 'SO_st_Example')],
              [identifier(none,
                 mcm_Start_Example)]),
            assign(rodinpos(act93,
                act93),
              [identifier(none,
                 'SO_T_ID_SET')],
              [empty_set(none)]),
            assign(rodinpos(act94,
                act94),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [union(none,
                 identifier(none,
                   channel_SO_CustReq_EO),
                 set_extension(none,
                   [identifier(none,
                      msg)]))]),
            assign(rodinpos(act95,
                act95),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act137,
                act137),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(receive_Delete,
             receive_Delete),
           receive_Delete,
           [],
           [identifier(rodinpos([],
                m),
              m)],
           [equal(rodinpos(guard67,
                guard67),
              identifier(none,
                'CustReq_st_Example'),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard68,
                guard68),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            member(rodinpos(guard69,
                guard69),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            conjunct(rodinpos(guard70,
                guard70),
              equal(none,
                set_subtraction(none,
                  identifier(none,
                    'CustReq_T_ID_SET'),
                  set_extension(none,
                    [function(none,
                       identifier(none,
                         'InstanceID'),
                       [identifier(none,
                          m)])])),
                empty_set(none)),
              member(none,
                function(none,
                  identifier(none,
                    'InstanceID'),
                  [identifier(none,
                     m)]),
                identifier(none,
                  'CustReq_T_ID_SET'))),
            member(rodinpos(guard71,
                guard71),
              identifier(none,
                m),
              natural_set(none)),
            member(rodinpos(guard72,
                guard72),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  types))),
            equal(rodinpos(guard73,
                guard73),
              function(none,
                identifier(none,
                  types),
                [identifier(none,
                   m)]),
              identifier(none,
                'Delete')),
            member(rodinpos(guard74,
                guard74),
              identifier(none,
                m),
              identifier(none,
                channel_SO_CustReq_EO))],
           [assign(rodinpos(act96,
                act96),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Start_Example)]),
            assign(rodinpos(act97,
                act97),
              [identifier(none,
                 'CustReq_T_ID_SET')],
              [empty_set(none)]),
            assign(rodinpos(act98,
                act98),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [set_subtraction(none,
                 identifier(none,
                   channel_SO_CustReq_EO),
                 set_extension(none,
                   [identifier(none,
                      m)]))]),
            assign(rodinpos(act138,
                act138),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(receive_Delete1,
             receive_Delete1),
           receive_Delete1,
           [],
           [identifier(rodinpos([],
                m),
              m)],
           [equal(rodinpos(guard81,
                guard81),
              identifier(none,
                'CustReq_st_Example'),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard82,
                guard82),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            member(rodinpos(guard83,
                guard83),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            conjunct(rodinpos(guard84,
                guard84),
              not_equal(none,
                set_subtraction(none,
                  identifier(none,
                    'CustReq_T_ID_SET'),
                  set_extension(none,
                    [function(none,
                       identifier(none,
                         'InstanceID'),
                       [identifier(none,
                          m)])])),
                empty_set(none)),
              member(none,
                function(none,
                  identifier(none,
                    'InstanceID'),
                  [identifier(none,
                     m)]),
                identifier(none,
                  'CustReq_T_ID_SET'))),
            member(rodinpos(guard85,
                guard85),
              identifier(none,
                m),
              natural_set(none)),
            member(rodinpos(guard86,
                guard86),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  types))),
            equal(rodinpos(guard87,
                guard87),
              function(none,
                identifier(none,
                  types),
                [identifier(none,
                   m)]),
              identifier(none,
                'Delete')),
            member(rodinpos(guard88,
                guard88),
              identifier(none,
                m),
              identifier(none,
                channel_SO_CustReq_EO)),
            member(rodinpos(guard89,
                guard89),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID')))],
           [assign(rodinpos(act106,
                act106),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Reserved_Example)]),
            assign(rodinpos(act107,
                act107),
              [identifier(none,
                 'CustReq_T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'CustReq_T_ID_SET'),
                 set_extension(none,
                   [function(none,
                      identifier(none,
                        'InstanceID'),
                      [identifier(none,
                         m)])]))]),
            assign(rodinpos(act108,
                act108),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [set_subtraction(none,
                 identifier(none,
                   channel_SO_CustReq_EO),
                 set_extension(none,
                   [identifier(none,
                      m)]))]),
            assign(rodinpos(act140,
                act140),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(receive_Delete2,
             receive_Delete2),
           receive_Delete2,
           [],
           [identifier(rodinpos([],
                m),
              m)],
           [member(rodinpos(guard96,
                guard96),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            member(rodinpos(guard97,
                guard97),
              function(none,
                identifier(none,
                  'InstanceID'),
                [identifier(none,
                   m)]),
              identifier(none,
                'CustReq_T_ID_SET')),
            equal(rodinpos(guard98,
                guard98),
              identifier(none,
                'CustReq_st_Example'),
              identifier(none,
                mcm_Ordered_Example)),
            member(rodinpos(guard99,
                guard99),
              identifier(none,
                m),
              natural_set(none)),
            member(rodinpos(guard100,
                guard100),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  types))),
            equal(rodinpos(guard101,
                guard101),
              function(none,
                identifier(none,
                  types),
                [identifier(none,
                   m)]),
              identifier(none,
                'Delete')),
            member(rodinpos(guard102,
                guard102),
              identifier(none,
                m),
              identifier(none,
                channel_SO_CustReq_EO)),
            member(rodinpos(guard103,
                guard103),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID')))],
           [assign(rodinpos(act116,
                act116),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Ordered_Example)]),
            assign(rodinpos(act117,
                act117),
              [identifier(none,
                 'CustReq_T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'CustReq_T_ID_SET'),
                 set_extension(none,
                   [function(none,
                      identifier(none,
                        'InstanceID'),
                      [identifier(none,
                         m)])]))]),
            assign(rodinpos(act118,
                act118),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [set_subtraction(none,
                 identifier(none,
                   channel_SO_CustReq_EO),
                 set_extension(none,
                   [identifier(none,
                      m)]))]),
            assign(rodinpos(act142,
                act142),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(receive_Delete3,
             receive_Delete3),
           receive_Delete3,
           [],
           [identifier(rodinpos([],
                m),
              m)],
           [equal(rodinpos(guard110,
                guard110),
              identifier(none,
                'CustReq_st_Example'),
              identifier(none,
                mcm_Requested_Example)),
            member(rodinpos(guard111,
                guard111),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            member(rodinpos(guard112,
                guard112),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID'))),
            conjunct(rodinpos(guard113,
                guard113),
              not_equal(none,
                set_subtraction(none,
                  identifier(none,
                    'CustReq_T_ID_SET'),
                  set_extension(none,
                    [function(none,
                       identifier(none,
                         'InstanceID'),
                       [identifier(none,
                          m)])])),
                empty_set(none)),
              member(none,
                function(none,
                  identifier(none,
                    'InstanceID'),
                  [identifier(none,
                     m)]),
                identifier(none,
                  'CustReq_T_ID_SET'))),
            member(rodinpos(guard114,
                guard114),
              identifier(none,
                m),
              natural_set(none)),
            member(rodinpos(guard115,
                guard115),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  types))),
            equal(rodinpos(guard116,
                guard116),
              function(none,
                identifier(none,
                  types),
                [identifier(none,
                   m)]),
              identifier(none,
                'Delete')),
            member(rodinpos(guard117,
                guard117),
              identifier(none,
                m),
              identifier(none,
                channel_SO_CustReq_EO)),
            member(rodinpos(guard118,
                guard118),
              identifier(none,
                m),
              domain(none,
                identifier(none,
                  'InstanceID')))],
           [assign(rodinpos(act126,
                act126),
              [identifier(none,
                 'CustReq_st_Example')],
              [identifier(none,
                 mcm_Requested_Example)]),
            assign(rodinpos(act127,
                act127),
              [identifier(none,
                 'CustReq_T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'CustReq_T_ID_SET'),
                 set_extension(none,
                   [function(none,
                      identifier(none,
                        'InstanceID'),
                      [identifier(none,
                         m)])]))]),
            assign(rodinpos(act128,
                act128),
              [identifier(none,
                 channel_SO_CustReq_EO)],
              [set_subtraction(none,
                 identifier(none,
                   channel_SO_CustReq_EO),
                 set_extension(none,
                   [identifier(none,
                      m)]))]),
            assign(rodinpos(act144,
                act144),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(endStateEvent1,
             endStateEvent1),
           endStateEvent1,
           [endStateEvent1],
           [],
           [disjunct(rodinpos(guard119,
                guard119),
              equal(none,
                identifier(none,
                  'SO_st_Example'),
                identifier(none,
                  mcm_Start_Example)),
              equal(none,
                identifier(none,
                  'SO_st_Example'),
                identifier(none,
                  mcm_Ordered_Example))),
            disjunct(rodinpos(guard120,
                guard120),
              equal(none,
                identifier(none,
                  'CustReq_st_Example'),
                identifier(none,
                  mcm_Start_Example)),
              equal(none,
                identifier(none,
                  'CustReq_st_Example'),
                identifier(none,
                  mcm_Ordered_Example))),
            equal(rodinpos(guard121,
                guard121),
              identifier(none,
                channel_SO_CustReq_EO),
              empty_set(none)),
            equal(rodinpos(guard122,
                guard122),
              identifier(none,
                channel_CustReq_SO_EO),
              empty_set(none)),
            equal(rodinpos(guard123,
                guard123),
              identifier(none,
                channel_SO_CustReq_EOIO),
              empty_set(none)),
            equal(rodinpos(guard124,
                guard124),
              identifier(none,
                channel_CustReq_SO_EOIO),
              empty_set(none))],
           [assign(rodinpos(act145,
                act145),
              [identifier(none,
                 'EndStateVar')],
              [boolean_true(none)])],
           [])])]),
   event_b_model(none,
     m_choreography,
     [sees(none,
        [ctx_choreography]),
      variables(none,
        [identifier(none,
           'EndStateVar'),
         identifier(none,
           'MessageHeader_BusinessScope_InstanceID'),
         identifier(none,
           'T_ID_SET'),
         identifier(none,
           msg),
         identifier(none,
           st_Example),
         identifier(none,
           types)]),
      invariant(none,
        [member(rodinpos(invariant1,
             invariant1),
           identifier(none,
             st_Example),
           identifier(none,
             'Example')),
         member(rodinpos(invariant2,
             invariant2),
           identifier(none,
             'T_ID_SET'),
           pow_subset(none,
             identifier(none,
               'BSI_IDDt'))),
         member(rodinpos(invariant3,
             invariant3),
           identifier(none,
             msg),
           natural_set(none)),
         member(rodinpos(invariant4,
             invariant4),
           identifier(none,
             types),
           partial_function(none,
             natural_set(none),
             identifier(none,
               'MESSAGES'))),
         member(rodinpos(invariant5,
             invariant5),
           identifier(none,
             'MessageHeader_BusinessScope_InstanceID'),
           partial_function(none,
             natural_set(none),
             identifier(none,
               'BSI_IDDt'))),
         member(rodinpos(invariant6,
             invariant6),
           identifier(none,
             'EndStateVar'),
           bool_set(none))]),
      theorems(none,
        []),
      events(none,
        [event(rodinpos('INITIALISATION',
             'INITIALISATION'),
           'INITIALISATION',
           [],
           [],
           [],
           [assign(rodinpos(act0,
                act0),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Start_Example)]),
            assign(rodinpos(act1,
                act1),
              [identifier(none,
                 'T_ID_SET')],
              [empty_set(none)]),
            assign(rodinpos(act2,
                act2),
              [identifier(none,
                 msg)],
              [integer(none,
                 0)]),
            assign(rodinpos(act3,
                act3),
              [identifier(none,
                 types)],
              [empty_set(none)]),
            assign(rodinpos(act37,
                act37),
              [identifier(none,
                 'MessageHeader_BusinessScope_InstanceID')],
              [empty_set(none)]),
            assign(rodinpos(act38,
                act38),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos('Request',
             'Request'),
           'Request',
           [],
           [identifier(rodinpos([],
                t1),
              t1)],
           [disjunct(rodinpos(guard0,
                guard0),
              equal(none,
                identifier(none,
                  st_Example),
                identifier(none,
                  mcm_Reserved_Example)),
              equal(none,
                identifier(none,
                  st_Example),
                identifier(none,
                  mcm_Start_Example))),
            member(rodinpos(guard1,
                guard1),
              identifier(none,
                t1),
              identifier(none,
                'BSI_IDDt')),
            negation(rodinpos(guard2,
                guard2),
              member(none,
                identifier(none,
                  t1),
                identifier(none,
                  'T_ID_SET'))),
            implication(rodinpos(guard3,
                guard3),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t1)))],
           [assign(rodinpos(act4,
                act4),
              [identifier(none,
                 'MessageHeader_BusinessScope_InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'MessageHeader_BusinessScope_InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t1)])]))]),
            assign(rodinpos(act5,
                act5),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Request')])]))]),
            assign(rodinpos(act6,
                act6),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Requested_Example)]),
            assign(rodinpos(act7,
                act7),
              [identifier(none,
                 'T_ID_SET')],
              [union(none,
                 identifier(none,
                   'T_ID_SET'),
                 set_extension(none,
                   [identifier(none,
                      t1)]))]),
            assign(rodinpos(act8,
                act8),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act39,
                act39),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos('Confirmation',
             'Confirmation'),
           'Confirmation',
           [],
           [],
           [equal(rodinpos(guard4,
                guard4),
              identifier(none,
                st_Example),
              identifier(none,
                mcm_Requested_Example))],
           [assign(rodinpos(act9,
                act9),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Confirmation')])]))]),
            assign(rodinpos(act10,
                act10),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Reserved_Example)]),
            assign(rodinpos(act11,
                act11),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act40,
                act40),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos('CustomerRequest',
             'CustomerRequest'),
           'CustomerRequest',
           [],
           [identifier(rodinpos([],
                t2),
              t2)],
           [equal(rodinpos(guard5,
                guard5),
              identifier(none,
                st_Example),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard6,
                guard6),
              identifier(none,
                t2),
              identifier(none,
                'BSI_IDDt')),
            member(rodinpos(guard7,
                guard7),
              identifier(none,
                t2),
              identifier(none,
                'T_ID_SET')),
            implication(rodinpos(guard8,
                guard8),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t2)))],
           [assign(rodinpos(act12,
                act12),
              [identifier(none,
                 'MessageHeader_BusinessScope_InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'MessageHeader_BusinessScope_InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t2)])]))]),
            assign(rodinpos(act13,
                act13),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'CustomerRequest')])]))]),
            assign(rodinpos(act14,
                act14),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Ordered_Example)]),
            assign(rodinpos(act15,
                act15),
              [identifier(none,
                 'T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'T_ID_SET'),
                 set_extension(none,
                   [identifier(none,
                      t2)]))]),
            assign(rodinpos(act16,
                act16),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act41,
                act41),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos('Delete',
             'Delete'),
           'Delete',
           [],
           [identifier(rodinpos([],
                t3),
              t3)],
           [equal(rodinpos(guard9,
                guard9),
              identifier(none,
                st_Example),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard10,
                guard10),
              identifier(none,
                t3),
              identifier(none,
                'BSI_IDDt')),
            conjunct(rodinpos(guard11,
                guard11),
              equal(none,
                set_subtraction(none,
                  identifier(none,
                    'T_ID_SET'),
                  set_extension(none,
                    [identifier(none,
                       t3)])),
                empty_set(none)),
              member(none,
                identifier(none,
                  t3),
                identifier(none,
                  'T_ID_SET'))),
            implication(rodinpos(guard12,
                guard12),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t3)))],
           [assign(rodinpos(act17,
                act17),
              [identifier(none,
                 'MessageHeader_BusinessScope_InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'MessageHeader_BusinessScope_InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t3)])]))]),
            assign(rodinpos(act18,
                act18),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Delete')])]))]),
            assign(rodinpos(act19,
                act19),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Start_Example)]),
            assign(rodinpos(act20,
                act20),
              [identifier(none,
                 'T_ID_SET')],
              [empty_set(none)]),
            assign(rodinpos(act21,
                act21),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act42,
                act42),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos('Delete1',
             'Delete1'),
           'Delete1',
           [],
           [identifier(rodinpos([],
                t4),
              t4)],
           [equal(rodinpos(guard13,
                guard13),
              identifier(none,
                st_Example),
              identifier(none,
                mcm_Reserved_Example)),
            member(rodinpos(guard14,
                guard14),
              identifier(none,
                t4),
              identifier(none,
                'BSI_IDDt')),
            conjunct(rodinpos(guard15,
                guard15),
              not_equal(none,
                set_subtraction(none,
                  identifier(none,
                    'T_ID_SET'),
                  set_extension(none,
                    [identifier(none,
                       t4)])),
                empty_set(none)),
              member(none,
                identifier(none,
                  t4),
                identifier(none,
                  'T_ID_SET'))),
            implication(rodinpos(guard16,
                guard16),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t4)))],
           [assign(rodinpos(act22,
                act22),
              [identifier(none,
                 'MessageHeader_BusinessScope_InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'MessageHeader_BusinessScope_InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t4)])]))]),
            assign(rodinpos(act23,
                act23),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Delete')])]))]),
            assign(rodinpos(act24,
                act24),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Reserved_Example)]),
            assign(rodinpos(act25,
                act25),
              [identifier(none,
                 'T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'T_ID_SET'),
                 set_extension(none,
                   [identifier(none,
                      t4)]))]),
            assign(rodinpos(act26,
                act26),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act43,
                act43),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos('Delete2',
             'Delete2'),
           'Delete2',
           [],
           [identifier(rodinpos([],
                t5),
              t5)],
           [member(rodinpos(guard17,
                guard17),
              identifier(none,
                t5),
              identifier(none,
                'BSI_IDDt')),
            member(rodinpos(guard18,
                guard18),
              identifier(none,
                t5),
              identifier(none,
                'T_ID_SET')),
            implication(rodinpos(guard19,
                guard19),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t5))),
            equal(rodinpos(guard20,
                guard20),
              identifier(none,
                st_Example),
              identifier(none,
                mcm_Ordered_Example))],
           [assign(rodinpos(act27,
                act27),
              [identifier(none,
                 'MessageHeader_BusinessScope_InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'MessageHeader_BusinessScope_InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t5)])]))]),
            assign(rodinpos(act28,
                act28),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Delete')])]))]),
            assign(rodinpos(act29,
                act29),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Ordered_Example)]),
            assign(rodinpos(act30,
                act30),
              [identifier(none,
                 'T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'T_ID_SET'),
                 set_extension(none,
                   [identifier(none,
                      t5)]))]),
            assign(rodinpos(act31,
                act31),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act44,
                act44),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos('Delete3',
             'Delete3'),
           'Delete3',
           [],
           [identifier(rodinpos([],
                t6),
              t6)],
           [equal(rodinpos(guard21,
                guard21),
              identifier(none,
                st_Example),
              identifier(none,
                mcm_Requested_Example)),
            member(rodinpos(guard22,
                guard22),
              identifier(none,
                t6),
              identifier(none,
                'BSI_IDDt')),
            conjunct(rodinpos(guard23,
                guard23),
              not_equal(none,
                set_subtraction(none,
                  identifier(none,
                    'T_ID_SET'),
                  set_extension(none,
                    [identifier(none,
                       t6)])),
                empty_set(none)),
              member(none,
                identifier(none,
                  t6),
                identifier(none,
                  'T_ID_SET'))),
            implication(rodinpos(guard24,
                guard24),
              member(none,
                identifier(none,
                  msg),
                domain(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'))),
              equal(none,
                function(none,
                  identifier(none,
                    'MessageHeader_BusinessScope_InstanceID'),
                  [identifier(none,
                     msg)]),
                identifier(none,
                  t6)))],
           [assign(rodinpos(act32,
                act32),
              [identifier(none,
                 'MessageHeader_BusinessScope_InstanceID')],
              [overwrite(none,
                 identifier(none,
                   'MessageHeader_BusinessScope_InstanceID'),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         t6)])]))]),
            assign(rodinpos(act33,
                act33),
              [identifier(none,
                 types)],
              [overwrite(none,
                 identifier(none,
                   types),
                 set_extension(none,
                   [couple(none,
                      [identifier(none,
                         msg),
                       identifier(none,
                         'Delete')])]))]),
            assign(rodinpos(act34,
                act34),
              [identifier(none,
                 st_Example)],
              [identifier(none,
                 mcm_Requested_Example)]),
            assign(rodinpos(act35,
                act35),
              [identifier(none,
                 'T_ID_SET')],
              [set_subtraction(none,
                 identifier(none,
                   'T_ID_SET'),
                 set_extension(none,
                   [identifier(none,
                      t6)]))]),
            assign(rodinpos(act36,
                act36),
              [identifier(none,
                 msg)],
              [add(none,
                 identifier(none,
                   msg),
                 integer(none,
                   1))]),
            assign(rodinpos(act45,
                act45),
              [identifier(none,
                 'EndStateVar')],
              [boolean_false(none)])],
           []),
         event(rodinpos(endStateEvent1,
             endStateEvent1),
           endStateEvent1,
           [],
           [],
           [disjunct(rodinpos(guard25,
                guard25),
              equal(none,
                identifier(none,
                  st_Example),
                identifier(none,
                  mcm_Start_Example)),
              equal(none,
                identifier(none,
                  st_Example),
                identifier(none,
                  mcm_Ordered_Example)))],
           [assign(rodinpos(act46,
                act46),
              [identifier(none,
                 'EndStateVar')],
              [boolean_true(none)])],
           [])])])],
  [event_b_context(none,
     ctx_choreography,
     [extends(none,
        []),
      constants(none,
        [identifier(none,
           'CustomerRequest'),
         identifier(none,
           'CustomerRequestEvt'),
         identifier(none,
           'Confirmation'),
         identifier(none,
           'ConfirmationEvt'),
         identifier(none,
           'Request'),
         identifier(none,
           'RequestEvt'),
         identifier(none,
           'Delete'),
         identifier(none,
           'Delete1Evt'),
         identifier(none,
           'Delete2Evt'),
         identifier(none,
           'Delete3Evt'),
         identifier(none,
           'DeleteEvt'),
         identifier(none,
           mcm_Ordered_Example),
         identifier(none,
           mcm_Requested_Example),
         identifier(none,
           mcm_Reserved_Example),
         identifier(none,
           mcm_Start_Example)]),
      axioms(none,
        [greater(rodinpos(axm2,
             internal_axm2),
           card(none,
             identifier(none,
               'Example')),
           integer(none,
             3)),
         greater(rodinpos(axm1,
             internal_axm1),
           card(none,
             identifier(none,
               'BSI_IDDt')),
           integer(none,
             1)),
         member(rodinpos(ax1,
             ax1),
           identifier(none,
             mcm_Start_Example),
           identifier(none,
             'Example')),
         not_equal(rodinpos(ax2,
             ax2),
           identifier(none,
             mcm_Start_Example),
           identifier(none,
             mcm_Requested_Example)),
         not_equal(rodinpos(ax3,
             ax3),
           identifier(none,
             mcm_Start_Example),
           identifier(none,
             mcm_Reserved_Example)),
         not_equal(rodinpos(ax4,
             ax4),
           identifier(none,
             mcm_Start_Example),
           identifier(none,
             mcm_Ordered_Example)),
         member(rodinpos(ax5,
             ax5),
           identifier(none,
             mcm_Requested_Example),
           identifier(none,
             'Example')),
         not_equal(rodinpos(ax6,
             ax6),
           identifier(none,
             mcm_Requested_Example),
           identifier(none,
             mcm_Reserved_Example)),
         not_equal(rodinpos(ax7,
             ax7),
           identifier(none,
             mcm_Requested_Example),
           identifier(none,
             mcm_Ordered_Example)),
         member(rodinpos(ax8,
             ax8),
           identifier(none,
             mcm_Reserved_Example),
           identifier(none,
             'Example')),
         not_equal(rodinpos(ax9,
             ax9),
           identifier(none,
             mcm_Reserved_Example),
           identifier(none,
             mcm_Ordered_Example)),
         member(rodinpos(ax10,
             ax10),
           identifier(none,
             mcm_Ordered_Example),
           identifier(none,
             'Example')),
         equal(rodinpos(ax11,
             ax11),
           identifier(none,
             'MESSAGES'),
           set_extension(none,
             [identifier(none,
                'Request'),
              identifier(none,
                'Confirmation'),
              identifier(none,
                'CustomerRequest'),
              identifier(none,
                'Delete')])),
         equal(rodinpos(ax12,
             ax12),
           identifier(none,
             'EVENTS'),
           set_extension(none,
             [identifier(none,
                'RequestEvt'),
              identifier(none,
                'ConfirmationEvt'),
              identifier(none,
                'CustomerRequestEvt'),
              identifier(none,
                'DeleteEvt'),
              identifier(none,
                'Delete1Evt'),
              identifier(none,
                'Delete2Evt'),
              identifier(none,
                'Delete3Evt')])),
         not_equal(rodinpos(ax13,
             ax13),
           identifier(none,
             'RequestEvt'),
           identifier(none,
             'ConfirmationEvt')),
         not_equal(rodinpos(ax14,
             ax14),
           identifier(none,
             'RequestEvt'),
           identifier(none,
             'CustomerRequestEvt')),
         not_equal(rodinpos(ax15,
             ax15),
           identifier(none,
             'RequestEvt'),
           identifier(none,
             'DeleteEvt')),
         not_equal(rodinpos(ax16,
             ax16),
           identifier(none,
             'RequestEvt'),
           identifier(none,
             'Delete1Evt')),
         not_equal(rodinpos(ax17,
             ax17),
           identifier(none,
             'RequestEvt'),
           identifier(none,
             'Delete2Evt')),
         not_equal(rodinpos(ax18,
             ax18),
           identifier(none,
             'RequestEvt'),
           identifier(none,
             'Delete3Evt')),
         not_equal(rodinpos(ax19,
             ax19),
           identifier(none,
             'Request'),
           identifier(none,
             'Confirmation')),
         not_equal(rodinpos(ax20,
             ax20),
           identifier(none,
             'Request'),
           identifier(none,
             'CustomerRequest')),
         not_equal(rodinpos(ax21,
             ax21),
           identifier(none,
             'Request'),
           identifier(none,
             'Delete')),
         not_equal(rodinpos(ax22,
             ax22),
           identifier(none,
             'ConfirmationEvt'),
           identifier(none,
             'CustomerRequestEvt')),
         not_equal(rodinpos(ax23,
             ax23),
           identifier(none,
             'ConfirmationEvt'),
           identifier(none,
             'DeleteEvt')),
         not_equal(rodinpos(ax24,
             ax24),
           identifier(none,
             'ConfirmationEvt'),
           identifier(none,
             'Delete1Evt')),
         not_equal(rodinpos(ax25,
             ax25),
           identifier(none,
             'ConfirmationEvt'),
           identifier(none,
             'Delete2Evt')),
         not_equal(rodinpos(ax26,
             ax26),
           identifier(none,
             'ConfirmationEvt'),
           identifier(none,
             'Delete3Evt')),
         not_equal(rodinpos(ax27,
             ax27),
           identifier(none,
             'Confirmation'),
           identifier(none,
             'CustomerRequest')),
         not_equal(rodinpos(ax28,
             ax28),
           identifier(none,
             'Confirmation'),
           identifier(none,
             'Delete')),
         not_equal(rodinpos(ax29,
             ax29),
           identifier(none,
             'CustomerRequestEvt'),
           identifier(none,
             'DeleteEvt')),
         not_equal(rodinpos(ax30,
             ax30),
           identifier(none,
             'CustomerRequestEvt'),
           identifier(none,
             'Delete1Evt')),
         not_equal(rodinpos(ax31,
             ax31),
           identifier(none,
             'CustomerRequestEvt'),
           identifier(none,
             'Delete2Evt')),
         not_equal(rodinpos(ax32,
             ax32),
           identifier(none,
             'CustomerRequestEvt'),
           identifier(none,
             'Delete3Evt')),
         not_equal(rodinpos(ax33,
             ax33),
           identifier(none,
             'CustomerRequest'),
           identifier(none,
             'Delete')),
         not_equal(rodinpos(ax34,
             ax34),
           identifier(none,
             'DeleteEvt'),
           identifier(none,
             'Delete1Evt')),
         not_equal(rodinpos(ax35,
             ax35),
           identifier(none,
             'DeleteEvt'),
           identifier(none,
             'Delete2Evt')),
         not_equal(rodinpos(ax36,
             ax36),
           identifier(none,
             'DeleteEvt'),
           identifier(none,
             'Delete3Evt')),
         not_equal(rodinpos(ax37,
             ax37),
           identifier(none,
             'Delete1Evt'),
           identifier(none,
             'Delete2Evt')),
         not_equal(rodinpos(ax38,
             ax38),
           identifier(none,
             'Delete1Evt'),
           identifier(none,
             'Delete3Evt')),
         not_equal(rodinpos(ax39,
             ax39),
           identifier(none,
             'Delete2Evt'),
           identifier(none,
             'Delete3Evt'))]),
      theorems(none,
        []),
      sets(none,
        [deferred_set(none,
           'BSI_IDDt'),
         deferred_set(none,
           'CRM_Dt'),
         deferred_set(none,
           'EVENTS'),
         deferred_set(none,
           'Example'),
         deferred_set(none,
           'MESSAGES'),
         deferred_set(none,
           'ConMDt'),
         deferred_set(none,
           'RMDt'),
         deferred_set(none,
           'DMDt')])])],
  [discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant11),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant12),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant13),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant14),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant15),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant16),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant17),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant18),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant19),
   discharged(m_partner_behaviour,
     'INITIALISATION',
     invariant20),
   discharged(m_partner_behaviour,
     send_Request,
     invariant11),
   discharged(m_partner_behaviour,
     send_Request,
     invariant12),
   discharged(m_partner_behaviour,
     send_Request,
     invariant13),
   discharged(m_partner_behaviour,
     send_Request,
     invariant14),
   discharged(m_partner_behaviour,
     send_Request,
     invariant18),
   discharged(m_partner_behaviour,
     send_Request,
     invariant20),
   discharged(m_partner_behaviour,
     receive_Request,
     invariant18),
   discharged(m_partner_behaviour,
     send_Confirmation,
     invariant11),
   discharged(m_partner_behaviour,
     send_Confirmation,
     invariant12),
   discharged(m_partner_behaviour,
     send_Confirmation,
     invariant13),
   discharged(m_partner_behaviour,
     send_Confirmation,
     invariant19),
   discharged(m_partner_behaviour,
     receive_CustomerRequest,
     invariant16),
   discharged(m_partner_behaviour,
     send_Delete,
     invariant11),
   discharged(m_partner_behaviour,
     send_Delete,
     invariant12),
   discharged(m_partner_behaviour,
     send_Delete,
     invariant13),
   discharged(m_partner_behaviour,
     send_Delete,
     invariant16),
   discharged(m_partner_behaviour,
     send_Delete,
     invariant20),
   discharged(m_partner_behaviour,
     receive_Delete,
     invariant16),
   discharged(m_partner_behaviour,
     receive_Delete1,
     invariant16),
   discharged(m_partner_behaviour,
     receive_Delete2,
     invariant16),
   discharged(m_partner_behaviour,
     receive_Delete3,
     invariant16),
   discharged(m_choreography,
     'INITIALISATION',
     invariant3),
   discharged(m_choreography,
     'INITIALISATION',
     invariant4),
   discharged(m_choreography,
     'INITIALISATION',
     invariant5),
   discharged(m_choreography,
     'Request',
     invariant3),
   discharged(m_choreography,
     'Request',
     invariant4),
   discharged(m_choreography,
     'Request',
     invariant5),
   discharged(m_choreography,
     'Confirmation',
     invariant3),
   discharged(m_choreography,
     'Confirmation',
     invariant4),
   discharged(m_choreography,
     'CustomerRequest',
     invariant3),
   discharged(m_choreography,
     'CustomerRequest',
     invariant4),
   discharged(m_choreography,
     'CustomerRequest',
     invariant5),
   discharged(m_choreography,
     'Delete',
     invariant3),
   discharged(m_choreography,
     'Delete',
     invariant4),
   discharged(m_choreography,
     'Delete',
     invariant5),
   discharged(m_choreography,
     'Delete1',
     invariant3),
   discharged(m_choreography,
     'Delete1',
     invariant4),
   discharged(m_choreography,
     'Delete1',
     invariant5),
   discharged(m_choreography,
     'Delete2',
     invariant3),
   discharged(m_choreography,
     'Delete2',
     invariant4),
   discharged(m_choreography,
     'Delete2',
     invariant5),
   discharged(m_choreography,
     'Delete3',
     invariant3),
   discharged(m_choreography,
     'Delete3',
     invariant4),
   discharged(m_choreography,
     'Delete3',
     invariant5)],
  Error)).
