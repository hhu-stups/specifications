package(load_event_b_project([event_b_model(none,
     'SetLaws',
     [sees(none,
        ['LawsContext']),
      variables(none,
        [identifier(none,
           r),
         identifier(none,
           s),
         identifier(none,
           t)]),
      invariant(none,
        [subset(none,
           identifier(none,
             r),
           identifier(none,
             'S')),
         subset(none,
           identifier(none,
             s),
           identifier(none,
             'S')),
         subset(none,
           identifier(none,
             t),
           identifier(none,
             'S')),
         equal(none,
           union(none,
             identifier(none,
               s),
             identifier(none,
               s)),
           identifier(none,
             s)),
         equal(none,
           identifier(none,
             s),
           union(none,
             identifier(none,
               s),
             identifier(none,
               s))),
         equal(none,
           intersection(none,
             identifier(none,
               s),
             identifier(none,
               s)),
           identifier(none,
             s)),
         equal(none,
           union(none,
             identifier(none,
               s),
             empty_set(none)),
           identifier(none,
             s)),
         equal(none,
           union(none,
             empty_set(none),
             identifier(none,
               s)),
           identifier(none,
             s)),
         equal(none,
           intersection(none,
             empty_set(none),
             identifier(none,
               s)),
           empty_set(none)),
         equal(none,
           intersection(none,
             identifier(none,
               s),
             empty_set(none)),
           empty_set(none)),
         equal(none,
           union(none,
             identifier(none,
               s),
             identifier(none,
               r)),
           union(none,
             identifier(none,
               r),
             identifier(none,
               s))),
         equal(none,
           union(none,
             identifier(none,
               s),
             union(none,
               identifier(none,
                 r),
               identifier(none,
                 t))),
           union(none,
             union(none,
               identifier(none,
                 s),
               identifier(none,
                 r)),
             identifier(none,
               t))),
         equal(none,
           union(none,
             identifier(none,
               s),
             intersection(none,
               identifier(none,
                 t),
               identifier(none,
                 r))),
           intersection(none,
             union(none,
               identifier(none,
                 s),
               identifier(none,
                 t)),
             union(none,
               identifier(none,
                 s),
               identifier(none,
                 r)))),
         equal(none,
           intersection(none,
             identifier(none,
               s),
             union(none,
               identifier(none,
                 t),
               identifier(none,
                 r))),
           union(none,
             intersection(none,
               identifier(none,
                 s),
               identifier(none,
                 t)),
             intersection(none,
               identifier(none,
                 s),
               identifier(none,
                 r)))),
         equal(none,
           intersection(none,
             set_subtraction(none,
               identifier(none,
                 s),
               identifier(none,
                 t)),
             identifier(none,
               t)),
           empty_set(none)),
         implication(none,
           subset(none,
             identifier(none,
               t),
             identifier(none,
               s)),
           equal(none,
             union(none,
               set_subtraction(none,
                 identifier(none,
                   s),
                 identifier(none,
                   t)),
               identifier(none,
                 t)),
             identifier(none,
               s))),
         conjunct(none,
           subset(none,
             identifier(none,
               s),
             union(none,
               identifier(none,
                 s),
               identifier(none,
                 t))),
           subset(none,
             identifier(none,
               t),
             union(none,
               identifier(none,
                 s),
               identifier(none,
                 t)))),
         equal(none,
           identifier(none,
             s),
           event_b_comprehension_set(none,
             [identifier(none,
                x)],
             identifier(none,
               x),
             member(none,
               identifier(none,
                 x),
               identifier(none,
                 s)))),
         equal(none,
           identifier(none,
             s),
           event_b_comprehension_set(none,
             [identifier(none,
                x)],
             identifier(none,
               x),
             member(none,
               identifier(none,
                 x),
               identifier(none,
                 s)))),
         equal(none,
           identifier(none,
             s),
           range(none,
             event_b_comprehension_set(none,
               [identifier(none,
                  y)],
               couple(none,
                 [identifier(none,
                    y),
                  identifier(none,
                    y)]),
               member(none,
                 identifier(none,
                   y),
                 identifier(none,
                   s))))),
         equal(none,
           union(none,
             identifier(none,
               s),
             identifier(none,
               t)),
           event_b_comprehension_set(none,
             [identifier(none,
                x)],
             identifier(none,
               x),
             disjunct(none,
               member(none,
                 identifier(none,
                   x),
                 identifier(none,
                   s)),
               member(none,
                 identifier(none,
                   x),
                 identifier(none,
                   t))))),
         equal(none,
           intersection(none,
             identifier(none,
               s),
             identifier(none,
               t)),
           event_b_comprehension_set(none,
             [identifier(none,
                x)],
             identifier(none,
               x),
             conjunct(none,
               member(none,
                 identifier(none,
                   x),
                 identifier(none,
                   s)),
               member(none,
                 identifier(none,
                   x),
                 identifier(none,
                   t)))))]),
      theorems(none,
        []),
      events(none,
        [event(none,
           'INITIALISATION',
           [],
           [],
           [],
           [assign(none,
              [identifier(none,
                 r)],
              [empty_set(none)]),
            assign(none,
              [identifier(none,
                 s)],
              [empty_set(none)]),
            assign(none,
              [identifier(none,
                 t)],
              [empty_set(none)])],
           []),
         event(none,
           add_r,
           [],
           [identifier(none,
              e)],
           [member(none,
              identifier(none,
                e),
              identifier(none,
                'S')),
            not_member(none,
              identifier(none,
                e),
              identifier(none,
                r))],
           [assign(none,
              [identifier(none,
                 r)],
              [union(none,
                 identifier(none,
                   r),
                 set_extension(none,
                   [identifier(none,
                      e)]))])],
           []),
         event(none,
           add_s,
           [],
           [identifier(none,
              e)],
           [member(none,
              identifier(none,
                e),
              identifier(none,
                'S')),
            not_member(none,
              identifier(none,
                e),
              identifier(none,
                s))],
           [assign(none,
              [identifier(none,
                 s)],
              [union(none,
                 identifier(none,
                   s),
                 set_extension(none,
                   [identifier(none,
                      e)]))])],
           []),
         event(none,
           add_t,
           [],
           [identifier(none,
              e)],
           [member(none,
              identifier(none,
                e),
              identifier(none,
                'S')),
            not_member(none,
              identifier(none,
                e),
              identifier(none,
                t))],
           [assign(none,
              [identifier(none,
                 t)],
              [union(none,
                 identifier(none,
                   t),
                 set_extension(none,
                   [identifier(none,
                      e)]))])],
           [])])])],
  [event_b_context(none,
     'LawsContext',
     [extends(none,
        []),
      constants(none,
        [identifier(none,
           s1),
         identifier(none,
           s2),
         identifier(none,
           s3)]),
      axioms(none,
        [equal(none,
           identifier(none,
             'S'),
           set_extension(none,
             [identifier(none,
                s1),
              identifier(none,
                s2),
              identifier(none,
                s3)])),
         negation(none,
           equal(none,
             identifier(none,
               s1),
             identifier(none,
               s2))),
         negation(none,
           equal(none,
             identifier(none,
               s1),
             identifier(none,
               s3))),
         negation(none,
           equal(none,
             identifier(none,
               s2),
             identifier(none,
               s3)))]),
      theorems(none,
        []),
      sets(none,
        [deferred_set(none,
           'S')])])],
  Error)).
