package(load_event_b_project([event_b_model(none,
     'SetNatLaws',
     [sees(none,
        ['LawsNatContext']),
      variables(none,
        [identifier(none,
           r),
         identifier(none,
           s),
         identifier(none,
           t)]),
      invariant(none,
        [subset(none,
           identifier(none,
             s),
           integer_set(none)),
         subset(none,
           identifier(none,
             s),
           identifier(none,
             'S')),
         subset(none,
           identifier(none,
             r),
           identifier(none,
             'S')),
         subset(none,
           identifier(none,
             t),
           identifier(none,
             'S')),
         equal(none,
           union(none,
             identifier(none,
               s),
             identifier(none,
               t)),
           union(none,
             identifier(none,
               t),
             identifier(none,
               s))),
         equal(none,
           union(none,
             identifier(none,
               s),
             empty_set(none)),
           identifier(none,
             s)),
         equal(none,
           intersection(none,
             identifier(none,
               s),
             empty_set(none)),
           empty_set(none)),
         equal(none,
           identifier(none,
             s),
           event_b_comprehension_set(none,
             [identifier(none,
                x)],
             identifier(none,
               x),
             member(none,
               identifier(none,
                 x),
               identifier(none,
                 s)))),
         equal(none,
           identifier(none,
             s),
           event_b_comprehension_set(none,
             [identifier(none,
                x)],
             multiplication(none,
               identifier(none,
                 x),
               integer(none,
                 1)),
             member(none,
               identifier(none,
                 x),
               identifier(none,
                 s))))]),
      theorems(none,
        []),
      events(none,
        [event(none,
           'INITIALISATION',
           [],
           [],
           [],
           [assign(none,
              [identifier(none,
                 s)],
              [empty_set(none)]),
            assign(none,
              [identifier(none,
                 r)],
              [empty_set(none)]),
            assign(none,
              [identifier(none,
                 t)],
              [empty_set(none)])],
           []),
         event(none,
           add_s,
           [],
           [identifier(none,
              e)],
           [member(none,
              identifier(none,
                e),
              identifier(none,
                'S')),
            not_member(none,
              identifier(none,
                e),
              identifier(none,
                s))],
           [assign(none,
              [identifier(none,
                 s)],
              [union(none,
                 identifier(none,
                   s),
                 set_extension(none,
                   [identifier(none,
                      e)]))])],
           []),
         event(none,
           add_t,
           [],
           [identifier(none,
              e)],
           [member(none,
              identifier(none,
                e),
              identifier(none,
                'S')),
            not_member(none,
              identifier(none,
                e),
              identifier(none,
                t))],
           [assign(none,
              [identifier(none,
                 t)],
              [union(none,
                 identifier(none,
                   t),
                 set_extension(none,
                   [identifier(none,
                      e)]))])],
           []),
         event(none,
           add_r,
           [],
           [identifier(none,
              e)],
           [member(none,
              identifier(none,
                e),
              identifier(none,
                'S')),
            not_member(none,
              identifier(none,
                e),
              identifier(none,
                r))],
           [assign(none,
              [identifier(none,
                 r)],
              [union(none,
                 identifier(none,
                   r),
                 set_extension(none,
                   [identifier(none,
                      e)]))])],
           [])])])],
  [event_b_context(none,
     'LawsNatContext',
     [extends(none,
        []),
      constants(none,
        [identifier(none,
           'S'),
         identifier(none,
           mx)]),
      axioms(none,
        [equal(none,
           identifier(none,
             'S'),
           interval(none,
             integer(none,
               1),
             identifier(none,
               mx))),
         equal(none,
           identifier(none,
             mx),
           integer(none,
             10))]),
      theorems(none,
        []),
      sets(none,
        [])])],
  Error)).
