package(load_event_b_project([],[event_b_context(none,'Sudoku',[extends(none,[]),constants(none,[identifier(none,'Board'),identifier(none,'DOM'),identifier(none,'SUBSQ')]),axioms(none,[equal(rodinpos(axmd,'_94J_wxbpEd-ezM1Nnpn0Sg'),identifier(none,'DOM'),interval(none,integer(none,1),integer(none,9))),member(rodinpos(axm1,'_94J_xBbpEd-ezM1Nnpn0Sg'),identifier(none,'Board'),total_function(none,identifier(none,'DOM'),total_function(none,identifier(none,'DOM'),identifier(none,'DOM')))),equal(rodinpos(axms,'_94Km0BbpEd-ezM1Nnpn0Sg'),identifier(none,'SUBSQ'),set_extension(none,[set_extension(none,[integer(none,1),integer(none,2),integer(none,3)]),set_extension(none,[integer(none,4),integer(none,5),integer(none,6)]),set_extension(none,[integer(none,7),integer(none,8),integer(none,9)])])),forall(rodinpos(axm2,'_94Km0RbpEd-ezM1Nnpn0Sg'),[identifier(none,y)],implication(none,member(none,identifier(none,y),identifier(none,'DOM')),forall(none,[identifier(none,x1),identifier(none,x2)],implication(none,conjunct(none,member(none,identifier(none,x1),interval(none,integer(none,1),integer(none,8))),conjunct(none,less(none,identifier(none,x1),identifier(none,x2)),member(none,identifier(none,x2),interval(none,integer(none,2),integer(none,9))))),conjunct(none,not_equal(none,function(none,function(none,identifier(none,'Board'),[identifier(none,x1)]),[identifier(none,y)]),function(none,function(none,identifier(none,'Board'),[identifier(none,x2)]),[identifier(none,y)])),not_equal(none,function(none,function(none,identifier(none,'Board'),[identifier(none,y)]),[identifier(none,x1)]),function(none,function(none,identifier(none,'Board'),[identifier(none,y)]),[identifier(none,x2)]))))))),forall(rodinpos(axm3,'_94Km0hbpEd-ezM1Nnpn0Sg'),[identifier(none,s1),identifier(none,s2)],implication(none,conjunct(none,member(none,identifier(none,s1),identifier(none,'SUBSQ')),member(none,identifier(none,s2),identifier(none,'SUBSQ'))),forall(none,[identifier(none,x1),identifier(none,y1),identifier(none,x2),identifier(none,y2)],implication(none,conjunct(none,member(none,identifier(none,x1),identifier(none,s1)),conjunct(none,member(none,identifier(none,x2),identifier(none,s1)),conjunct(none,greater_equal(none,identifier(none,x1),identifier(none,x2)),conjunct(none,implication(none,equal(none,identifier(none,x1),identifier(none,x2)),greater(none,identifier(none,y1),identifier(none,y2))),conjunct(none,member(none,identifier(none,y1),identifier(none,s2)),conjunct(none,member(none,identifier(none,y2),identifier(none,s2)),not_equal(none,couple(none,[identifier(none,x1),identifier(none,y1)]),couple(none,[identifier(none,x2),identifier(none,y2)])))))))),not_equal(none,function(none,function(none,identifier(none,'Board'),[identifier(none,x1)]),[identifier(none,y1)]),function(none,function(none,identifier(none,'Board'),[identifier(none,x2)]),[identifier(none,y2)])))))),conjunct(rodinpos('puzzle\15\','_94Km0xbpEd-ezM1Nnpn0Sg'),equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,1)]),[integer(none,1)]),integer(none,7)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,1)]),[integer(none,2)]),integer(none,8)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,1)]),[integer(none,3)]),integer(none,1)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,1)]),[integer(none,4)]),integer(none,6)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,1)]),[integer(none,6)]),integer(none,2)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,1)]),[integer(none,7)]),integer(none,9)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,1)]),[integer(none,9)]),integer(none,5)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,2)]),[integer(none,1)]),integer(none,9)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,2)]),[integer(none,3)]),integer(none,2)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,2)]),[integer(none,4)]),integer(none,7)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,2)]),[integer(none,5)]),integer(none,1)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,3)]),[integer(none,3)]),integer(none,6)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,3)]),[integer(none,4)]),integer(none,8)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,3)]),[integer(none,8)]),integer(none,1)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,3)]),[integer(none,9)]),integer(none,2)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,4)]),[integer(none,1)]),integer(none,2)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,4)]),[integer(none,4)]),integer(none,3)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,4)]),[integer(none,7)]),integer(none,8)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,4)]),[integer(none,8)]),integer(none,5)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,4)]),[integer(none,9)]),integer(none,1)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,5)]),[integer(none,2)]),integer(none,7)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,5)]),[integer(none,3)]),integer(none,3)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,5)]),[integer(none,4)]),integer(none,5)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,5)]),[integer(none,9)]),integer(none,4)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,6)]),[integer(none,3)]),integer(none,8)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,6)]),[integer(none,6)]),integer(none,9)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,6)]),[integer(none,7)]),integer(none,3)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,6)]),[integer(none,8)]),integer(none,6)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,7)]),[integer(none,1)]),integer(none,1)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,7)]),[integer(none,2)]),integer(none,9)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,7)]),[integer(none,6)]),integer(none,7)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,7)]),[integer(none,8)]),integer(none,8)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,8)]),[integer(none,1)]),integer(none,8)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,8)]),[integer(none,2)]),integer(none,6)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,8)]),[integer(none,3)]),integer(none,7)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,8)]),[integer(none,6)]),integer(none,3)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,8)]),[integer(none,7)]),integer(none,4)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,8)]),[integer(none,9)]),integer(none,9)),conjunct(none,equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,9)]),[integer(none,3)]),integer(none,5)),equal(none,function(none,function(none,identifier(none,'Board'),[integer(none,9)]),[integer(none,7)]),integer(none,1)))))))))))))))))))))))))))))))))))))))))]),theorems(none,[]),sets(none,[])])],[],Error)).
