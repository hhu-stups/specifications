package(load_event_b_project([],[event_b_context(none,'SingleFieldRecord',[extends(none,[]),constants(none,[identifier(none,fld1),identifier(none,make_SFRec),identifier(none,update_SFRec_fld1)]),axioms(none,[member(rodinpos('SFRec.fld1.type2','\''),identifier(none,fld1),total_function(none,identifier(none,'SFRec'),bool_set(none))),member(rodinpos('SFRec.feasibility','\''),identifier(none,fld1),total_surjection(none,identifier(none,'SFRec'),bool_set(none))),member(rodinpos('SFRec.closure','\''),identifier(none,fld1),total_injection(none,identifier(none,'SFRec'),bool_set(none))),member(rodinpos('SFRec.make.axm1','\''),identifier(none,make_SFRec),total_bijection(none,bool_set(none),identifier(none,'SFRec'))),forall(rodinpos('SFRec.fld1.make.axm2','\''),[identifier(none,fld11)],implication(none,truth(none),equal(none,function(none,identifier(none,fld1),[function(none,identifier(none,make_SFRec),[identifier(none,fld11)])]),identifier(none,fld11)))),member(rodinpos('SFRec.fld1.update.axm1','\''),identifier(none,update_SFRec_fld1),total_function(none,cartesian_product(none,identifier(none,'SFRec'),bool_set(none)),identifier(none,'SFRec'))),forall(rodinpos('SFRec.fld1.update.axm2','\''),[identifier(none,sfrec1),identifier(none,fld11)],implication(none,truth(none),equal(none,function(none,identifier(none,update_SFRec_fld1),[couple(none,[identifier(none,sfrec1),identifier(none,fld11)])]),function(none,identifier(none,make_SFRec),[identifier(none,fld11)]))))]),theorems(none,[]),sets(none,[deferred_set(none,'SFRec')])])],[],Error)).
