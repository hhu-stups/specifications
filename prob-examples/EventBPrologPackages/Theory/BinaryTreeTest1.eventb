package(load_event_b_project([event_b_model(none,'BinaryTreeTest1',[sees(none,[]),variables(none,[identifier(none,a),identifier(none,aAsSet),identifier(none,b),identifier(none,bAsSet),identifier(none,depthA),identifier(none,depthB)]),invariant(none,[member(rodinpos('BinaryTreeTest1',inv1,')'),identifier(none,a),extended_expr(none,'Tree',[interval(none,integer(none,1),integer(none,3))],[])),member(rodinpos('BinaryTreeTest1',inv2,'+'),identifier(none,b),extended_expr(none,'Tree',[interval(none,integer(none,1),integer(none,3))],[])),member(rodinpos('BinaryTreeTest1',inv3,'.'),identifier(none,depthA),natural_set(none)),member(rodinpos('BinaryTreeTest1',inv4,'0'),identifier(none,depthB),natural_set(none)),equal(rodinpos('BinaryTreeTest1',inv5,'1'),identifier(none,depthA),extended_expr(none,treeDepth,[identifier(none,a)],[])),equal(rodinpos('BinaryTreeTest1',inv6,'2'),identifier(none,depthB),extended_expr(none,treeDepth,[identifier(none,b)],[])),subset(rodinpos('BinaryTreeTest1',inv7,'4'),identifier(none,aAsSet),cartesian_product(none,partial_function(none,natural_set(none),natural_set(none)),natural_set(none))),subset(rodinpos('BinaryTreeTest1',inv8,'6'),identifier(none,bAsSet),cartesian_product(none,partial_function(none,natural_set(none),natural_set(none)),natural_set(none))),extended_pred(rodinpos('BinaryTreeTest1',inv9,evt2),treeHasValues,[identifier(none,aAsSet),identifier(none,a)],[])]),theorems(none,[]),events(none,[event(rodinpos('BinaryTreeTest1','INITIALISATION','\''),'INITIALISATION',ordinary(none),[],[],[],[],[assign(rodinpos('BinaryTreeTest1',act1,'\''),[identifier(none,a)],[extended_expr(none,empty,[],[])]),assign(rodinpos('BinaryTreeTest1',act2,'('),[identifier(none,b)],[extended_expr(none,empty,[],[])]),assign(rodinpos('BinaryTreeTest1',act3,')'),[identifier(none,depthA)],[integer(none,0)]),assign(rodinpos('BinaryTreeTest1',act4,'*'),[identifier(none,depthB)],[integer(none,0)]),assign(rodinpos('BinaryTreeTest1',act5,'+'),[identifier(none,aAsSet)],[empty_set(none)]),assign(rodinpos('BinaryTreeTest1',act6,','),[identifier(none,bAsSet)],[empty_set(none)])],[]),event(rodinpos('BinaryTreeTest1',addA,','),addA,ordinary(none),[],[identifier(rodinpos('BinaryTreeTest1',[],'\''),e)],[member(rodinpos('BinaryTreeTest1',grd1,'('),identifier(none,e),interval(none,integer(none,1),integer(none,3))),less(rodinpos('BinaryTreeTest1',grd2,','),identifier(none,depthA),integer(none,2))],[],[assign(rodinpos('BinaryTreeTest1',act1,')'),[identifier(none,a)],[extended_expr(none,tree,[identifier(none,a),identifier(none,e),identifier(none,b)],[])]),assign(rodinpos('BinaryTreeTest1',act2,'*'),[identifier(none,depthA)],[add(none,max(none,set_extension(none,[identifier(none,depthA),identifier(none,depthB)])),integer(none,1))]),assign(rodinpos('BinaryTreeTest1',act3,'+'),[identifier(none,aAsSet)],[union(none,event_b_comprehension_set(none,[identifier(none,p),identifier(none,v)],couple(none,[union(none,event_b_comprehension_set(none,[identifier(none,x),identifier(none,y)],couple(none,[add(none,identifier(none,x),integer(none,1)),identifier(none,y)]),member(none,couple(none,[identifier(none,x),identifier(none,y)]),identifier(none,p))),set_extension(none,[couple(none,[integer(none,0),integer(none,0)])])),identifier(none,v)]),member(none,couple(none,[identifier(none,p),identifier(none,v)]),identifier(none,aAsSet))),union(none,event_b_comprehension_set(none,[identifier(none,p),identifier(none,v)],couple(none,[union(none,event_b_comprehension_set(none,[identifier(none,x),identifier(none,y)],couple(none,[add(none,identifier(none,x),integer(none,1)),identifier(none,y)]),member(none,couple(none,[identifier(none,x),identifier(none,y)]),identifier(none,p))),set_extension(none,[couple(none,[integer(none,0),integer(none,1)])])),identifier(none,v)]),member(none,couple(none,[identifier(none,p),identifier(none,v)]),identifier(none,bAsSet))),set_extension(none,[couple(none,[empty_set(none),identifier(none,e)])])))])],[]),event(rodinpos('BinaryTreeTest1',addB,evt1),addB,ordinary(none),[],[identifier(rodinpos('BinaryTreeTest1',[],'\''),e)],[member(rodinpos('BinaryTreeTest1',grd1,'('),identifier(none,e),interval(none,integer(none,1),integer(none,3))),less(rodinpos('BinaryTreeTest1',grd2,','),identifier(none,depthB),integer(none,2))],[],[assign(rodinpos('BinaryTreeTest1',act1,')'),[identifier(none,b)],[extended_expr(none,tree,[identifier(none,a),identifier(none,e),identifier(none,b)],[])]),assign(rodinpos('BinaryTreeTest1',act2,'*'),[identifier(none,depthB)],[add(none,max(none,set_extension(none,[identifier(none,depthA),identifier(none,depthB)])),integer(none,1))]),assign(rodinpos('BinaryTreeTest1',act3,'+'),[identifier(none,bAsSet)],[union(none,event_b_comprehension_set(none,[identifier(none,p),identifier(none,v)],couple(none,[union(none,event_b_comprehension_set(none,[identifier(none,x),identifier(none,y)],couple(none,[add(none,identifier(none,x),integer(none,1)),identifier(none,y)]),member(none,couple(none,[identifier(none,x),identifier(none,y)]),identifier(none,p))),set_extension(none,[couple(none,[integer(none,0),integer(none,0)])])),identifier(none,v)]),member(none,couple(none,[identifier(none,p),identifier(none,v)]),identifier(none,aAsSet))),union(none,event_b_comprehension_set(none,[identifier(none,p),identifier(none,v)],couple(none,[union(none,event_b_comprehension_set(none,[identifier(none,x),identifier(none,y)],couple(none,[add(none,identifier(none,x),integer(none,1)),identifier(none,y)]),member(none,couple(none,[identifier(none,x),identifier(none,y)]),identifier(none,p))),set_extension(none,[couple(none,[integer(none,0),integer(none,1)])])),identifier(none,v)]),member(none,couple(none,[identifier(none,p),identifier(none,v)]),identifier(none,bAsSet))),set_extension(none,[couple(none,[empty_set(none),identifier(none,e)])])))])],[])])])],[],[exporter_version(3),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv1)],false),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv2)],false),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv3)],true),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv4)],true),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv5)],false),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv6)],false),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv7)],true),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv8)],true),po('BinaryTreeTest1','Invariant  establishment',[event('INITIALISATION'),invariant(inv9)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addA),invariant(inv1)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addA),invariant(inv3)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addA),invariant(inv5)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addA),invariant(inv7)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addA),invariant(inv9)],false),po('BinaryTreeTest1','Well-definedness of action',[action(act2)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addB),invariant(inv2)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addB),invariant(inv4)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addB),invariant(inv6)],false),po('BinaryTreeTest1','Invariant  preservation',[event(addB),invariant(inv8)],false),po('BinaryTreeTest1','Well-definedness of action',[action(act2)],false),theory(theory_name('MathExtensions','BoolOps'),[],[],[],[operator('AND',[argument(a,bool_set(none)),argument(b,bool_set(none))],disjunct(none,conjunct(none,equal(none,identifier(none,a),boolean_true(none)),equal(none,identifier(none,b),boolean_true(none))),disjunct(none,negation(none,equal(none,identifier(none,a),boolean_true(none))),negation(none,equal(none,identifier(none,b),boolean_true(none))))),[convert_bool(none,conjunct(none,equal(none,identifier(none,a),boolean_true(none)),equal(none,identifier(none,b),boolean_true(none))))],[]),operator('OR',[argument(a,bool_set(none)),argument(b,bool_set(none))],disjunct(none,equal(none,identifier(none,a),boolean_true(none)),disjunct(none,equal(none,identifier(none,b),boolean_true(none)),conjunct(none,negation(none,equal(none,identifier(none,a),boolean_true(none))),negation(none,equal(none,identifier(none,b),boolean_true(none)))))),[convert_bool(none,disjunct(none,equal(none,identifier(none,a),boolean_true(none)),equal(none,identifier(none,b),boolean_true(none))))],[]),operator('NOT',[argument(a,bool_set(none))],truth(none),[convert_bool(none,negation(none,equal(none,identifier(none,a),boolean_true(none))))],[])],[],[]),theory(theory_name('MathExtensions','FixPoint'),[],['S'],[],[operator(fix,[argument(f,pow_subset(none,cartesian_product(none,pow_subset(none,identifier(none,'S')),pow_subset(none,identifier(none,'S')))))],conjunct(none,forall(none,[identifier(none,s)],implication(none,truth(none),conjunct(none,member(none,identifier(none,s),domain(none,identifier(none,f))),member(none,identifier(none,f),partial_function(none,pow_subset(none,identifier(none,'S')),pow_subset(none,identifier(none,'S'))))))),not_equal(none,event_b_comprehension_set(none,[identifier(none,s)],identifier(none,s),subset(none,function(none,identifier(none,f),[identifier(none,s)]),identifier(none,s))),empty_set(none))),[general_intersection(none,event_b_comprehension_set(none,[identifier(none,s)],identifier(none,s),subset(none,function(none,identifier(none,f),[identifier(none,s)]),identifier(none,s))))],[])],[],[]),theory(theory_name('MathExtensions',closure),[theory_name('MathExtensions','FixPoint')],['S'],[],[operator(cls,[argument(r,pow_subset(none,cartesian_product(none,identifier(none,'S'),identifier(none,'S'))))],conjunct(none,forall(none,[identifier(none,s)],implication(none,truth(none),conjunct(none,member(none,identifier(none,s),domain(none,event_b_comprehension_set(none,[identifier(none,s)],couple(none,[identifier(none,s),union(none,identifier(none,r),composition(none,identifier(none,s),identifier(none,r)))]),member(none,identifier(none,s),pow_subset(none,cartesian_product(none,identifier(none,'S'),identifier(none,'S'))))))),member(none,event_b_comprehension_set(none,[identifier(none,s)],couple(none,[identifier(none,s),union(none,identifier(none,r),composition(none,identifier(none,s),identifier(none,r)))]),member(none,identifier(none,s),pow_subset(none,cartesian_product(none,identifier(none,'S'),identifier(none,'S'))))),partial_function(none,pow_subset(none,cartesian_product(none,identifier(none,'S'),identifier(none,'S'))),pow_subset(none,cartesian_product(none,identifier(none,'S'),identifier(none,'S')))))))),not_equal(none,event_b_comprehension_set(none,[identifier(none,s)],identifier(none,s),subset(none,function(none,event_b_comprehension_set(none,[identifier(none,s)],couple(none,[identifier(none,s),union(none,identifier(none,r),composition(none,identifier(none,s),identifier(none,r)))]),member(none,identifier(none,s),pow_subset(none,cartesian_product(none,identifier(none,'S'),identifier(none,'S'))))),[identifier(none,s)]),identifier(none,s))),empty_set(none))),[extended_expr(none,fix,[event_b_comprehension_set(none,[identifier(none,s)],couple(none,[identifier(none,s),union(none,identifier(none,r),composition(none,identifier(none,s),identifier(none,r)))]),member(none,identifier(none,s),pow_subset(none,cartesian_product(none,identifier(none,'S'),identifier(none,'S')))))],[])],[])],[],[tag(cls,closure1)]),theory(theory_name('MathExtensions','List'),[],['S','T'],[datatype('List',[identifier(none,'T')],[constructor(nil,[]),constructor(cons,[destructor(head,identifier(none,'T')),destructor(tail,extended_expr(none,'List',[identifier(none,'T')],[]))])])],[operator(listSize,[argument(l,extended_expr(none,'List',[identifier(none,'T')],[]))],truth(none),[],[case(l,[],extended_expr(none,nil,[],[]),integer(none,0)),case(l,[l0,x],extended_expr(none,cons,[identifier(none,x),identifier(none,l0)],[]),add(none,integer(none,1),extended_expr(none,listSize,[identifier(none,l0)],[])))]),operator(append,[argument(l,extended_expr(none,'List',[identifier(none,'T')],[])),argument(x,identifier(none,'T'))],truth(none),[],[case(l,[],extended_expr(none,nil,[],[]),extended_expr(none,cons,[identifier(none,x),extended_expr(none,nil,[],[])],[])),case(l,[l0,x0],extended_expr(none,cons,[identifier(none,x0),identifier(none,l0)],[]),extended_expr(none,cons,[identifier(none,x0),extended_expr(none,append,[identifier(none,l0),identifier(none,x)],[])],[]))]),operator(rev,[argument(l,extended_expr(none,'List',[identifier(none,'T')],[]))],truth(none),[],[case(l,[],extended_expr(none,nil,[],[]),extended_expr(none,nil,[],[])),case(l,[l0,x],extended_expr(none,cons,[identifier(none,x),identifier(none,l0)],[]),extended_expr(none,append,[extended_expr(none,rev,[identifier(none,l0)],[]),identifier(none,x)],[]))]),operator(comp,[argument(l,extended_expr(none,'List',[identifier(none,'T')],[])),argument(f,pow_subset(none,cartesian_product(none,identifier(none,'T'),identifier(none,'S'))))],truth(none),[],[case(l,[],extended_expr(none,nil,[],[]),extended_expr(none,nil,[],[])),case(l,[l0,x],extended_expr(none,cons,[identifier(none,x),identifier(none,l0)],[]),extended_expr(none,cons,[function(none,identifier(none,f),[identifier(none,x)]),extended_expr(none,comp,[identifier(none,l0),identifier(none,f)],[])],[]))]),operator(conc,[argument(l1,extended_expr(none,'List',[identifier(none,'T')],[])),argument(l2,extended_expr(none,'List',[identifier(none,'T')],[]))],truth(none),[],[case(l1,[],extended_expr(none,nil,[],[]),identifier(none,l2)),case(l1,[l0,x],extended_expr(none,cons,[identifier(none,x),identifier(none,l0)],[]),extended_expr(none,cons,[identifier(none,x),extended_expr(none,conc,[identifier(none,l0),identifier(none,l2)],[])],[]))]),operator(flatten,[argument(l,extended_expr(none,'List',[extended_expr(none,'List',[identifier(none,'T')],[])],[]))],truth(none),[],[case(l,[],extended_expr(none,nil,[],[]),extended_expr(none,nil,[],[])),case(l,[l0,ll0],extended_expr(none,cons,[identifier(none,l0),identifier(none,ll0)],[]),extended_expr(none,conc,[identifier(none,l0),extended_expr(none,flatten,[identifier(none,ll0)],[])],[]))])],[],[]),theory(theory_name('TheoryTests',listHelper),[theory_name('MathExtensions','List')],['T'],[],[operator(atPos,[argument(l,extended_expr(none,'List',[identifier(none,'T')],[])),argument(p,integer_set(none)),argument(x,identifier(none,'T'))],truth(none),[],[case(l,[],extended_expr(none,nil,[],[]),falsity(none)),case(l,[h,t],extended_expr(none,cons,[identifier(none,h),identifier(none,t)],[]),disjunct(none,conjunct(none,equal(none,identifier(none,p),integer(none,0)),equal(none,identifier(none,h),identifier(none,x))),conjunct(none,greater(none,identifier(none,p),integer(none,0)),extended_pred(none,atPos,[identifier(none,t),minus(none,identifier(none,p),integer(none,1)),identifier(none,x)],[]))))])],[],[]),theory(theory_name('MathExtensions','BinaryTree'),[],['T'],[datatype('Tree',[identifier(none,'T')],[constructor(empty,[]),constructor(tree,[destructor(left,extended_expr(none,'Tree',[identifier(none,'T')],[])),destructor(val,identifier(none,'T')),destructor(right,extended_expr(none,'Tree',[identifier(none,'T')],[]))])])],[operator(treeDepth,[argument(t,extended_expr(none,'Tree',[identifier(none,'T')],[]))],truth(none),[],[case(t,[],extended_expr(none,empty,[],[]),integer(none,0)),case(t,[l,r,v],extended_expr(none,tree,[identifier(none,l),identifier(none,v),identifier(none,r)],[]),add(none,integer(none,1),max(none,set_extension(none,[extended_expr(none,treeDepth,[identifier(none,l)],[]),extended_expr(none,treeDepth,[identifier(none,r)],[])]))))]),operator(mirror,[argument(t,extended_expr(none,'Tree',[identifier(none,'T')],[]))],truth(none),[],[case(t,[],extended_expr(none,empty,[],[]),extended_expr(none,empty,[],[])),case(t,[l,r,v],extended_expr(none,tree,[identifier(none,l),identifier(none,v),identifier(none,r)],[]),extended_expr(none,tree,[extended_expr(none,mirror,[identifier(none,r)],[]),identifier(none,v),extended_expr(none,mirror,[identifier(none,l)],[])],[]))])],[],[]),theory(theory_name('TheoryTests',binaryTreeHelper),[theory_name('MathExtensions','BinaryTree')],['T'],[],[operator(treeHasValues,[argument(values,pow_subset(none,cartesian_product(none,pow_subset(none,cartesian_product(none,integer_set(none),integer_set(none))),identifier(none,'T')))),argument(t,extended_expr(none,'Tree',[identifier(none,'T')],[]))],truth(none),[],[case(t,[],extended_expr(none,empty,[],[]),equal(none,identifier(none,values),empty_set(none))),case(t,[l,r,v],extended_expr(none,tree,[identifier(none,l),identifier(none,v),identifier(none,r)],[]),conjunct(none,member(none,couple(none,[empty_set(none),identifier(none,v)]),identifier(none,values)),conjunct(none,extended_pred(none,treeHasValues,[event_b_comprehension_set(none,[identifier(none,p),identifier(none,x)],couple(none,[event_b_comprehension_set(none,[identifier(none,a),identifier(none,b)],couple(none,[minus(none,identifier(none,a),integer(none,1)),identifier(none,b)]),conjunct(none,member(none,couple(none,[identifier(none,a),identifier(none,b)]),identifier(none,p)),greater(none,identifier(none,a),integer(none,0)))),identifier(none,x)]),conjunct(none,member(none,couple(none,[identifier(none,p),identifier(none,x)]),identifier(none,values)),member(none,couple(none,[integer(none,0),integer(none,0)]),identifier(none,p)))),identifier(none,l)],[]),extended_pred(none,treeHasValues,[event_b_comprehension_set(none,[identifier(none,p),identifier(none,x)],couple(none,[event_b_comprehension_set(none,[identifier(none,a),identifier(none,b)],couple(none,[minus(none,identifier(none,a),integer(none,1)),identifier(none,b)]),conjunct(none,member(none,couple(none,[identifier(none,a),identifier(none,b)]),identifier(none,p)),greater(none,identifier(none,a),integer(none,0)))),identifier(none,x)]),conjunct(none,member(none,couple(none,[identifier(none,p),identifier(none,x)]),identifier(none,values)),member(none,couple(none,[integer(none,0),integer(none,1)]),identifier(none,p)))),identifier(none,r)],[]))))])],[],[]),theory(theory_name('Data','SUMandPRODUCT'),[],['T'],[],[],[axiomatic_def_block(xdb1,[],[opdef('SUM',[argument(s,pow_subset(none,cartesian_product(none,identifier(none,'T'),integer_set(none))))],[]),opdef('PRODUCT',[argument(s,pow_subset(none,cartesian_product(none,identifier(none,'T'),integer_set(none))))],[])],[equal(none,extended_expr(none,'SUM',[event_b_comprehension_set(none,[identifier(none,p)],identifier(none,p),conjunct(none,member(none,identifier(none,p),cartesian_product(none,identifier(none,'T'),integer_set(none))),falsity(none)))],[]),integer(none,0)),forall(none,[identifier(none,t),identifier(none,x)],implication(none,conjunct(none,member(none,identifier(none,t),identifier(none,'T')),member(none,identifier(none,x),integer_set(none))),equal(none,extended_expr(none,'SUM',[set_extension(none,[couple(none,[identifier(none,t),identifier(none,x)])])],[]),identifier(none,x)))),forall(none,[identifier(none,s),identifier(none,t)],implication(none,conjunct(none,member(none,identifier(none,s),partial_function(none,identifier(none,'T'),integer_set(none))),conjunct(none,member(none,identifier(none,t),partial_function(none,identifier(none,'T'),integer_set(none))),conjunct(none,finite(none,identifier(none,s)),conjunct(none,finite(none,identifier(none,t)),equal(none,intersection(none,domain(none,identifier(none,s)),domain(none,identifier(none,t))),empty_set(none)))))),equal(none,extended_expr(none,'SUM',[union(none,identifier(none,s),identifier(none,t))],[]),add(none,extended_expr(none,'SUM',[identifier(none,s)],[]),extended_expr(none,'SUM',[identifier(none,t)],[]))))),equal(none,extended_expr(none,'PRODUCT',[event_b_comprehension_set(none,[identifier(none,p)],identifier(none,p),conjunct(none,member(none,identifier(none,p),cartesian_product(none,identifier(none,'T'),integer_set(none))),falsity(none)))],[]),integer(none,1)),forall(none,[identifier(none,t),identifier(none,x)],implication(none,conjunct(none,member(none,identifier(none,t),identifier(none,'T')),member(none,identifier(none,x),integer_set(none))),equal(none,extended_expr(none,'PRODUCT',[set_extension(none,[couple(none,[identifier(none,t),identifier(none,x)])])],[]),identifier(none,x)))),forall(none,[identifier(none,s),identifier(none,t)],implication(none,conjunct(none,member(none,identifier(none,s),partial_function(none,identifier(none,'T'),integer_set(none))),conjunct(none,member(none,identifier(none,t),partial_function(none,identifier(none,'T'),integer_set(none))),conjunct(none,finite(none,identifier(none,s)),conjunct(none,finite(none,identifier(none,t)),equal(none,intersection(none,domain(none,identifier(none,s)),domain(none,identifier(none,t))),empty_set(none)))))),equal(none,extended_expr(none,'PRODUCT',[union(none,identifier(none,s),identifier(none,t))],[]),multiplication(none,extended_expr(none,'PRODUCT',[identifier(none,s)],[]),extended_expr(none,'PRODUCT',[identifier(none,t)],[])))))])],[tag('SUM','SIGMA'),tag('PRODUCT','PI')])],_Error)).

