package(load_event_b_project([],[event_b_context(none,'RecOpTest',[extends(none,[]),constants(none,[identifier(none,a),identifier(none,b),identifier(none,c),identifier(none,d),identifier(none,s1),identifier(none,s2),identifier(none,t1),identifier(none,t2),identifier(none,t3)]),abstract_constants(none,[]),axioms(none,[partition(rodinpos('RecOpTest',axm1,','),identifier(none,'S'),[set_extension(none,[identifier(none,a)]),set_extension(none,[identifier(none,b)]),set_extension(none,[identifier(none,c)]),set_extension(none,[identifier(none,d)])]),equal(rodinpos('RecOpTest',axm2,'.'),identifier(none,s1),extended_expr(none,sCons,[set_extension(none,[identifier(none,a),identifier(none,c)]),extended_expr(none,sCons,[empty_set(none),extended_expr(none,sCons,[set_extension(none,[identifier(none,b),identifier(none,d)]),extended_expr(none,sNil,[],[])],[])],[])],[])),equal(rodinpos('RecOpTest',axm3,'0'),identifier(none,s2),extended_expr(none,sComplement,[identifier(none,s1)],[])),equal(rodinpos('RecOpTest',axm4,'2'),identifier(none,t1),extended_expr(none,head,[identifier(none,s2)],[])),equal(rodinpos('RecOpTest',axm5,'4'),identifier(none,t2),extended_expr(none,head,[extended_expr(none,tail,[identifier(none,s2)],[])],[])),equal(rodinpos('RecOpTest',axm6,'6'),identifier(none,t3),extended_expr(none,head,[extended_expr(none,tail,[extended_expr(none,tail,[identifier(none,s2)],[])],[])],[]))]),theorems(none,[equal(rodinpos('RecOpTest',axm7,'7'),identifier(none,t1),set_extension(none,[identifier(none,b),identifier(none,d)])),equal(rodinpos('RecOpTest',axm8,'8'),identifier(none,t2),identifier(none,'S')),equal(rodinpos('RecOpTest',axm9,'9'),identifier(none,t3),set_extension(none,[identifier(none,a),identifier(none,c)]))]),sets(none,[deferred_set(none,'S')])])],[exporter_version(3),po('RecOpTest','Well-definedness of Axiom',[axiom(axm4)],false),po('RecOpTest','Well-definedness of Axiom',[axiom(axm5)],false),po('RecOpTest','Well-definedness of Axiom',[axiom(axm6)],false),po('RecOpTest','Theorem',[axiom(axm7)],false),po('RecOpTest','Theorem',[axiom(axm8)],false),po('RecOpTest','Theorem',[axiom(axm9)],false),theory(theory_name('RecOpTypeRefTest','RecComplement'),[],['T'],[datatype('SetList',[identifier(none,'T')],[constructor(sNil,[]),constructor(sCons,[destructor(head,pow_subset(none,identifier(none,'T'))),destructor(tail,extended_expr(none,'SetList',[identifier(none,'T')],[]))])])],[operator(sComplement,[argument(x,extended_expr(none,'SetList',[identifier(none,'T')],[]))],truth(none),[],[case(x,[],extended_expr(none,sNil,[],[]),extended_expr(none,sNil,[],[])),case(x,[h,t],extended_expr(none,sCons,[identifier(none,h),identifier(none,t)],[]),extended_expr(none,sCons,[set_subtraction(none,identifier(none,'T'),identifier(none,h)),extended_expr(none,sComplement,[identifier(none,t)],[])],[]))])],[],[])],_Error)).

