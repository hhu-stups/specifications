package(load_event_b_project([],[event_b_context(none,'Test_If_Then_Else',[extends(none,[]),constants(none,[identifier(none,aa),identifier(none,bb),identifier(none,cc),identifier(none,xx)]),abstract_constants(none,[]),axioms(none,[partition(rodinpos('Test_If_Then_Else',axm1,'+'),identifier(none,'ID'),[set_extension(none,[identifier(none,aa)]),set_extension(none,[identifier(none,bb)]),set_extension(none,[identifier(none,cc)])]),equal(rodinpos('Test_If_Then_Else',axm3,'-'),identifier(none,xx),typeof(none,extended_expr(none,if,[convert_bool(none,not_equal(none,identifier(none,xx),identifier(none,aa))),identifier(none,bb),identifier(none,cc)],[]),identifier(none,'ID')))]),theorems(none,[forall(rodinpos('Test_If_Then_Else',axm2,','),[identifier(none,x)],implication(none,conjunct(none,member(none,identifier(none,x),integer_set(none)),member(none,identifier(none,x),interval(none,integer(none,0),integer(none,10)))),greater_equal(none,typeof(none,extended_expr(none,if,[convert_bool(none,equal(none,identifier(none,x),integer(none,0))),integer(none,1),div(none,integer(none,10),identifier(none,x))],[]),integer_set(none)),integer(none,1)))),equal(rodinpos('Test_If_Then_Else',axm4,'.'),identifier(none,xx),identifier(none,bb))]),sets(none,[deferred_set(none,'ID')])])],[exporter_version(3),po('Test_If_Then_Else','Well-definedness of Theorem',[axiom(axm2)],false),po('Test_If_Then_Else','Theorem',[axiom(axm2)],false),po('Test_If_Then_Else','Theorem',[axiom(axm4)],false),theory(theory_name('Theories',if_then_else),[],['A'],[],[operator(if,[argument(test,bool_set(none)),argument(then,identifier(none,'A')),argument(else,identifier(none,'A'))],conjunct(none,forall(none,[identifier(none,x)],implication(none,member(none,identifier(none,x),bool_set(none)),disjunct(none,conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_true(none))),disjunct(none,negation(none,member(none,identifier(none,x),bool_set(none))),negation(none,equal(none,identifier(none,test),boolean_true(none))))))),conjunct(none,forall(none,[identifier(none,x)],implication(none,member(none,identifier(none,x),bool_set(none)),disjunct(none,conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_false(none))),disjunct(none,negation(none,member(none,identifier(none,x),bool_set(none))),negation(none,equal(none,identifier(none,test),boolean_false(none))))))),conjunct(none,member(none,boolean_true(none),domain(none,union(none,event_b_comprehension_set(none,[identifier(none,x)],couple(none,[identifier(none,x),identifier(none,then)]),conjunct(none,member(none,identifier(none,x),bool_set(none)),conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_true(none))))),event_b_comprehension_set(none,[identifier(none,x)],couple(none,[identifier(none,x),identifier(none,else)]),conjunct(none,member(none,identifier(none,x),bool_set(none)),conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_false(none)))))))),member(none,union(none,event_b_comprehension_set(none,[identifier(none,x)],couple(none,[identifier(none,x),identifier(none,then)]),conjunct(none,member(none,identifier(none,x),bool_set(none)),conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_true(none))))),event_b_comprehension_set(none,[identifier(none,x)],couple(none,[identifier(none,x),identifier(none,else)]),conjunct(none,member(none,identifier(none,x),bool_set(none)),conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_false(none)))))),partial_function(none,bool_set(none),identifier(none,'A')))))),[function(none,union(none,event_b_comprehension_set(none,[identifier(none,x)],couple(none,[identifier(none,x),identifier(none,then)]),conjunct(none,member(none,identifier(none,x),bool_set(none)),conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_true(none))))),event_b_comprehension_set(none,[identifier(none,x)],couple(none,[identifier(none,x),identifier(none,else)]),conjunct(none,member(none,identifier(none,x),bool_set(none)),conjunct(none,member(none,identifier(none,x),bool_set(none)),equal(none,identifier(none,test),boolean_false(none)))))),[boolean_true(none)])],[])],[],[])],_Error)).

